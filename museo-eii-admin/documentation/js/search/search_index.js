var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddCompComponent.html",[0,0.105,1,0.627]],["body/components/AddCompComponent.html",[0,0.092,1,0.784,2,0.703,3,0.132,4,0.132,5,0.478,6,0.478,7,0.478,8,0.478,9,0.132,10,5.16,11,4.509,12,1.512,13,0.478,14,1.02,15,0.478,16,0.478,17,1.585,18,1.468,19,1.202,20,0.998,21,0.76,22,2.993,23,0.76,24,2.404,25,0.132,26,0.545,27,1.62,28,2.334,29,2.616,30,2.993,31,2.155,32,3.723,33,1.72,34,2.334,35,1.187,36,2.679,37,4.157,38,3.566,39,0.311,40,2.404,41,2.865,42,4.064,43,2.659,44,1.874,45,1.163,46,2.981,47,2.659,48,0.292,49,1.801,50,2.544,51,2.076,52,1.76,53,2.006,54,1.76,55,2.403,56,2.334,57,2.659,58,0.589,59,0.613,60,1.512,61,0.601,62,0.03,63,0.634,64,0.599,65,0.601,66,2.404,67,1.439,68,1.512,69,2.792,70,1.786,71,2.335,72,4.063,73,2.981,74,1.111,75,2.053,76,4.314,77,0.558,78,0.911,79,2.865,80,1.801,81,0.026,82,1.439,83,1.801,84,3.566,85,1.846,86,1.859,87,0.837,88,2.189,89,2.404,90,2.865,91,2.865,92,1.072,93,2.769,94,1.167,95,1.167,96,2.155,97,1.874,98,2.389,99,1.989,100,2.928,101,3.723,102,2.404,103,2.404,104,1.801,105,1.301,106,1.543,107,2.622,108,2.981,109,2.108,110,1.98,111,1.529,112,2.865,113,1.459,114,1.254,115,1.694,116,4.064,117,1.874,118,2.865,119,2.404,120,1.993,121,1.801,122,1.029,123,1.801,124,1.801,125,2.101,126,2.145,127,1.543,128,0.992,129,2.101,130,1.801,131,2.101,132,2.404,133,2.145,134,2.101,135,3.241,136,2.902,137,2.404,138,2.404,139,2.101,140,1.512,141,1.512,142,1.512,143,0.884,144,1.801,145,1.801,146,2.055,147,0.929,148,4.157,149,3.964,150,2.404,151,2.404,152,2.993,153,1.801,154,0.878,155,1.801,156,1.801,157,1.801,158,1.801,159,2.865,160,1.512,161,0.575,162,0.266,163,1.512,164,0.97,165,0.818,166,0.818,167,0.647,168,0.889,169,0.97,170,0.97,171,1.543,172,0.97,173,0.97,174,0.97,175,0.97,176,0.755,177,1.179,178,0.698,179,0.889,180,0.132,181,0.024,182,0.409,183,1.801,184,1.321,185,0.889,186,0.818,187,0.021,188,0.818,189,0.818,190,2.101,191,2.101,192,1.321,193,2.101,194,1.512,195,1.512,196,1.179,197,1.512,198,1.512,199,1.512,200,0.755,201,1.459,202,3.566,203,1.801,204,3.566,205,1.321,206,1.512,207,1.321,208,1.065,209,2.622,210,1.801,211,2.865,212,2.865,213,2.865,214,2.865,215,2.993,216,2.865,217,2.404,218,2.865,219,2.865,220,2.865,221,2.101,222,2.337,223,3.964,224,2.865,225,2.404,226,2.404,227,2.865,228,2.404,229,2.404,230,1.801,231,1.694,232,1.495,233,1.76,234,1.321,235,2.981,236,1.321,237,1.512,238,1.512,239,1.321,240,1.179,241,1.179,242,1.179,243,1.179,244,1.694,245,1.801,246,1.512,247,0.6,248,1.512,249,1.321,250,1.512,251,1.801,252,1.321,253,1.801,254,1.801,255,2.404,256,2.404,257,1.512,258,1.512,259,1.512,260,3.411,261,1.495,262,1.874,263,1.179,264,1.065,265,2.006,266,2.659,267,2.659,268,2.189,269,2.403,270,1.846,271,3.411,272,1.201,273,1.512,274,1.512,275,1.321,276,1.512,277,1.321,278,1.065,279,1.874,280,1.512,281,1.512,282,1.512,283,1.512,284,1.801,285,1.801,286,1.512,287,1.321,288,0.889,289,0.818,290,0.889,291,0.889,292,1.512,293,1.801,294,1.065,295,1.179,296,0.97,297,2.993,298,1.321,299,1.321,300,1.512,301,1.512,302,2.404,303,2.659,304,2.404,305,1.512,306,2.404,307,1.512,308,0.6,309,2.101,310,2.101,311,2.101,312,0.478,313,0.76,314,0.76,315,0.478,316,1.078,317,0.478,318,0.478,319,0.76,320,0.348,321,0.946,322,0.377,323,0.478,324,0.377,325,0.478,326,0.377,327,0.442,328,0.478,329,0.377,330,0.508,331,0.478,332,0.377,333,0.478,334,0.348,335,0.65,336,0.348,337,0.348,338,0.409,339,0.478,340,0.348,341,0.478,342,0.377,343,0.478,344,0.348,345,0.478,346,0.348,347,0.377,348,0.478,349,0.478,350,0.478,351,0.008,352,0.013,353,0.008,354,0.008]],["title/components/AddPeriodComponent.html",[0,0.105,320,0.627]],["body/components/AddPeriodComponent.html",[0,0.137,1,0.593,2,0.754,3,0.226,4,0.226,5,0.815,6,0.815,7,0.815,8,0.815,9,0.226,10,5.061,13,0.815,14,1.404,15,0.815,16,0.815,17,1.725,18,1.597,19,1.39,20,0.754,21,1.132,23,1.132,25,0.226,26,0.573,31,2.057,33,1.902,35,1.633,36,3.061,39,0.463,44,2.794,45,1.517,47,3.469,48,0.498,51,2.417,52,2.422,53,2.617,56,3.21,57,3.469,58,0.57,59,0.581,61,0.631,62,0.03,63,0.573,64,0.537,65,0.631,70,1.774,71,2.686,72,3.131,77,0.532,78,0.869,81,0.022,82,1.301,86,1.79,87,0.757,92,1.309,94,0.969,95,0.969,99,1.533,100,1.817,105,1.939,110,1.79,111,1.636,113,1.533,114,1.318,126,1.939,128,0.824,133,1.396,137,3.583,146,1.904,147,0.894,154,1.147,161,0.626,162,0.454,165,1.396,166,1.396,167,1.104,168,1.517,169,1.655,178,1.191,179,1.517,180,0.226,181,0.041,182,0.698,184,2.254,185,1.517,186,1.396,187,0.023,188,1.396,189,1.396,200,1.288,201,1.533,235,4.086,262,2.011,263,2.011,264,1.817,265,2.107,266,2.794,267,2.794,268,2.3,269,2.524,270,1.939,279,2.011,288,1.517,289,1.396,290,1.517,291,1.517,294,2.901,295,2.011,308,0.644,312,0.815,313,1.132,314,1.132,315,0.815,316,1.406,317,0.815,318,0.815,319,1.132,320,1.023,321,1.301,322,0.644,323,0.815,324,0.644,325,0.815,326,0.644,327,0.754,328,0.815,329,0.644,330,0.757,331,0.815,332,0.644,333,0.815,334,0.593,335,0.969,336,0.593,337,0.593,338,0.698,339,0.815,340,0.593,341,0.815,342,0.644,343,0.815,344,0.593,345,0.815,346,0.593,347,0.644,348,0.815,349,0.815,350,0.815,351,0.014,352,0.019,353,0.014,354,0.014,355,4.423,356,2.579,357,3.598,358,3.131,359,2.579,360,4.27,361,3.583,362,3.073,363,1.318,364,3.073,365,3.073,366,4.27,367,3.131,368,2.794,369,2.524,370,3.073,371,2.579,372,2.579,373,3.073,374,2.254,375,3.073,376,2.254,377,2.254,378,2.254,379,2.254]],["title/components/AppComponent.html",[0,0.105,322,0.681]],["body/components/AppComponent.html",[0,0.17,1,0.823,2,1.047,3,0.313,4,0.313,5,1.131,6,1.131,7,1.131,8,1.131,9,0.313,15,1.131,16,1.131,17,1.787,18,1.654,19,1.202,20,1.047,21,1.405,23,1.405,25,0.313,26,0.711,58,0.411,59,0.411,62,0.03,64,0.411,67,1.131,81,0.019,82,1.131,87,0.939,92,0.968,94,0.968,95,0.968,128,0.823,147,1.11,154,0.755,161,0.463,162,0.631,180,0.313,181,0.057,187,0.019,312,1.131,313,1.405,314,1.405,315,1.131,316,1.598,317,1.131,318,1.131,319,1.405,320,0.823,321,1.528,322,1.263,323,1.131,324,0.893,325,1.131,326,0.893,327,1.047,328,1.131,329,0.893,330,0.939,331,1.131,332,0.893,333,1.131,334,0.823,335,1.202,336,0.823,337,0.823,338,0.968,339,1.131,340,0.823,341,1.131,342,0.893,343,1.131,344,0.823,345,1.131,346,0.823,347,0.893,348,1.131,349,1.131,350,1.131,351,0.019,352,0.023,353,0.019,354,0.019,380,4.264,381,2.853,382,5.763,383,5.297,384,5.763,385,4.446,386,5.297,387,5.297,388,4.264]],["title/modules/AppModule.html",[389,2.728,390,2.126]],["body/modules/AppModule.html",[1,1.147,3,0.25,4,0.25,9,0.25,11,2.491,18,0.834,19,1.038,20,0.834,62,0.03,81,0.015,87,0.81,154,0.602,161,0.732,162,0.502,164,1.829,165,1.543,166,1.543,168,2.257,169,1.829,180,0.25,181,0.045,187,0.015,320,1.147,322,1.346,324,1.245,326,1.245,327,0.834,329,1.245,330,0.98,332,1.245,334,1.147,335,1.038,336,1.147,337,1.147,338,0.771,340,1.147,342,1.245,344,1.147,346,1.147,347,1.245,351,0.015,352,0.02,353,0.015,354,0.015,355,2.491,390,4.448,391,2.222,392,3.353,393,2.85,394,2.85,395,2.85,396,2.85,397,3.513,398,2.85,399,2.85,400,2.85,401,3.396,402,3.396,403,3.396,404,3.396,405,3.396,406,5.168,407,4.572,408,3.837,409,2.491,410,3.837,411,4.572,412,2.008,413,4.572,414,4.572,415,4.572,416,3.396,417,3.396,418,3.396,419,2.85,420,3.837,421,4.572,422,2.85,423,2.85,424,3.837,425,3.396,426,3.837,427,2.491,428,2.491,429,2.85,430,3.396,431,2.85,432,4.572,433,2.85,434,4.572,435,3.396,436,2.491,437,2.85,438,2.85,439,2.491,440,2.85,441,2.85,442,3.396,443,1.676,444,1.829,445,4.572,446,1.676,447,4.572,448,2.222,449,3.837,450,2.491,451,2.491,452,4.572,453,2.491,454,2.491,455,3.396,456,3.396,457,2.85,458,3.396,459,3.396,460,3.396]],["title/classes/AppPage.html",[181,0.044,461,2.728]],["body/classes/AppPage.html",[3,0.36,4,0.36,9,0.36,25,0.36,39,0.625,58,0.555,59,0.555,62,0.03,77,0.625,81,0.022,161,0.531,180,0.36,181,0.066,187,0.022,308,1.206,351,0.022,352,0.025,353,0.022,354,0.022,381,2.634,409,3.587,461,4.831,462,2.414,463,4.891,464,6.314,465,6.314,466,4.891,467,5.476,468,4.891,469,4.105,470,4.891,471,4.891,472,4.891,473,3.2,474,4.891]],["title/modules/AppRoutingModule.html",[389,2.728,397,1.921]],["body/modules/AppRoutingModule.html",[0,0.208,1,1.017,3,0.311,4,0.311,9,0.311,11,3.104,19,1.197,62,0.03,81,0.019,161,0.716,162,0.626,167,1.52,180,0.311,181,0.057,187,0.019,247,1.409,269,2.502,296,2.28,320,1.017,334,1.017,335,1.197,336,1.017,337,1.017,338,0.961,340,1.017,344,1.017,346,1.017,351,0.019,352,0.023,353,0.019,354,0.019,355,3.104,391,2.769,397,3.117,410,4.425,419,3.552,420,4.425,426,4.425,427,3.104,428,3.104,436,3.104,437,3.552,438,3.552,439,3.104,440,3.552,457,3.552,475,4.232,476,4.232,477,4.82,478,5.273,479,4.781,480,4.232,481,4.232,482,6.519,483,5.273,484,5.426,485,4.232,486,4.232,487,3.104,488,4.232,489,4.232,490,4.232,491,4.232,492,4.232,493,4.232,494,4.232,495,4.232]],["title/guards/AuthGuard.html",[479,2.383,496,3.25]],["body/guards/AuthGuard.html",[3,0.329,4,0.329,9,0.329,25,0.329,36,3.195,39,0.592,48,0.726,54,2.695,58,0.526,59,0.526,61,0.808,62,0.03,63,0.733,64,0.526,65,0.808,77,0.486,81,0.02,143,1.382,161,0.665,162,0.662,167,1.608,180,0.329,181,0.06,182,1.017,187,0.02,200,1.878,201,1.608,247,1.491,308,1.144,351,0.02,352,0.024,353,0.02,354,0.02,363,1.685,381,2.412,467,4.583,479,4.004,484,5.276,497,4.479,498,5.89,499,4.479,500,4.479,501,3.78,502,4.479,503,4.479,504,6.132,505,5.89,506,6.132,507,4.479,508,5.89,509,5.89,510,2.695,511,2.648,512,3.285,513,2.931,514,4.479,515,3.759]],["title/components/CompInputsComponent.html",[0,0.105,324,0.681]],["body/components/CompInputsComponent.html",[0,0.092,1,0.346,2,0.44,3,0.21,4,0.132,5,0.476,6,0.476,7,0.476,8,0.476,9,0.132,13,0.476,14,1.018,15,0.476,16,0.757,17,1.584,18,1.466,19,0.648,20,1.26,21,0.757,23,0.757,25,0.261,26,0.383,28,2.327,29,2.608,31,1.491,39,0.31,45,1.16,48,0.577,58,0.581,59,0.627,61,0.655,62,0.03,63,0.786,64,0.558,65,0.655,67,1.493,69,2.397,70,1.835,73,2.094,74,1.917,75,2.183,77,0.574,78,0.876,81,0.028,82,1.516,86,0.752,87,0.506,88,1.538,92,0.807,93,2.663,94,0.648,95,0.648,96,2.361,97,2.653,99,1.589,102,2.985,103,2.396,105,1.842,106,1.538,110,1.491,111,1.765,114,1.844,115,1.06,117,3.235,120,1.379,126,0.815,127,0.966,128,0.99,131,2.094,133,1.615,134,3.246,135,3.547,139,2.094,146,1.025,147,0.849,154,0.318,161,0.386,162,0.265,175,2.184,176,0.752,180,0.132,181,0.024,182,0.407,185,0.885,186,0.815,187,0.024,188,0.815,189,0.815,190,2.094,191,1.316,192,1.316,193,1.316,217,1.506,221,2.608,222,1.379,232,1.976,233,2.001,252,3.246,261,2.152,264,1.06,275,2.974,277,2.094,298,1.316,303,1.868,308,0.745,312,0.476,313,0.757,314,0.757,315,0.476,316,1.174,317,0.476,318,0.476,319,0.757,320,0.346,321,0.943,322,0.376,323,0.476,324,0.849,325,0.476,326,0.376,327,0.44,328,0.476,329,0.376,330,0.506,331,0.476,332,0.376,333,0.476,334,0.346,335,0.648,336,0.346,337,0.346,338,0.807,339,0.476,340,0.346,341,0.476,342,0.376,343,0.476,344,0.346,345,0.476,346,0.346,347,0.376,348,0.943,349,0.476,350,0.476,351,0.008,352,0.013,353,0.008,354,0.008,363,1.455,369,3.329,433,5.091,469,2.396,473,1.174,516,6.067,517,1.506,518,2.985,519,2.396,520,3.557,521,2.327,522,3.557,523,2.855,524,2.855,525,5.133,526,3.403,527,3.403,528,2.855,529,2.396,530,2.855,531,1.688,532,2.985,533,2.855,534,1.506,535,1.794,536,1.794,537,1.794,538,2.855,539,1.794,540,3.403,541,4.427,542,3.957,543,3.403,544,2.396,545,2.855,546,4.715,547,1.794,548,4.945,549,2.396,550,4.427,551,4.427,552,4.715,553,1.794,554,1.794,555,2.974,556,4.727,557,3.403,558,1.794,559,3.957,560,1.794,561,2.855,562,3.957,563,1.794,564,4.715,565,2.855,566,3.403,567,4.055,568,2.855,569,2.396,570,1.794,571,2.653,572,4.341,573,2.396,574,2.855,575,2.855,576,2.397,577,1.868,578,2.855,579,1.794,580,3.557,581,3.715,582,3.246,583,3.246,584,4.427,585,2.396,586,2.855,587,1.794,588,1.868,589,1.794,590,2.855,591,2.855,592,1.794,593,2.765,594,1.794,595,0.815,596,0.885,597,0.966,598,1.316,599,1.316,600,1.506,601,1.688,602,1.794,603,1.794,604,1.794,605,1.794,606,2.855,607,1.506,608,1.794,609,1.794,610,2.855,611,1.794,612,2.855,613,2.855,614,4.715,615,2.855,616,2.855,617,1.794,618,1.794,619,1.794,620,1.794,621,1.06,622,1.794,623,3.557,624,2.855,625,2.396,626,1.794,627,1.794,628,2.855,629,1.794,630,1.794,631,1.794,632,2.855,633,1.794,634,1.794,635,2.855,636,2.855,637,2.855,638,1.794,639,1.794,640,1.794,641,1.506,642,1.794,643,1.506,644,1.916,645,1.794,646,1.688,647,1.506,648,1.794,649,1.506,650,1.794,651,3.557,652,1.794,653,1.794,654,1.794,655,1.794,656,1.794,657,1.794,658,1.794,659,1.794,660,1.794,661,2.855,662,1.794,663,1.794,664,1.794,665,1.794,666,1.506,667,1.794,668,1.794,669,1.794,670,3.685,671,3.685,672,2.396,673,2.855,674,2.653,675,4.055,676,2.653,677,2.855,678,2.855,679,2.855,680,2.855,681,1.794,682,2.103,683,1.868,684,2.396,685,1.794,686,2.327,687,1.794,688,1.794,689,1.794,690,1.06,691,1.688,692,1.794,693,1.794,694,1.316,695,1.316,696,1.794,697,1.794,698,1.794]],["title/classes/ComponentMock.html",[181,0.044,699,2.728]],["body/classes/ComponentMock.html",[3,0.137,4,0.137,9,0.137,25,0.137,26,0.395,27,1.656,35,0.62,39,0.319,58,0.529,59,0.607,61,0.742,62,0.03,63,0.674,64,0.435,65,0.742,70,1.627,75,2.076,77,0.581,78,0.33,81,0.028,85,1.656,87,0.734,92,0.828,94,1.139,95,0.423,99,1.309,106,1.964,110,2.245,111,1.125,113,1.309,114,1.479,120,2.076,122,1.309,127,2.582,128,0.36,133,2.583,136,2.71,143,0.908,146,2.121,161,0.396,164,1.004,172,1.004,173,1.004,174,1.004,175,1.004,176,0.781,180,0.137,181,0.025,187,0.018,222,2.126,223,4.958,225,4.958,229,4.958,247,0.979,261,2.629,265,1.8,272,2.384,278,2.156,288,1.8,303,3.504,308,1.172,351,0.008,352,0.013,353,0.008,354,0.008,462,0.92,511,1.102,555,3.515,581,3.061,597,1.004,607,4.958,644,1.585,699,2.47,700,4.102,701,1.864,702,3.927,703,3.061,704,2.47,705,2.158,706,2.47,707,1.925,708,2.47,709,2.47,710,4.142,711,4.142,712,2.47,713,5.908,714,5.09,715,5.09,716,3.647,717,3.647,718,3.647,719,5.908,720,3.647,721,3.647,722,3.647,723,3.647,724,3.647,725,3.647,726,3.647,727,3.647,728,3.647,729,3.927,730,3.647,731,3.647,732,3.647,733,3.647,734,3.647,735,3.647,736,4.023,737,3.647,738,4.793,739,5.908,740,5.908,741,5.908,742,4.793,743,4.793,744,5.908,745,5.355,746,4.793,747,4.793,748,4.793,749,5.355,750,3.647,751,5.355,752,4.793,753,3.647,754,5.908,755,3.647,756,5.687,757,4.023,758,3.647,759,3.647,760,5.908,761,5.355,762,4.023,763,3.647,764,3.647,765,3.647,766,3.647,767,3.647,768,3.647,769,3.647,770,3.647,771,3.647,772,4.793,773,3.647,774,3.647,775,4.793,776,3.647,777,4.793,778,3.061,779,4.793,780,3.647,781,3.647,782,4.773,783,3.061,784,3.647,785,3.061,786,3.647,787,3.647,788,3.647,789,3.647,790,3.647,791,3.061,792,3.647,793,3.647,794,3.647,795,4.793,796,4.793,797,3.647,798,3.647,799,3.647,800,5.355,801,5.687,802,3.647,803,3.647,804,3.647,805,3.647,806,3.647,807,3.647,808,3.647,809,3.061,810,3.647,811,3.647,812,3.647,813,3.647,814,4.793,815,4.793,816,3.647,817,3.647,818,3.647,819,4.793,820,4.773,821,3.061,822,3.061,823,3.647,824,3.647,825,3.647,826,3.647,827,3.647,828,3.647,829,3.647,830,3.061,831,1.864,832,2.47,833,1.864,834,2.47,835,1.864,836,2.47,837,2.47,838,1.864,839,2.158,840,1.864,841,2.943,842,1.864,843,2.943,844,1.864,845,1.864,846,1.864,847,2.47,848,1.864,849,1.367,850,1.864,851,1.864,852,1.864,853,1.367,854,1.864,855,1.864,856,1.864,857,1.864,858,1.864,859,1.864,860,3.061,861,1.864,862,3.476,863,2.156,864,2.943,865,2.943,866,1.864,867,2.943,868,3.476,869,2.47]],["title/injectables/ComponentService.html",[50,1.75,510,1.604]],["body/injectables/ComponentService.html",[3,0.287,4,0.287,9,0.287,25,0.287,26,0.673,27,2.652,39,0.544,48,0.634,50,2.7,58,0.62,59,0.62,61,0.941,62,0.03,63,0.854,64,0.613,65,0.941,77,0.682,81,0.017,94,0.887,95,0.887,120,2.436,122,2.356,128,0.754,136,3.821,161,0.655,162,0.578,164,2.104,176,1.638,180,0.287,181,0.052,187,0.017,200,1.638,308,1.316,351,0.017,352,0.022,353,0.017,354,0.017,381,2.104,448,2.556,510,2.474,513,2.556,595,1.775,596,1.928,704,4.207,705,3.676,706,4.207,707,3.28,708,4.207,709,4.207,712,4.207,832,4.207,834,4.207,836,4.645,837,4.207,847,4.207,849,2.865,870,2.556,871,3.907,872,3.622,873,2.865,874,4.282,875,5.013,876,3.676,877,3.907,878,3.907,879,3.907,880,5.013,881,3.907,882,5.013,883,3.907,884,5.013,885,3.907,886,3.279,887,3.907,888,3.676,889,3.907,890,3.907,891,3.907,892,3.907,893,3.907,894,3.907,895,3.907,896,3.907]],["title/components/ConfirmationDialogComponent.html",[0,0.105,326,0.681]],["body/components/ConfirmationDialogComponent.html",[0,0.153,1,0.697,2,0.887,3,0.266,4,0.266,5,0.958,6,0.958,7,0.958,8,0.958,9,0.266,13,0.958,14,1.525,15,0.958,16,0.958,17,1.757,18,1.627,19,1.081,20,0.887,21,1.263,23,1.263,25,0.266,26,0.639,35,1.96,39,0.517,45,1.622,48,0.586,58,0.583,59,0.583,61,0.534,62,0.03,63,0.485,64,0.514,65,0.534,67,1.503,75,2.197,77,0.578,78,1.004,81,0.016,82,0.958,87,0.844,92,0.82,147,0.998,154,0.64,161,0.517,162,0.534,180,0.266,181,0.048,182,0.82,187,0.016,247,1.203,261,1.515,270,2.164,278,2.136,312,0.958,313,1.263,314,1.263,315,0.958,316,1.503,317,0.958,318,0.958,319,1.263,320,0.697,321,1.413,322,0.757,323,0.958,324,0.757,325,0.958,326,1.187,327,1.537,328,0.958,329,0.757,330,0.844,331,0.958,332,0.757,333,0.958,334,0.697,335,1.081,336,0.697,337,0.697,338,0.82,339,0.958,340,0.697,341,0.958,342,0.757,343,0.958,344,0.697,345,0.958,346,0.697,347,0.757,348,0.958,349,0.958,350,0.958,351,0.016,352,0.021,353,0.016,354,0.016,443,3.044,446,1.783,585,3.032,674,2.364,682,2.136,729,2.65,897,6.168,898,3.613,899,3.258,900,5.33,901,4.764,902,6.168,903,5.667,904,5.667,905,3.613,906,5.89,907,3.613,908,3.613,909,5.667,910,3.708,911,3.613,912,5.667,913,3.613,914,4.764,915,4.764,916,3.613,917,3.613,918,2.136,919,3.613,920,3.613,921,3.613,922,3.613,923,2.136,924,3.613,925,3.032,926,3.998,927,3.032,928,3.613]],["title/components/CpuTypeDetailsComponent.html",[0,0.105,329,0.681]],["body/components/CpuTypeDetailsComponent.html",[0,0.157,1,0.722,2,0.919,3,0.275,4,0.275,5,0.992,6,0.992,7,0.992,8,0.992,9,0.275,13,0.992,14,1.551,15,0.992,16,0.992,17,1.764,18,1.633,19,1.106,20,1.41,21,1.293,23,1.293,25,0.275,39,0.529,45,1.644,48,0.879,58,0.523,59,0.523,62,0.03,64,0.361,75,1.451,77,0.406,78,0.864,81,0.028,82,0.992,86,1.569,87,1.155,92,0.849,99,1.947,147,1.021,154,0.663,161,0.529,162,0.553,176,1.569,180,0.275,181,0.05,182,0.849,187,0.021,312,0.992,313,1.293,314,1.293,315,0.992,316,1.523,317,0.992,318,0.992,319,1.293,320,0.722,321,1.438,322,0.784,323,0.992,324,0.784,325,0.992,326,0.784,327,0.919,328,0.992,329,1.203,330,1.179,331,0.992,332,0.784,333,0.992,334,0.722,335,1.106,336,0.722,337,0.722,338,0.849,339,0.992,340,0.722,341,0.992,342,0.784,343,0.992,344,0.722,345,0.992,346,0.722,347,0.784,348,0.992,349,0.992,350,0.992,351,0.016,352,0.021,353,0.016,354,0.016,441,4.821,531,2.882,593,2.626,929,4.821,930,3.742,931,4.091,932,5.422,933,4.875,934,4.875,935,3.742,936,3.742,937,2.744,938,4.213,939,4.875,940,4.875,941,4.875,942,4.875,943,4.091,944,4.875,945,4.875,946,4.091,947,4.875,948,4.875,949,4.091,950,4.875,951,4.875,952,4.091,953,4.875,954,4.875,955,4.091,956,4.875]],["title/components/CpuTypeFormComponent.html",[0,0.105,332,0.681]],["body/components/CpuTypeFormComponent.html",[0,0.117,1,0.476,2,0.605,3,0.181,4,0.181,5,0.654,6,0.654,7,0.654,8,0.654,9,0.181,13,0.654,14,1.241,15,0.654,16,0.654,17,1.673,18,1.549,19,0.827,20,0.605,21,0.967,23,0.967,25,0.181,26,0.489,31,1.818,39,0.396,45,1.371,48,0.704,58,0.578,59,0.585,61,0.756,62,0.03,63,0.686,64,0.56,65,0.756,67,1.705,69,3.492,70,1.043,74,1.983,77,0.581,78,0.981,81,0.029,82,0.654,86,1.034,87,1.074,92,0.56,93,3.182,94,0.985,95,0.985,99,1.558,111,0.761,114,1.125,126,1.12,128,0.837,147,0.764,154,0.437,161,0.396,162,0.365,172,1.328,173,2.581,174,1.328,176,1.034,180,0.181,181,0.033,182,0.56,185,1.217,186,1.12,187,0.016,188,1.12,189,1.12,222,0.956,232,2.144,312,0.654,313,0.967,314,0.967,315,0.654,316,1.271,317,0.654,318,0.654,319,0.967,320,0.476,321,1.15,322,0.517,323,0.654,324,0.517,325,0.654,326,0.517,327,0.605,328,0.654,329,0.517,330,1.174,331,0.654,332,1.004,333,0.654,334,0.476,335,0.827,336,0.476,337,0.476,338,0.56,339,0.654,340,0.476,341,0.654,342,0.517,343,0.654,344,0.476,345,0.654,346,0.476,347,0.517,348,0.654,349,0.654,350,0.654,351,0.011,352,0.016,353,0.011,354,0.011,369,3.708,429,5.089,531,2.155,540,4.958,542,4.958,543,5.467,544,4.958,549,4.958,593,1.964,600,5.142,670,4.104,671,4.104,683,1.613,686,1.613,690,1.458,691,1.458,849,3.181,923,1.458,929,5.089,938,4.569,943,4.649,946,3.06,949,4.022,952,3.06,955,3.06,957,2.466,958,4.338,959,3.646,960,4.338,961,4.338,962,3.646,963,3.646,964,3.646,965,3.646,966,3.646,967,3.646,968,2.466,969,3.646,970,2.466,971,4.793,972,3.646,973,2.466,974,5.114,975,3.646,976,2.466,977,4.793,978,3.646,979,2.466,980,4.793,981,3.646,982,2.466,983,4.793,984,2.466,985,3.646,986,3.646,987,2.466,988,3.646,989,2.466,990,2.466,991,4.338,992,5.114,993,2.466,994,2.466,995,2.466,996,2.466,997,2.466,998,2.466,999,2.674,1000,3.646,1001,4.793,1002,3.646,1003,1.808,1004,2.466,1005,2.466]],["title/components/FormEditCompComponent.html",[0,0.105,334,0.627]],["body/components/FormEditCompComponent.html",[0,0.087,1,0.322,2,0.41,3,0.123,4,0.123,5,0.443,6,0.443,7,0.443,8,0.443,9,0.123,12,1.402,13,0.443,14,0.97,15,0.443,16,0.443,17,1.561,18,1.445,19,0.612,20,0.955,21,0.715,22,2.845,23,0.715,24,2.263,25,0.123,26,0.362,27,1.54,28,2.218,29,2.486,31,1.421,32,3.584,33,1.656,34,2.218,35,0.897,36,2.549,39,0.293,40,2.263,43,2.546,44,1.764,45,1.113,46,2.486,47,2.546,48,0.271,50,2.588,51,2.014,52,1.673,53,1.921,54,1.673,55,2.3,56,2.218,57,2.546,58,0.592,59,0.605,60,1.402,61,0.675,62,0.03,63,0.712,64,0.562,65,0.675,66,2.263,67,1.406,68,1.402,69,2.004,70,1.747,71,2.182,72,3.132,73,1.977,74,1.509,75,2.321,76,2.263,77,0.588,78,0.939,81,0.025,82,1.61,85,1.224,86,1.13,87,0.757,88,2.3,89,1.402,92,0.612,93,3.068,94,1.036,95,1.036,96,1.631,98,1.452,99,1.947,100,2.524,101,3.584,105,2.074,106,1.452,107,2.004,108,2.486,109,2.004,110,1.914,111,1.799,113,1.947,114,1.543,115,0.987,117,1.764,119,2.263,120,1.939,122,1.795,125,1.225,126,2.271,127,0.899,128,0.927,129,1.225,131,1.977,132,2.263,133,2.408,134,1.977,135,3.674,136,2.794,138,2.263,139,1.977,140,1.402,141,1.402,142,1.402,143,0.515,146,1.947,147,1.111,148,4.032,149,3.832,150,2.263,151,2.263,152,2.845,154,0.851,160,1.402,161,0.609,162,0.247,163,1.402,164,0.899,165,0.758,166,0.758,167,0.6,168,0.824,169,0.899,170,0.899,171,0.899,176,0.7,177,1.093,178,0.647,179,0.824,180,0.123,181,0.022,182,0.379,185,0.824,186,0.758,187,0.023,188,0.758,189,1.767,190,1.977,191,1.977,192,1.225,193,1.977,194,1.402,195,1.402,196,1.093,197,1.402,198,1.402,199,1.402,201,1.725,205,2.854,206,1.402,207,1.225,208,1.594,209,1.594,215,1.402,221,1.977,231,0.987,232,1.631,233,1.921,236,1.225,237,1.402,238,1.402,239,1.225,240,1.093,241,1.093,242,1.093,243,1.093,244,1.594,248,2.263,249,1.225,250,1.402,255,1.402,256,1.402,257,1.402,258,1.402,259,1.402,260,3.266,261,1.421,262,1.764,263,1.093,264,0.987,265,1.921,266,2.546,267,2.546,268,2.096,269,2.3,270,1.767,271,3.266,272,1.13,273,1.402,274,1.402,275,1.225,276,1.402,277,1.225,278,0.987,279,1.764,280,1.402,281,1.402,282,1.402,283,1.402,286,1.402,287,1.225,288,1.673,289,0.758,290,0.824,291,0.824,292,1.402,294,2.004,295,1.093,296,1.826,297,2.845,298,1.225,299,1.225,300,1.402,301,1.402,302,2.263,303,2.546,304,2.263,305,1.402,306,2.263,307,1.402,308,0.815,309,1.977,310,1.977,312,0.443,313,0.715,314,0.715,315,0.443,316,1.032,317,0.443,318,0.443,319,0.715,320,0.322,321,0.899,322,0.35,323,0.443,324,0.35,325,0.443,326,0.565,327,0.662,328,0.443,329,0.35,330,0.757,331,0.443,332,0.35,333,0.443,334,0.751,335,1.172,336,0.322,337,0.322,338,0.379,339,0.443,340,0.322,341,0.443,342,0.35,343,0.443,344,0.322,345,0.443,346,0.322,347,0.35,348,0.443,349,0.443,350,0.443,351,0.007,352,0.012,353,0.007,354,0.007,363,0.832,368,1.764,412,0.987,428,4.527,443,0.824,444,0.899,446,0.824,521,2.218,529,2.263,532,2.845,569,2.263,571,1.764,572,2.854,573,2.263,576,2.004,577,1.764,582,1.977,583,1.977,588,1.764,595,0.758,596,0.824,598,1.225,599,1.225,601,0.987,621,0.987,625,1.402,643,1.402,644,1.452,646,1.594,647,1.402,666,1.402,707,1.764,839,1.977,853,1.225,863,1.594,899,1.826,910,1.764,918,0.987,1006,5.18,1007,2.263,1008,2.854,1009,2.854,1010,1.093,1011,2.486,1012,2.854,1013,2.3,1014,1.67,1015,1.67,1016,1.67,1017,2.263,1018,2.84,1019,2.263,1020,2.263,1021,1.67,1022,2.696,1023,1.67,1024,1.977,1025,1.977,1026,2.486,1027,1.977,1028,2.486,1029,1.67,1030,1.67,1031,1.67,1032,1.67,1033,1.67,1034,1.67,1035,2.263,1036,1.67,1037,1.67,1038,1.67,1039,1.67,1040,1.67,1041,1.67,1042,1.402,1043,1.67,1044,1.093,1045,1.093,1046,1.093,1047,1.402,1048,1.402,1049,1.402,1050,2.263,1051,1.402,1052,1.764,1053,1.764,1054,1.764,1055,1.764,1056,1.764,1057,1.764,1058,1.764,1059,2.263,1060,1.977,1061,1.977,1062,1.093,1063,1.093,1064,1.093,1065,1.402,1066,1.093,1067,1.093,1068,1.093,1069,1.093,1070,1.093,1071,1.093,1072,1.093,1073,1.093,1074,2.263,1075,1.402,1076,1.67,1077,1.67,1078,1.402,1079,1.402,1080,1.402,1081,1.402,1082,1.67,1083,1.67,1084,1.67,1085,1.67,1086,1.67,1087,1.67,1088,1.402,1089,1.67,1090,1.67,1091,1.225,1092,0.987,1093,0.987,1094,1.225,1095,1.225,1096,1.225,1097,0.987,1098,0.987,1099,0.987,1100,1.977,1101,1.67,1102,1.67,1103,2.696]],["title/components/FormEditPeriodComponent.html",[0,0.105,336,0.627]],["body/components/FormEditPeriodComponent.html",[0,0.117,1,0.472,2,0.601,3,0.18,4,0.18,5,0.649,6,0.649,7,0.649,8,0.649,9,0.18,13,0.649,14,1.236,15,0.649,16,0.649,17,1.671,18,1.547,19,0.823,20,0.601,21,0.961,23,0.961,25,0.18,26,0.486,31,1.81,33,1.976,35,1.206,36,2.861,39,0.393,44,2.372,45,1.366,46,3.501,47,3.124,48,0.397,51,2.316,52,2.131,53,2.357,54,2.131,55,2.822,56,2.825,57,3.124,58,0.584,59,0.595,61,0.706,62,0.03,63,0.641,64,0.533,65,0.706,69,2.143,70,1.766,71,2.845,74,1.405,75,1.976,77,0.616,78,0.946,81,0.011,82,0.649,85,1.646,86,1.52,87,0.642,88,1.952,92,0.823,96,2.001,98,1.952,99,1.984,100,1.446,105,1.646,108,2.658,111,1.869,113,1.917,114,1.119,122,1.55,125,2.658,126,2.51,127,1.952,128,0.699,129,2.658,133,2.315,143,0.755,146,1.302,147,0.759,154,1.123,161,0.629,162,0.362,165,1.111,166,1.111,167,0.879,168,1.208,169,1.318,178,0.949,179,1.208,180,0.18,181,0.033,182,0.555,185,1.208,186,1.111,187,0.024,188,1.111,189,2.168,201,1.917,209,2.553,232,1.52,234,2.658,239,1.794,240,1.601,241,1.601,242,1.601,243,1.601,244,2.553,262,1.601,263,1.601,264,1.446,265,1.789,266,2.372,267,2.372,268,1.952,269,2.143,270,1.646,279,1.601,288,2.131,289,1.111,290,1.208,291,1.208,294,2.553,295,1.601,296,1.952,308,1,309,2.658,312,0.649,313,0.961,314,0.961,315,0.649,316,1.266,317,0.649,318,0.649,319,0.961,320,0.472,321,1.145,322,0.513,323,0.649,324,0.513,325,0.649,326,0.759,327,0.89,328,0.649,329,0.513,330,0.642,331,0.649,332,0.513,333,0.649,334,0.472,335,1.315,336,0.921,337,0.472,338,0.555,339,0.649,340,0.472,341,0.649,342,0.513,343,0.649,344,0.472,345,0.649,346,0.472,347,0.513,348,0.649,349,0.649,350,0.649,351,0.011,352,0.016,353,0.011,354,0.011,356,2.053,357,3.167,358,2.658,361,3.042,363,1.473,368,2.372,371,2.053,372,2.053,374,1.794,376,1.794,377,2.658,378,2.658,379,2.658,412,1.446,427,4.487,443,1.208,444,1.318,446,1.208,576,1.446,601,2.143,621,1.446,863,2.143,899,2.326,910,2.372,918,1.446,1006,5.134,1008,3.501,1009,3.501,1010,1.601,1011,3.167,1012,3.501,1013,2.822,1017,3.042,1018,3.426,1024,2.658,1025,2.658,1026,3.167,1027,2.658,1028,3.167,1035,3.042,1042,2.053,1044,1.601,1045,1.601,1046,1.601,1088,2.053,1091,1.794,1092,1.446,1093,1.446,1094,1.794,1095,1.794,1096,3.167,1097,1.446,1098,1.446,1099,1.446,1100,2.658,1104,3.625,1105,2.143,1106,3.625,1107,3.625,1108,2.447,1109,3.625,1110,3.625,1111,2.372,1112,2.447,1113,2.447,1114,2.447,1115,2.447,1116,2.447,1117,2.447,1118,2.447,1119,2.447,1120,2.053,1121,2.053,1122,1.794,1123,2.053,1124,3.625,1125,2.447,1126,2.447,1127,2.447,1128,2.447,1129,2.447,1130,3.625]],["title/classes/GenericComp.html",[171,1.75,181,0.044]],["body/classes/GenericComp.html",[3,0.174,4,0.174,9,0.174,13,0.628,25,0.174,26,0.475,27,1.075,39,0.384,48,0.687,58,0.608,59,0.608,61,0.626,62,0.03,63,0.568,64,0.605,65,0.626,67,1.801,77,0.46,78,0.627,81,0.01,87,0.75,96,0.993,98,2.281,113,1.894,120,2.302,122,2.418,143,1.092,146,1.27,147,0.984,170,2.944,171,2.281,172,1.275,173,1.275,174,2.281,175,2.944,180,0.422,181,0.047,182,0.803,187,0.01,208,1.4,222,1.372,231,1.4,247,0.788,272,1.483,308,1.053,330,0.832,351,0.01,352,0.016,353,0.01,354,0.01,363,1.552,462,1.169,597,2.708,999,3.106,1052,1.549,1053,1.549,1054,1.549,1055,1.549,1056,1.549,1057,1.549,1058,1.549,1062,1.549,1063,1.549,1064,1.549,1066,1.549,1067,1.549,1068,1.549,1069,1.549,1070,1.549,1071,1.549,1072,1.549,1073,1.549,1131,1.737,1132,3.943,1133,3.943,1134,3.943,1135,3.943,1136,3.943,1137,3.943,1138,3.943,1139,3.943,1140,3.943,1141,3.943,1142,3.943,1143,3.943,1144,3.943,1145,3.943,1146,4.427,1147,2.594,1148,2.969,1149,1.987,1150,4.427,1151,4.427,1152,4.427,1153,4.427,1154,4.427,1155,4.427,1156,4.717,1157,4.22,1158,4.427,1159,4.427,1160,3.538,1161,2.368,1162,2.368,1163,2.368,1164,2.368,1165,2.368,1166,2.368,1167,2.368,1168,2.368,1169,2.368,1170,2.368,1171,2.368,1172,2.368,1173,2.368,1174,2.368,1175,3.943,1176,2.368,1177,3.554,1178,2.368,1179,1.737,1180,4.427,1181,1.987,1182,1.987,1183,1.987,1184,1.987,1185,1.987,1186,1.987,1187,1.987,1188,1.987,1189,1.987,1190,1.987,1191,1.987,1192,1.987,1193,1.987,1194,1.737,1195,1.737,1196,1.737,1197,1.737,1198,3.554,1199,2.969,1200,3.943,1201,3.943,1202,3.943,1203,3.943,1204,3.943,1205,3.943,1206,3.943,1207,4.427,1208,3.943,1209,2.969,1210,2.969,1211,3.554,1212,1.987,1213,1.987,1214,3.554,1215,3.554,1216,1.987,1217,4.588,1218,3.943,1219,1.987,1220,1.987,1221,1.987,1222,1.987,1223,1.549,1224,1.987,1225,2.969,1226,1.987,1227,1.987,1228,1.987,1229,1.987,1230,1.987,1231,3.554,1232,1.987,1233,1.987,1234,1.987,1235,3.554,1236,1.987,1237,1.987,1238,1.987,1239,3.554,1240,2.969,1241,2.969,1242,2.969,1243,2.969,1244,2.969,1245,2.969,1246,2.969,1247,2.969,1248,1.987,1249,3.554,1250,3.554,1251,3.554,1252,3.554,1253,3.554,1254,3.554,1255,3.554,1256,3.554,1257,3.554,1258,3.554,1259,3.554,1260,1.987,1261,1.987,1262,3.554,1263,3.554,1264,1.987,1265,1.987,1266,1.987,1267,1.987]],["title/components/ListPeriodsComponent.html",[0,0.105,337,0.627]],["body/components/ListPeriodsComponent.html",[0,0.144,1,0.635,2,1.098,3,0.242,4,0.242,5,0.872,6,0.872,7,0.872,8,0.872,9,0.242,13,0.872,14,1.455,15,0.872,16,0.872,17,1.739,18,1.61,19,1.015,20,0.808,21,1.186,23,1.186,25,0.242,26,0.6,33,1.735,34,3.852,35,1.692,39,0.485,43,3.57,45,1.561,48,0.534,51,2.468,52,2.51,53,2.693,58,0.568,59,0.568,61,0.662,62,0.03,63,0.732,64,0.526,65,0.662,70,0.941,71,2.592,74,1.275,77,0.552,78,0.967,81,0.027,82,0.872,85,2.032,87,0.793,92,0.747,94,0.747,95,0.747,99,1.181,105,2.032,107,3.226,109,3.226,111,1.381,114,1.684,128,0.635,147,0.937,154,1.086,161,0.639,162,0.487,165,1.494,166,1.494,178,1.275,179,1.624,180,0.242,181,0.044,182,0.747,187,0.022,200,1.379,201,1.181,207,3.281,232,1.379,233,1.624,236,2.413,289,1.494,290,1.624,291,1.624,312,0.872,313,1.186,314,1.186,315,0.872,316,1.447,317,0.872,318,0.872,319,1.186,320,0.635,321,1.348,322,0.689,323,0.872,324,0.689,325,0.872,326,0.937,327,1.098,328,0.872,329,0.689,330,0.793,331,0.872,332,0.689,333,0.872,334,0.635,335,1.015,336,0.635,337,1.053,338,1.391,339,0.872,340,0.635,341,0.872,342,0.689,343,0.872,344,0.635,345,0.872,346,0.635,347,0.689,348,0.872,349,0.872,350,0.872,351,0.014,352,0.02,353,0.014,354,0.014,359,2.761,363,1.015,374,2.413,376,3.281,436,4.417,443,1.624,444,1.772,446,1.624,571,2.927,576,2.645,577,3.734,899,3.074,1013,3.374,1018,2.645,1092,1.945,1093,1.945,1097,1.945,1098,1.945,1099,1.945,1268,6.023,1269,3.29,1270,5.084,1271,4.474,1272,3.281,1273,4.474,1274,3.281,1275,3.29,1276,3.29,1277,3.29,1278,3.29,1279,2.761,1280,2.761,1281,3.29,1282,3.29,1283,3.29,1284,3.29,1285,3.29,1286,3.29,1287,2.761,1288,3.755]],["title/components/LoginComponent.html",[0,0.105,340,0.627]],["body/components/LoginComponent.html",[0,0.141,1,0.618,2,0.786,3,0.235,4,0.235,5,0.849,6,0.849,7,0.849,8,0.849,9,0.235,13,0.849,14,1.434,15,0.849,16,0.849,17,1.733,18,1.605,19,0.997,20,0.786,21,1.164,23,1.164,25,0.235,26,0.589,31,2.101,35,1.462,36,3.05,39,0.477,45,1.544,48,0.519,52,2.474,53,2.663,58,0.545,59,0.545,61,0.473,62,0.03,63,0.43,64,0.483,65,0.473,67,1.164,70,1.257,77,0.477,78,0.888,81,0.025,82,0.849,87,0.778,88,1.724,92,0.727,94,0.727,95,0.727,96,1.841,97,2.874,107,2.596,109,2.596,110,1.841,114,1.802,128,0.618,147,0.92,154,0.567,161,0.585,162,0.473,165,1.454,166,1.454,167,1.15,180,0.235,181,0.043,182,0.727,187,0.014,201,1.577,209,1.892,222,1.241,228,2.687,261,1.342,270,2.277,272,1.841,289,1.454,290,1.58,291,1.58,312,0.849,313,1.164,314,1.164,315,0.849,316,1.43,317,0.849,318,0.849,319,1.164,320,0.618,321,1.329,322,0.671,323,0.849,324,0.671,325,0.849,326,0.671,327,0.786,328,0.849,329,0.671,330,0.888,331,0.849,332,0.671,333,0.849,334,0.618,335,0.997,336,0.618,337,0.618,338,0.727,339,0.849,340,1.041,341,0.849,342,0.671,343,0.849,344,0.618,345,0.849,346,0.618,347,0.671,348,0.849,349,0.849,350,0.849,351,0.014,352,0.019,353,0.014,354,0.014,367,3.221,369,3.189,385,3.686,473,2.095,501,3.535,512,2.348,593,1.724,670,3.53,671,3.53,674,2.095,676,2.095,682,3.452,684,2.687,690,2.596,691,2.596,830,3.686,918,1.892,923,2.596,926,4.207,927,3.686,1003,2.348,1010,2.095,1289,3.201,1290,4.467,1291,5.013,1292,4.392,1293,4.392,1294,3.201,1295,4.392,1296,3.686,1297,5.653,1298,4.392,1299,4.392,1300,3.201,1301,2.348,1302,5.395,1303,3.956,1304,3.201,1305,3.201,1306,3.201,1307,3.201,1308,3.201,1309,3.201,1310,3.201,1311,4.392,1312,4.392,1313,4.392,1314,3.686,1315,4.392,1316,3.201,1317,3.677,1318,4.392,1319,3.686,1320,3.201,1321,3.201,1322,3.201,1323,3.201,1324,2.348,1325,3.201,1326,3.201,1327,3.201,1328,3.201,1329,3.201,1330,3.201,1331,3.201,1332,3.201,1333,3.201,1334,3.201,1335,3.201,1336,3.201,1337,3.201,1338,3.201,1339,4.392,1340,3.201,1341,3.201,1342,3.201]],["title/components/MenuComponent.html",[0,0.105,342,0.681]],["body/components/MenuComponent.html",[0,0.135,1,0.577,2,0.735,3,0.22,4,0.22,5,0.794,6,0.794,7,0.794,8,0.794,9,0.22,13,0.794,14,1.384,15,0.794,16,0.794,17,1.719,18,1.591,19,0.951,20,0.735,21,1.112,23,1.112,25,0.22,26,0.563,31,2.461,35,1.837,36,3.005,39,0.455,45,1.5,48,0.486,54,2.069,58,0.587,59,0.601,61,0.62,62,0.03,63,0.563,64,0.551,65,0.62,67,1.283,70,1.384,71,2.381,74,1.161,75,1.625,77,0.569,78,0.929,81,0.024,82,1.283,85,2.381,86,1.757,87,0.743,88,2.823,92,0.951,96,2.197,98,2.258,99,1.737,100,1.77,109,2.478,110,1.757,111,1.618,114,1.765,115,3.099,126,2.381,133,1.904,143,0.924,147,0.878,154,0.53,161,0.599,162,0.443,167,1.075,180,0.22,181,0.04,182,0.679,184,2.195,186,1.36,187,0.023,188,1.36,189,1.904,201,1.075,209,1.77,232,1.255,234,3.074,235,3.844,272,1.255,288,1.477,289,1.904,294,2.478,308,0.878,312,0.794,313,1.112,314,1.112,315,0.794,316,1.39,317,0.794,318,0.794,319,1.112,320,0.577,321,1.283,322,0.627,323,0.794,324,0.627,325,0.794,326,0.878,327,1.029,328,0.794,329,0.627,330,0.743,331,0.794,332,0.627,333,0.794,334,0.577,335,0.951,336,0.577,337,0.577,338,0.951,339,0.794,340,0.577,341,0.794,342,1.098,343,0.794,344,0.577,345,0.794,346,0.577,347,0.627,348,0.794,349,0.794,350,0.794,351,0.013,352,0.018,353,0.013,354,0.013,363,1.294,367,3.074,443,1.477,444,1.612,446,1.477,473,1.959,501,3.471,512,2.195,515,2.512,531,2.478,593,2.606,601,1.77,641,3.518,649,3.518,683,1.959,686,1.959,690,1.77,691,1.77,694,2.195,695,2.195,863,3.099,899,2.972,910,2.743,918,1.77,923,1.77,1009,3.844,1010,1.959,1013,3.262,1026,2.195,1027,3.074,1028,3.548,1091,2.195,1092,1.77,1093,1.77,1094,2.195,1095,2.195,1096,2.195,1097,1.77,1098,1.77,1099,1.77,1288,3.518,1296,3.518,1314,4.399,1343,2.993,1344,4.192,1345,4.838,1346,4.192,1347,5.241,1348,4.192,1349,5.518,1350,4.192,1351,2.993,1352,2.993,1353,4.192,1354,4.192,1355,2.993,1356,4.192,1357,4.192,1358,4.192,1359,2.993,1360,4.192,1361,4.192,1362,3.518,1363,2.993,1364,4.192,1365,4.192,1366,2.993,1367,2.993,1368,2.993,1369,4.192,1370,4.192,1371,2.512,1372,2.993,1373,2.993,1374,2.993,1375,2.993,1376,2.993,1377,2.993,1378,2.512,1379,2.993,1380,2.993,1381,2.993]],["title/interfaces/MyComponent.html",[120,1.26,1179,2.383]],["body/interfaces/MyComponent.html",[3,0.184,4,0.184,9,0.184,25,0.184,26,0.495,27,1.138,39,0.4,48,0.598,58,0.422,59,0.422,61,0.546,62,0.03,63,0.495,64,0.606,65,0.546,67,1.799,77,0.475,78,0.654,81,0.011,87,0.776,98,2.601,113,1.734,120,2.331,122,2.416,143,1.138,146,1.325,147,0.917,170,2.9,171,1.987,172,1.349,173,1.349,174,2.358,175,2.773,180,0.429,181,0.049,182,0.837,187,0.011,208,1.481,222,1.43,231,1.481,247,0.834,272,1.546,308,1.078,330,0.654,351,0.011,352,0.016,353,0.011,354,0.011,363,1.589,597,2.773,999,3.211,1052,1.639,1053,1.639,1054,1.639,1055,1.639,1056,1.639,1057,1.639,1058,1.639,1062,1.639,1063,1.639,1064,1.639,1066,1.639,1067,1.639,1068,1.639,1069,1.639,1070,1.639,1071,1.639,1072,1.639,1073,1.639,1131,1.837,1132,4.32,1133,4.32,1134,4.32,1135,4.32,1136,4.32,1137,4.32,1138,4.32,1139,4.32,1140,4.32,1141,4.32,1142,4.32,1143,4.32,1144,4.32,1145,4.32,1146,4.519,1147,2.705,1148,3.096,1150,4.053,1151,4.053,1152,4.053,1153,4.053,1154,4.053,1155,4.053,1156,4.519,1157,3.674,1158,4.053,1159,4.053,1175,4.053,1177,3.674,1179,1.837,1180,4.519,1181,2.102,1182,2.102,1183,2.102,1184,2.102,1185,2.102,1186,2.102,1187,2.102,1188,2.102,1189,2.102,1190,2.102,1191,2.102,1192,2.102,1193,2.102,1194,1.837,1195,1.837,1196,1.837,1197,1.837,1198,3.674,1199,3.096,1200,4.053,1201,4.053,1202,4.053,1203,4.053,1204,4.053,1205,4.053,1206,4.053,1207,4.519,1208,4.053,1209,3.096,1210,3.096,1211,3.674,1212,2.102,1213,2.102,1214,3.674,1215,3.674,1216,2.102,1217,4.672,1218,4.053,1219,2.102,1220,2.102,1221,2.102,1222,2.102,1223,1.639,1224,2.102,1225,3.096,1226,2.102,1227,2.102,1228,2.102,1229,2.102,1230,2.102,1231,3.674,1232,2.102,1233,2.102,1234,2.102,1235,3.674,1236,2.102,1237,2.102,1238,2.102,1239,3.674,1240,3.096,1241,3.096,1242,3.096,1243,3.096,1244,3.096,1245,3.096,1246,3.096,1247,3.096,1248,2.102,1249,3.674,1250,3.674,1251,3.674,1252,3.674,1253,3.674,1254,3.674,1255,3.674,1256,3.674,1257,3.674,1258,3.674,1259,3.674,1260,2.102,1261,2.102,1262,3.674,1263,3.674,1264,2.102,1265,2.102,1266,2.102,1267,2.102,1382,2.505,1383,2.505,1384,2.505,1385,2.505]],["title/components/MyComponentComponent.html",[0,0.105,344,0.627]],["body/components/MyComponentComponent.html",[0,0.148,1,0.44,2,0.56,3,0.168,4,0.168,5,0.605,6,0.605,7,0.605,8,0.605,9,0.168,13,0.605,14,1.185,15,0.605,16,0.605,17,1.653,18,1.531,19,0.781,20,0.56,21,0.912,23,0.912,25,0.304,26,0.462,27,1.881,28,1.493,30,3.476,33,1.788,39,0.373,45,1.32,48,0.37,50,2.908,51,2.263,54,1.698,55,2.726,58,0.587,59,0.608,61,0.732,62,0.03,63,0.664,64,0.548,65,0.732,70,1.707,71,2.248,74,1.788,75,2.362,77,0.603,78,0.957,81,0.024,82,1.688,87,0.817,92,0.94,93,2.908,94,0.781,95,0.781,96,1.933,97,3.018,105,2.363,106,1.853,111,1.527,113,2.207,114,1.606,115,1.349,120,1.606,122,2.142,128,0.664,135,3.533,143,1.062,146,1.236,147,0.721,154,0.922,161,0.617,162,0.337,167,0.819,170,2.231,171,1.229,176,0.957,177,1.493,178,0.885,179,1.126,180,0.168,181,0.031,182,0.518,187,0.025,200,0.957,201,1.656,205,2.523,208,2.034,222,0.885,231,1.349,232,1.933,233,2.044,244,1.349,246,1.915,247,0.759,261,0.957,268,1.229,270,1.563,296,1.853,308,0.721,310,3.038,312,0.605,313,0.912,314,0.912,315,0.605,316,1.223,317,0.605,318,0.605,319,0.912,320,0.44,321,1.098,322,0.478,323,0.605,324,0.478,325,0.605,326,0.478,327,0.56,328,0.605,329,0.478,330,0.877,331,0.605,332,0.478,333,0.605,334,0.44,335,0.781,336,0.44,337,0.44,338,0.518,339,0.605,340,0.44,341,0.605,342,0.478,343,0.605,344,0.89,345,0.605,346,0.44,347,0.478,348,0.605,349,0.605,350,0.605,351,0.01,352,0.015,353,0.01,354,0.01,368,2.251,412,1.349,439,4.507,453,1.673,454,4.25,521,2.71,526,3.871,527,3.871,555,3.382,556,3.871,557,3.476,559,2.888,572,2.523,588,2.251,595,1.036,596,1.126,597,1.229,598,1.673,599,1.673,601,2.034,621,1.349,644,2.231,646,1.349,676,1.493,682,2.449,683,1.493,686,1.493,690,1.349,691,1.349,707,2.251,839,2.523,853,1.673,923,1.349,925,1.915,1003,1.673,1007,2.888,1008,3.382,1011,3.038,1012,3.382,1018,2.034,1019,2.888,1020,2.888,1024,2.523,1025,2.523,1044,1.493,1045,1.493,1046,1.493,1047,1.915,1048,1.915,1049,1.915,1050,2.888,1051,1.915,1052,2.251,1053,2.251,1054,2.251,1055,3.018,1056,2.251,1057,2.251,1058,2.251,1059,2.888,1060,2.523,1061,2.523,1062,1.493,1063,1.493,1064,1.493,1065,1.915,1066,1.493,1067,1.493,1068,1.493,1069,1.493,1070,1.493,1071,1.493,1072,1.493,1073,1.493,1074,2.888,1075,1.915,1078,1.915,1079,1.915,1080,1.915,1081,1.915,1100,1.673,1105,2.034,1111,2.251,1122,1.673,1223,2.251,1317,3.038,1324,1.673,1378,1.915,1386,6.146,1387,2.282,1388,4.142,1389,3.441,1390,3.441,1391,1.915,1392,3.441,1393,2.282,1394,2.282,1395,2.282,1396,2.282,1397,2.282,1398,2.282,1399,2.282,1400,3.441,1401,2.282,1402,4.612,1403,3.441,1404,2.282,1405,2.282,1406,2.282,1407,2.282,1408,2.282,1409,2.282,1410,2.282,1411,3.441,1412,2.282,1413,2.282,1414,2.282,1415,2.282,1416,2.282,1417,3.441,1418,3.441,1419,3.441,1420,3.441,1421,2.282,1422,2.282,1423,3.441,1424,2.282,1425,2.282,1426,1.915,1427,1.915,1428,1.915,1429,2.282,1430,2.282,1431,2.282,1432,1.915,1433,2.282,1434,3.441,1435,3.441,1436,3.441,1437,2.282,1438,2.282,1439,2.282]],["title/classes/Period.html",[154,0.576,181,0.044]],["body/classes/Period.html",[3,0.306,4,0.306,9,0.306,25,0.306,26,0.701,33,1.615,39,0.567,48,0.847,58,0.621,59,0.621,61,0.772,62,0.03,63,0.701,64,0.621,65,0.772,67,1.801,77,0.452,81,0.018,96,1.746,113,2.147,122,2.211,147,1.252,154,1.091,180,0.306,181,0.056,187,0.018,240,2.726,241,2.726,242,2.726,308,0.873,311,3.055,330,0.738,351,0.018,352,0.023,353,0.018,354,0.018,363,1.611,462,2.056,646,2.463,931,5.017,1147,3.829,1149,3.496,1301,3.055,1440,4.166,1441,5.702,1442,5.702,1443,5.702,1444,5.702,1445,5.702,1446,5.702,1447,5.978,1448,5.978,1449,5.221,1450,4.166,1451,4.166,1452,4.166,1453,4.166,1454,4.166,1455,5.221,1456,4.166,1457,3.496,1458,4.166,1459,5.221,1460,5.221,1461,5.221,1462,5.221]],["title/components/PeriodComponent.html",[0,0.105,346,0.627]],["body/components/PeriodComponent.html",[0,0.124,1,0.516,2,1.428,3,0.197,4,0.197,5,0.709,6,0.709,7,0.709,8,0.709,9,0.197,13,0.709,14,1.301,15,0.709,16,0.709,17,1.693,18,1.567,19,0.878,20,0.656,21,1.026,23,1.026,25,0.197,26,0.519,27,1.757,33,1.762,35,1.513,37,3.246,39,0.42,45,1.425,48,0.434,50,3.06,51,2.381,52,2.243,53,2.458,54,1.909,55,2.944,58,0.571,59,0.571,61,0.672,62,0.03,63,0.709,64,0.531,65,0.672,70,1.576,71,2.769,74,1.5,75,1.762,77,0.54,78,0.936,81,0.023,82,1.321,85,1.757,87,0.685,92,0.607,94,0.878,95,0.878,105,2.262,107,2.944,110,2.088,111,1.194,113,1.978,114,1.537,117,2.531,120,2.255,122,1.632,128,0.746,146,0.96,147,0.952,154,1.007,161,0.653,162,0.395,165,1.214,166,1.214,167,0.96,176,1.121,177,1.749,178,1.037,179,1.32,180,0.197,181,0.036,182,0.607,187,0.02,196,2.531,200,1.121,201,1.632,222,1.037,232,1.622,233,2.243,244,1.581,252,2.837,268,2.083,270,2.064,287,1.961,289,1.214,290,1.32,291,1.32,296,2.083,299,2.837,311,2.837,312,0.709,313,1.026,314,1.026,315,0.709,316,1.321,317,0.709,318,0.709,319,1.026,320,0.516,321,1.205,322,0.56,323,0.709,324,0.56,325,0.709,326,0.81,327,0.95,328,0.709,329,0.56,330,0.685,331,0.709,332,0.56,333,0.709,334,0.516,335,0.878,336,0.516,337,0.516,338,0.878,339,0.709,340,0.516,341,0.709,342,0.56,343,0.709,344,0.516,345,0.709,346,0.961,347,0.56,348,0.709,349,0.709,350,0.709,351,0.012,352,0.017,353,0.012,354,0.012,357,3.333,358,2.837,363,0.825,377,1.961,378,1.961,379,1.961,443,1.32,444,1.44,446,1.32,521,2.974,571,2.531,576,2.287,577,3.458,582,2.837,583,2.837,588,2.531,595,1.214,596,1.32,621,1.581,646,2.687,674,1.749,676,2.531,682,2.687,694,1.961,695,1.961,703,4.18,705,2.837,783,3.246,869,2.244,899,2.846,937,2.837,1013,3.124,1018,2.944,1044,1.749,1045,1.749,1046,1.749,1060,2.837,1061,2.837,1092,1.581,1093,1.581,1097,1.581,1098,1.581,1099,1.581,1105,2.287,1111,2.531,1120,2.244,1121,2.244,1122,1.961,1123,2.244,1223,2.531,1280,2.244,1287,2.244,1317,1.961,1319,3.246,1324,1.961,1371,2.244,1391,2.244,1426,3.815,1427,3.246,1428,2.244,1432,3.246,1457,2.244,1463,2.674,1464,4.981,1465,3.868,1466,3.868,1467,2.674,1468,2.674,1469,4.545,1470,3.246,1471,2.674,1472,2.674,1473,2.674,1474,2.674,1475,2.674,1476,3.868,1477,2.674,1478,3.868,1479,2.674,1480,2.674,1481,2.674,1482,2.674,1483,3.868,1484,3.246,1485,3.868,1486,3.246,1487,3.868,1488,3.868,1489,3.868,1490,3.868,1491,4.545,1492,4.545,1493,2.674,1494,2.674,1495,2.674,1496,2.674,1497,2.674,1498,2.674,1499,2.674,1500,2.674,1501,2.674]],["title/components/PeriodInputsComponent.html",[0,0.105,347,0.681]],["body/components/PeriodInputsComponent.html",[0,0.157,1,0.723,2,0.921,3,0.276,4,0.276,5,0.994,6,0.994,7,0.994,8,0.994,9,0.276,13,0.994,14,1.553,15,0.994,16,0.994,17,1.764,18,1.633,19,1.108,20,0.921,21,1.294,23,1.294,25,0.276,31,2.275,39,0.53,45,1.645,48,0.88,58,0.523,59,0.6,62,0.03,63,0.655,64,0.362,70,1.073,77,0.407,78,0.865,81,0.017,82,0.994,86,1.572,87,0.865,92,0.851,99,1.347,106,3.097,111,1.157,126,1.703,147,1.023,154,1.149,161,0.53,162,0.555,178,1.454,180,0.276,181,0.05,182,0.851,185,1.851,186,1.703,187,0.025,188,1.703,189,1.703,233,1.851,312,0.994,313,1.294,314,1.294,315,0.994,316,1.524,317,0.994,318,0.994,319,1.294,320,0.723,321,1.439,322,0.786,323,0.994,324,0.786,325,0.994,326,0.786,327,0.921,328,0.994,329,0.786,330,0.865,331,0.994,332,0.786,333,0.994,334,0.723,335,1.108,336,0.723,337,0.723,338,0.851,339,0.994,340,0.723,341,0.994,342,0.786,343,0.994,344,0.723,345,0.994,346,0.723,347,1.204,348,1.439,349,0.994,350,0.994,351,0.017,352,0.021,353,0.017,354,0.017,369,3.73,431,4.825,517,3.147,518,4.555,519,4.097,531,2.886,534,3.147,593,2.629,670,4.129,671,4.129,937,3.58,1470,4.825,1484,4.097,1486,4.097,1502,5.749,1503,4.882,1504,5.749,1505,4.882,1506,5.749,1507,4.882]],["title/classes/PeriodMock.html",[181,0.044,1508,2.728]],["body/classes/PeriodMock.html",[3,0.192,4,0.192,9,0.192,25,0.192,26,0.511,33,1.91,34,2.935,35,0.87,39,0.413,43,3.224,58,0.568,59,0.606,61,0.774,62,0.03,63,0.703,64,0.505,65,0.774,67,1.19,70,1.284,77,0.627,78,0.463,81,0.03,85,2.482,92,1.24,93,2.416,94,0.593,95,0.593,110,2.636,111,1.385,113,0.938,114,1.687,127,3.175,128,0.504,133,2.038,143,1.174,146,1.963,154,1.087,161,0.413,178,1.013,180,0.192,181,0.035,187,0.026,196,2.935,222,1.013,226,4.587,243,2.489,247,1.266,249,1.916,261,2.195,265,2.214,272,1.881,288,1.878,308,1.254,351,0.011,352,0.017,353,0.011,354,0.011,462,1.29,487,2.79,511,1.545,644,2.049,672,4.587,700,4.392,702,4.323,714,3.765,715,4.947,729,3.29,736,3.765,757,3.765,762,3.765,778,3.765,782,3.765,785,3.765,791,3.765,809,3.765,820,3.765,821,3.765,822,3.765,860,3.765,862,3.765,863,2.652,868,4.136,938,4.008,1105,2.249,1111,2.489,1272,2.79,1274,2.79,1279,3.193,1508,3.193,1509,2.613,1510,3.193,1511,4.136,1512,3.193,1513,4.928,1514,4.486,1515,4.486,1516,4.486,1517,4.486,1518,4.486,1519,4.486,1520,6.135,1521,4.486,1522,4.486,1523,5.894,1524,4.486,1525,4.486,1526,4.486,1527,4.486,1528,4.486,1529,4.486,1530,4.486,1531,4.486,1532,4.486,1533,4.486,1534,4.486,1535,4.486,1536,4.486,1537,4.486,1538,4.486,1539,5.465,1540,4.486,1541,4.486,1542,4.486,1543,5.465,1544,5.465,1545,5.465,1546,5.465,1547,5.465,1548,4.486,1549,4.486,1550,4.486,1551,4.486,1552,4.486,1553,4.486,1554,4.486,1555,4.486,1556,4.486,1557,4.486,1558,4.486,1559,4.486,1560,4.486,1561,4.486,1562,4.486,1563,4.486,1564,4.486,1565,4.486,1566,4.486,1567,4.486,1568,4.486,1569,4.486,1570,4.486,1571,4.486,1572,2.613,1573,3.193,1574,2.613,1575,2.613,1576,3.193,1577,2.613,1578,2.613,1579,2.613,1580,3.193,1581,2.613,1582,2.193,1583,2.613,1584,2.613,1585,3.804,1586,2.613,1587,2.613,1588,2.613,1589,2.613,1590,3.804,1591,3.804,1592,3.804]],["title/injectables/PeriodService.html",[51,1.362,510,1.604]],["body/injectables/PeriodService.html",[3,0.3,4,0.3,9,0.3,25,0.3,26,0.691,33,2.372,39,0.559,48,0.661,51,2.159,58,0.619,59,0.619,61,0.924,62,0.03,63,0.838,64,0.602,65,0.924,67,1.497,77,0.678,81,0.018,94,0.925,95,0.925,122,2.028,128,0.787,154,1.156,161,0.644,162,0.603,178,1.581,180,0.3,181,0.055,187,0.018,200,1.709,308,1.309,351,0.018,352,0.023,353,0.018,354,0.018,381,2.196,448,2.668,487,3.778,510,2.542,513,2.668,595,1.852,596,2.013,870,2.668,872,3.695,873,2.99,874,4.35,876,3.778,886,3.422,888,3.778,1105,3.045,1272,3.778,1274,3.778,1510,4.323,1511,4.978,1512,4.323,1573,4.323,1576,4.323,1580,4.323,1582,3.422,1593,4.077,1594,5.151,1595,4.077,1596,4.077,1597,4.077,1598,4.077,1599,5.151,1600,4.077,1601,4.077,1602,4.077,1603,4.077,1604,4.077,1605,4.077,1606,4.077,1607,4.077]],["title/classes/UserMock.html",[181,0.044,1608,2.728]],["body/classes/UserMock.html",[3,0.297,4,0.297,9,0.297,25,0.297,26,0.687,35,1.704,39,0.556,58,0.618,59,0.618,61,0.757,62,0.03,63,0.687,64,0.542,65,0.757,67,1.747,77,0.676,78,0.996,81,0.018,94,1.162,95,1.162,128,0.988,143,1.824,161,0.438,180,0.297,181,0.054,187,0.018,247,1.344,265,2.527,308,1.238,351,0.018,352,0.023,353,0.018,354,0.018,363,1.58,462,1.994,511,2.388,700,4.743,702,4.833,1290,3.755,1303,4.335,1608,4.297,1609,4.039,1610,5.12,1611,5.622,1612,4.961,1613,4.961,1614,4.961,1615,5.912,1616,4.297,1617,4.039,1618,4.039,1619,4.039,1620,4.039,1621,4.039,1622,4.297,1623,4.039,1624,4.718,1625,4.039,1626,4.297,1627,4.039,1628,4.039,1629,4.039,1630,4.039,1631,5.912,1632,5.912]],["title/injectables/UserService.html",[501,1.921,510,1.604]],["body/injectables/UserService.html",[3,0.305,4,0.305,9,0.305,25,0.305,26,0.699,39,0.565,48,0.673,58,0.614,59,0.614,61,0.842,62,0.03,63,0.764,64,0.549,65,0.842,67,1.723,77,0.667,78,0.923,81,0.018,94,0.942,95,0.942,128,0.801,143,1.281,161,0.648,162,0.614,168,2.049,180,0.305,181,0.056,187,0.018,200,1.74,201,1.491,247,1.382,308,1.193,351,0.018,352,0.023,353,0.018,354,0.018,363,1.608,381,2.236,448,2.716,449,5.011,450,3.044,451,3.044,501,3.08,510,2.571,513,2.716,595,1.885,596,2.049,870,2.716,872,3.725,873,3.044,874,4.379,876,3.82,888,3.82,1290,3.82,1303,4.379,1610,4.372,1612,5.011,1613,5.011,1614,5.011,1616,4.372,1622,4.372,1624,4.372,1626,4.372,1633,4.151,1634,5.693,1635,5.209,1636,4.151,1637,4.151,1638,4.151,1639,4.151,1640,4.151,1641,4.151,1642,4.151,1643,4.151,1644,4.151,1645,4.151,1646,4.151,1647,4.151,1648,4.151]],["title/dependencies.html",[392,2.867,1649,2.277]],["body/dependencies.html",[62,0.03,81,0.021,162,0.705,164,2.569,167,1.713,168,2.799,169,2.569,187,0.021,351,0.021,352,0.025,353,0.021,354,0.021,408,4.759,409,4.159,412,2.82,422,4.003,423,4.003,424,4.759,450,3.498,451,3.498,453,3.498,454,3.498,511,2.82,1650,4.77,1651,4.77,1652,6.68,1653,4.77,1654,5.671,1655,4.77,1656,4.77,1657,4.77,1658,4.77,1659,4.77,1660,4.77,1661,4.77,1662,4.77,1663,4.77,1664,4.77,1665,4.77,1666,4.77,1667,4.77,1668,4.77,1669,4.77,1670,4.77,1671,4.77]],["title/miscellaneous/enumerations.html",[1672,2.277,1673,3.909]],["body/miscellaneous/enumerations.html",[0,0.151,25,0.344,62,0.03,81,0.021,87,0.994,128,1.309,170,3.022,172,3.022,173,3.022,174,3.022,175,3.022,187,0.021,351,0.021,352,0.025,353,0.021,354,0.021,562,4.709,566,4.709,597,3.022,1131,3.436,1194,3.436,1195,3.436,1196,3.436,1197,3.436,1674,3.932,1675,4.686,1676,6.462,1677,4.686,1678,4.686,1679,5.611,1680,4.686,1681,4.686,1682,4.686,1683,4.686,1684,4.686,1685,4.686,1686,4.686,1687,4.686,1688,4.686,1689,4.686,1690,4.686,1691,4.686,1692,4.686,1693,4.686,1694,4.686]],["title/index.html",[644,1.75,1695,3.25]],["body/index.html",[1,1.131,2,1.087,62,0.03,74,1.717,81,0.019,187,0.019,261,2.273,272,1.856,278,2.617,320,1.131,322,1.353,324,1.228,326,1.228,329,1.228,332,1.228,334,1.131,336,1.131,337,1.131,340,1.131,342,1.228,344,1.131,346,1.131,347,1.228,351,0.019,352,0.024,353,0.019,354,0.019,390,4.5,391,2.897,392,3.976,393,3.716,394,3.716,395,3.716,396,3.716,397,3.464,398,3.716,399,3.716,400,3.716,462,2.185,870,2.897,1696,4.427,1697,4.427,1698,4.427,1699,4.427,1700,4.427,1701,4.427,1702,3.716]],["title/modules.html",[1703,4.437]],["body/modules.html",[62,0.026,81,0.023,187,0.023,351,0.023,352,0.026,353,0.026,354,0.023,390,3.408,391,3.408,397,3.079,1362,5.01,1704,5.208,1705,5.208,1706,5.208,1707,5.208,1708,5.208,1709,5.208]],["title/properties.html",[1649,2.277,1710,3.909]],["body/properties.html",[26,0.707,62,0.028,81,0.023,187,0.023,351,0.023,352,0.026,353,0.023,354,0.023,1711,5.272,1712,5.272]],["title/routes.html",[477,3.724]],["body/routes.html",[62,0.027,81,0.023,187,0.023,351,0.023,352,0.027,353,0.023,354,0.023,1702,4.445]],["title/miscellaneous/variables.html",[1672,2.277,1713,3.281]],["body/miscellaneous/variables.html",[25,0.358,62,0.03,64,0.588,81,0.021,94,1.385,95,1.385,128,1.177,143,1.501,187,0.021,247,1.909,330,0.862,351,0.021,352,0.025,353,0.021,354,0.021,595,2.862,872,3.754,1301,3.567,1674,4.082,1713,4.082,1714,5.737,1715,5.737,1716,4.864,1717,4.864,1718,5.737,1719,4.864,1720,4.864,1721,4.864,1722,4.864,1723,5.737,1724,5.737,1725,5.737,1726,5.737,1727,5.737,1728,4.864]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":222,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"classes/GenericComp.html":{},"components/LoginComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["0.0.0",{"_index":1712,"title":{},"body":{"properties.html":{}}}],["0.016",{"_index":780,"title":{},"body":{"classes/ComponentMock.html":{}}}],["0.03",{"_index":752,"title":{},"body":{"classes/ComponentMock.html":{}}}],["0.05em",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.10.2",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":829,"title":{},"body":{"classes/ComponentMock.html":{}}}],["0.21",{"_index":818,"title":{},"body":{"classes/ComponentMock.html":{}}}],["0.3",{"_index":1437,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["0.45",{"_index":750,"title":{},"body":{"classes/ComponentMock.html":{}}}],["0.5em",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.5rem",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.6",{"_index":799,"title":{},"body":{"classes/ComponentMock.html":{}}}],["003e",{"_index":1373,"title":{},"body":{"components/MenuComponent.html":{}}}],["00a0",{"_index":1374,"title":{},"body":{"components/MenuComponent.html":{}}}],["0ch",{"_index":928,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["0px",{"_index":684,"title":{},"body":{"components/CompInputsComponent.html":{},"components/LoginComponent.html":{}}}],["1",{"_index":261,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"classes/PeriodMock.html":{},"index.html":{}}}],["1.0.2",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1492,"title":{},"body":{"components/PeriodComponent.html":{}}}],["1.7",{"_index":816,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1.87",{"_index":828,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1.jpeg",{"_index":739,"title":{},"body":{"classes/ComponentMock.html":{}}}],["10",{"_index":729,"title":{},"body":{"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"classes/PeriodMock.html":{}}}],["10.2.0",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":228,"title":{},"body":{"components/AddCompComponent.html":{},"components/LoginComponent.html":{}}}],["10000",{"_index":751,"title":{},"body":{"classes/ComponentMock.html":{}}}],["100px",{"_index":1433,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["12.0.3",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":776,"title":{},"body":{"classes/ComponentMock.html":{}}}],["120px",{"_index":1498,"title":{},"body":{"components/PeriodComponent.html":{}}}],["124",{"_index":827,"title":{},"body":{"classes/ComponentMock.html":{}}}],["130px",{"_index":1494,"title":{},"body":{"components/PeriodComponent.html":{}}}],["13\\n1971",{"_index":1544,"title":{},"body":{"classes/PeriodMock.html":{}}}],["141pf",{"_index":742,"title":{},"body":{"classes/ComponentMock.html":{}}}],["141pf.jpeg",{"_index":743,"title":{},"body":{"classes/ComponentMock.html":{}}}],["15",{"_index":1697,"title":{},"body":{"index.html":{}}}],["1500",{"_index":291,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["16",{"_index":778,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["1800",{"_index":737,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1900",{"_index":675,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["1970",{"_index":226,"title":{},"body":{"components/AddCompComponent.html":{},"classes/PeriodMock.html":{}}}],["1971",{"_index":735,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1972",{"_index":774,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1974",{"_index":794,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1978",{"_index":811,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1979",{"_index":825,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1981",{"_index":736,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["1983",{"_index":775,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1990",{"_index":227,"title":{},"body":{"components/AddCompComponent.html":{}}}],["1998",{"_index":826,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1999",{"_index":812,"title":{},"body":{"classes/ComponentMock.html":{}}}],["1px",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["1rem",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["2",{"_index":272,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"classes/PeriodMock.html":{},"index.html":{}}}],["2.0.0",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["2.jpeg",{"_index":740,"title":{},"body":{"classes/ComponentMock.html":{}}}],["200",{"_index":779,"title":{},"body":{"classes/ComponentMock.html":{}}}],["20px",{"_index":1378,"title":{},"body":{"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["210px",{"_index":1495,"title":{},"body":{"components/PeriodComponent.html":{}}}],["2200",{"_index":761,"title":{},"body":{"classes/ComponentMock.html":{}}}],["2200.jpeg",{"_index":777,"title":{},"body":{"classes/ComponentMock.html":{}}}],["2300",{"_index":753,"title":{},"body":{"classes/ComponentMock.html":{}}}],["29000",{"_index":819,"title":{},"body":{"classes/ComponentMock.html":{}}}],["2rem",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["3",{"_index":278,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"index.html":{}}}],["3.jpeg",{"_index":741,"title":{},"body":{"classes/ComponentMock.html":{}}}],["3000",{"_index":800,"title":{},"body":{"classes/ComponentMock.html":{}}}],["300px",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["3500",{"_index":781,"title":{},"body":{"classes/ComponentMock.html":{}}}],["36",{"_index":817,"title":{},"body":{"classes/ComponentMock.html":{}}}],["39583d",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["4",{"_index":744,"title":{},"body":{"classes/ComponentMock.html":{}}}],["4.5.0",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["4004",{"_index":714,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["4040",{"_index":782,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["41x58cm",{"_index":732,"title":{},"body":{"classes/ComponentMock.html":{}}}],["5",{"_index":830,"title":{},"body":{"classes/ComponentMock.html":{},"components/LoginComponent.html":{}}}],["5px",{"_index":925,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/MyComponentComponent.html":{}}}],["6.0.0",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["600px",{"_index":1425,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["640",{"_index":746,"title":{},"body":{"classes/ComponentMock.html":{}}}],["7",{"_index":1698,"title":{},"body":{"index.html":{}}}],["70px",{"_index":924,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["740",{"_index":748,"title":{},"body":{"classes/ComponentMock.html":{}}}],["8",{"_index":756,"title":{},"body":{"classes/ComponentMock.html":{}}}],["8.0.1",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["8008",{"_index":754,"title":{},"body":{"classes/ComponentMock.html":{}}}],["800px",{"_index":1493,"title":{},"body":{"components/PeriodComponent.html":{}}}],["8080",{"_index":1539,"title":{},"body":{"classes/PeriodMock.html":{}}}],["8085",{"_index":1540,"title":{},"body":{"classes/PeriodMock.html":{}}}],["8086",{"_index":801,"title":{},"body":{"classes/ComponentMock.html":{}}}],["8088",{"_index":820,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["86",{"_index":813,"title":{},"body":{"classes/ComponentMock.html":{}}}],["9",{"_index":1701,"title":{},"body":{"index.html":{}}}],["_location",{"_index":1011,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["a:hover",{"_index":1379,"title":{},"body":{"components/MenuComponent.html":{}}}],["abre",{"_index":1402,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["absolute",{"_index":1497,"title":{},"body":{"components/PeriodComponent.html":{}}}],["activatedroute",{"_index":55,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["activatedroutesnapshot",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":350,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["actualiza",{"_index":1035,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["actualizado",{"_index":1088,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["acuerdo",{"_index":1559,"title":{},"body":{"classes/PeriodMock.html":{}}}],["add",{"_index":19,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["addcomp",{"_index":488,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["addcompcomponent",{"_index":1,"title":{"components/AddCompComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["addcomponent",{"_index":704,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["addcomponent(c",{"_index":832,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["addperiod",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["addperiod(p",{"_index":1573,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["addperiodcomponent",{"_index":320,"title":{"components/AddPeriodComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["admin",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["administrador",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["afterclosed",{"_index":1097,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["al",{"_index":233,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["alejar",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["align",{"_index":691,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["ambos",{"_index":663,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["amd",{"_index":1557,"title":{},"body":{"classes/PeriodMock.html":{}}}],["ampliar",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"components/MyComponentComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":162,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":164,"title":{},"body":{"components/AddCompComponent.html":{},"modules/AppModule.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["angular/material/snack",{"_index":165,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["angular/material/table",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":167,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"dependencies.html":{}}}],["antecesor",{"_index":1568,"title":{},"body":{"classes/PeriodMock.html":{}}}],["anterior",{"_index":1025,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["aplicación",{"_index":1360,"title":{},"body":{"components/MenuComponent.html":{}}}],["apollo",{"_index":1543,"title":{},"body":{"classes/PeriodMock.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["app.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":322,"title":{"components/AppComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":390,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":461,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["approutingmodule",{"_index":397,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivo",{"_index":610,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["archivos",{"_index":551,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["arranque",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":625,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["arrays",{"_index":623,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["asigna",{"_index":131,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["asignado",{"_index":185,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["asignan",{"_index":195,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["asociados",{"_index":1284,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["auth",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguard",{"_index":479,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["auto",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["automático",{"_index":1570,"title":{},"body":{"classes/PeriodMock.html":{}}}],["añade",{"_index":548,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["añadidas",{"_index":575,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["añadir",{"_index":235,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["año",{"_index":275,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["años",{"_index":809,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["años{{c.component_year_init",{"_index":1419,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["b",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["background",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["bajo",{"_index":763,"title":{},"body":{"classes/ComponentMock.html":{}}}],["bar",{"_index":166,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["base",{"_index":645,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["baseimgurl",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":872,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["bit",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bit=\"b",{"_index":1185,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["bits",{"_index":757,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["black",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["boolean",{"_index":363,"title":{},"body":{"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":926,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{}}}],["borrado",{"_index":868,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["bottom",{"_index":268,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["botón",{"_index":909,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["break",{"_index":271,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["browser",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{}}}],["browser.get(browser.baseurl",{"_index":471,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["bus",{"_index":1533,"title":{},"body":{"classes/PeriodMock.html":{}}}],["busicom",{"_index":719,"title":{},"body":{"classes/ComponentMock.html":{}}}],["button",{"_index":922,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["byte",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["byte=\"b",{"_index":1186,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c",{"_index":27,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["c.clockspeed",{"_index":1266,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c.clockspeed_units",{"_index":1066,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_description",{"_index":1053,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_devices",{"_index":1218,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c.component_devices.split",{"_index":1059,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_devices.split(',').includes(e",{"_index":1222,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c.component_devices.split(',').length",{"_index":1220,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c.component_family",{"_index":1052,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_id",{"_index":866,"title":{},"body":{"classes/ComponentMock.html":{}}}],["c.component_name",{"_index":1223,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["c.component_name).length",{"_index":859,"title":{},"body":{"classes/ComponentMock.html":{}}}],["c.component_period_id",{"_index":1056,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_price",{"_index":1057,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_price_units",{"_index":1058,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_type",{"_index":1050,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_year_end",{"_index":1055,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.component_year_init",{"_index":1054,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.cpu_power",{"_index":1067,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.cpu_power_units",{"_index":1068,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.famous_system",{"_index":1060,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["c.famous_system_img",{"_index":1061,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["c.passmark",{"_index":1072,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.program_memory",{"_index":1062,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.program_memory_units",{"_index":1063,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.ram_memory",{"_index":1064,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.ram_memory_units",{"_index":1265,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["c.ram_memory_units,c.clockspeed",{"_index":1065,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.transistor_size",{"_index":1071,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.transistors",{"_index":1073,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.wordsize",{"_index":1069,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["c.wordsize_units",{"_index":1070,"title":{},"body":{"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["cach",{"_index":1527,"title":{},"body":{"classes/PeriodMock.html":{}}}],["cada",{"_index":1470,"title":{},"body":{"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["calculadoras",{"_index":717,"title":{},"body":{"classes/ComponentMock.html":{}}}],["california",{"_index":734,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cambia",{"_index":69,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["cambiar",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["cambios",{"_index":189,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["campo",{"_index":671,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["campos",{"_index":125,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["canactivate",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{}}}],["candidato",{"_index":724,"title":{},"body":{"classes/ComponentMock.html":{}}}],["característica",{"_index":1505,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["carpet",{"_index":797,"title":{},"body":{"classes/ComponentMock.html":{}}}],["carpet.jpeg",{"_index":798,"title":{},"body":{"classes/ComponentMock.html":{}}}],["carpeta",{"_index":598,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["case",{"_index":260,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["center",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["cerrar",{"_index":289,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["changeclockspeedunits",{"_index":962,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changeclockspeedunits(u",{"_index":969,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changeperiod",{"_index":40,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["changeperiod(p",{"_index":66,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["changepowerunits",{"_index":963,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changepowerunits(u",{"_index":972,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changepriceunits",{"_index":523,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["changepriceunits(u",{"_index":538,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["changeprogrammemoryunits",{"_index":964,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changeprogrammemoryunits(u",{"_index":975,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changerammemoryunits",{"_index":965,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changerammemoryunits(u",{"_index":978,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changetype",{"_index":41,"title":{},"body":{"components/AddCompComponent.html":{}}}],["changetype(t",{"_index":79,"title":{},"body":{"components/AddCompComponent.html":{}}}],["changewordsizeunits",{"_index":966,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["changewordsizeunits(u",{"_index":981,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["checkbox",{"_index":567,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["child",{"_index":689,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["chips",{"_index":1520,"title":{},"body":{"classes/PeriodMock.html":{}}}],["cid",{"_index":836,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["cierra",{"_index":1353,"title":{},"body":{"components/MenuComponent.html":{}}}],["clases",{"_index":462,"title":{},"body":{"classes/AppPage.html":{},"classes/ComponentMock.html":{},"classes/GenericComp.html":{},"classes/Period.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{},"index.html":{}}}],["class",{"_index":181,"title":{"classes/AppPage.html":{},"classes/ComponentMock.html":{},"classes/GenericComp.html":{},"classes/Period.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["classes/comp",{"_index":176,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["classes/period",{"_index":178,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["clockspeed",{"_index":1231,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["clockspeed_units",{"_index":1232,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["clockspeedunits",{"_index":1244,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["clonado",{"_index":1110,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["clonar",{"_index":1109,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["clonecomp",{"_index":1146,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["cloneperiod",{"_index":1104,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["cloneperiod(p",{"_index":1107,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["closedialog",{"_index":903,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["cluster_appmodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["coincidan",{"_index":354,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["combobox",{"_index":73,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["commonmodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["comp",{"_index":20,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["comp'},{'name",{"_index":319,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["comp.clockspeed_units",{"_index":945,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["comp.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["comp.component.css",{"_index":22,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.html",{"_index":24,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts",{"_index":12,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:101",{"_index":1015,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:103",{"_index":130,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:111",{"_index":1034,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:131",{"_index":121,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:138",{"_index":1030,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:160",{"_index":1033,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:172",{"_index":1023,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:18",{"_index":144,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:186",{"_index":1029,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:197",{"_index":1032,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:20",{"_index":156,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:21",{"_index":155,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:23",{"_index":160,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:24",{"_index":158,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:25",{"_index":1039,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:26",{"_index":140,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:27",{"_index":145,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:28",{"_index":1036,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:29",{"_index":141,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:30",{"_index":142,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:31",{"_index":153,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:32",{"_index":1041,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:34",{"_index":1037,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:35",{"_index":60,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:36",{"_index":1038,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:37",{"_index":157,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:39",{"_index":123,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:40",{"_index":1014,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:42",{"_index":1040,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:44",{"_index":1031,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:49",{"_index":83,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:55",{"_index":1016,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:64",{"_index":104,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:76",{"_index":68,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component.ts:84",{"_index":80,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component.ts:89",{"_index":1021,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["comp.component.ts:92",{"_index":124,"title":{},"body":{"components/AddCompComponent.html":{}}}],["comp.component_description",{"_index":301,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_family",{"_index":300,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_id",{"_index":865,"title":{},"body":{"classes/ComponentMock.html":{}}}],["comp.component_name",{"_index":299,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{}}}],["comp.component_period_id",{"_index":305,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_price",{"_index":306,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_price_units",{"_index":307,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_year_end",{"_index":304,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.component_year_init",{"_index":302,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["comp.cpu_power_units",{"_index":948,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["comp.program_memory_units",{"_index":940,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["comp.ram_memory_units",{"_index":942,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["comp.wordsize_units",{"_index":951,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["comp/add",{"_index":11,"title":{},"body":{"components/AddCompComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["comp/edit",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FormEditCompComponent.html":{}}}],["comparación",{"_index":351,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["compdevices",{"_index":597,"title":{},"body":{"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["compdevices.desktop",{"_index":607,"title":{},"body":{"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{}}}],["compdevices.portable",{"_index":738,"title":{},"body":{"classes/ComponentMock.html":{}}}],["compimginput",{"_index":520,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["compimgschange",{"_index":524,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["compimgschange(e",{"_index":545,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["compimgsindb",{"_index":532,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["compinputscomponent",{"_index":324,"title":{"components/CompInputsComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["complejidad",{"_index":804,"title":{},"body":{"classes/ComponentMock.html":{}}}],["complementaban",{"_index":1537,"title":{},"body":{"classes/PeriodMock.html":{}}}],["completar",{"_index":263,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["complete",{"_index":670,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component'},{'name",{"_index":345,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["component.component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":1388,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.html",{"_index":1389,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts",{"_index":1387,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:103",{"_index":1401,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:18",{"_index":1406,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:20",{"_index":1405,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:22",{"_index":1404,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:23",{"_index":1407,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:25",{"_index":1392,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:29",{"_index":1399,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:40",{"_index":1393,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:59",{"_index":1394,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:72",{"_index":1395,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:80",{"_index":1398,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:88",{"_index":1397,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component.component.ts:95",{"_index":1396,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["component/:compid",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/my",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MyComponentComponent.html":{}}}],["component_description",{"_index":1132,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_devices",{"_index":1133,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_family",{"_index":1134,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_id",{"_index":1135,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_imgs",{"_index":1136,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_name",{"_index":1137,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_period_id",{"_index":1138,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_price",{"_index":1139,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_price_units",{"_index":1140,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_template",{"_index":317,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["component_type",{"_index":1141,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_year_end",{"_index":1142,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["component_year_init",{"_index":1143,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["componente",{"_index":82,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["componentes",{"_index":2,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["componentmock",{"_index":699,"title":{"classes/ComponentMock.html":{}},"body":{"classes/ComponentMock.html":{}}}],["componentmock.comps.filter((e",{"_index":857,"title":{},"body":{"classes/ComponentMock.html":{}}}],["componentmock.comps.foreach((comp",{"_index":864,"title":{},"body":{"classes/ComponentMock.html":{}}}],["componentmock.comps.push(c",{"_index":861,"title":{},"body":{"classes/ComponentMock.html":{}}}],["componentmock.comps.splice(index",{"_index":867,"title":{},"body":{"classes/ComponentMock.html":{}}}],["components",{"_index":318,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["componentservice",{"_index":50,"title":{"injectables/ComponentService.html":{}},"body":{"components/AddCompComponent.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["comprueba",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["comps",{"_index":703,"title":{},"body":{"classes/ComponentMock.html":{},"components/PeriodComponent.html":{}}}],["comptypes",{"_index":170,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["comptypes.cpu",{"_index":208,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["comptypes.generic",{"_index":231,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["computadoras",{"_index":768,"title":{},"body":{"classes/ComponentMock.html":{}}}],["con",{"_index":92,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{}}}],["condición",{"_index":1552,"title":{},"body":{"classes/PeriodMock.html":{}}}],["confirmation",{"_index":327,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["confirmationdialogcomponent",{"_index":326,"title":{"components/ConfirmationDialogComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["confirmed",{"_index":1099,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["const",{"_index":296,"title":{},"body":{"components/AddCompComponent.html":{},"modules/AppRoutingModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["constructor(componentservice",{"_index":49,"title":{},"body":{"components/AddCompComponent.html":{}}}],["constructor(dialog",{"_index":905,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["constructor(http",{"_index":873,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["constructor(name",{"_index":1149,"title":{},"body":{"classes/GenericComp.html":{},"classes/Period.html":{}}}],["constructor(periodservice",{"_index":359,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/ListPeriodsComponent.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"injectables/ComponentService.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":918,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["constructor(route",{"_index":1391,"title":{},"body":{"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["constructor(router",{"_index":1010,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["constructor(userservice",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{}}}],["consumo",{"_index":946,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["container",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["content",{"_index":473,"title":{},"body":{"classes/AppPage.html":{},"components/CompInputsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["context",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continuar",{"_index":1028,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["continue",{"_index":904,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["contraseña",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["cookie",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cookies",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["cookieservice",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["correcto",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["correspondiente",{"_index":117,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{}}}],["correspondientes",{"_index":657,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["cpowerunits",{"_index":960,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["cpu",{"_index":87,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cpu('intel",{"_index":713,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpu(c.component_name",{"_index":1051,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["cpu(this.component_name",{"_index":1267,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["cpu(this.model.component_name",{"_index":210,"title":{},"body":{"components/AddCompComponent.html":{}}}],["cpu='cpu",{"_index":1183,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["cpu_power",{"_index":1233,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["cpu_power_units",{"_index":1234,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["cpus",{"_index":1523,"title":{},"body":{"classes/PeriodMock.html":{}}}],["cpus.ts",{"_index":701,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:30",{"_index":840,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:34",{"_index":842,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:38",{"_index":844,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:42",{"_index":833,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:49",{"_index":838,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:62",{"_index":835,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:7",{"_index":831,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:76",{"_index":848,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:80",{"_index":845,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cpus.ts:84",{"_index":846,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cputypedetailscomponent",{"_index":329,"title":{"components/CpuTypeDetailsComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["cputypeformcomponent",{"_index":332,"title":{"components/CpuTypeFormComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["crea",{"_index":84,"title":{},"body":{"components/AddCompComponent.html":{}}}],["creado",{"_index":758,"title":{},"body":{"classes/ComponentMock.html":{}}}],["crear",{"_index":1551,"title":{},"body":{"classes/PeriodMock.html":{}}}],["createmodel",{"_index":42,"title":{},"body":{"components/AddCompComponent.html":{}}}],["cual",{"_index":807,"title":{},"body":{"classes/ComponentMock.html":{}}}],["cursor",{"_index":1380,"title":{},"body":{"components/MenuComponent.html":{}}}],["custom_elements_schema",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":1483,"title":{},"body":{"components/PeriodComponent.html":{}}}],["data",{"_index":1094,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["data:`¿desea",{"_index":1280,"title":{},"body":{"components/ListPeriodsComponent.html":{},"components/PeriodComponent.html":{}}}],["datapoint",{"_index":760,"title":{},"body":{"classes/ComponentMock.html":{}}}],["date().getfullyear",{"_index":298,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["datos",{"_index":16,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["de",{"_index":81,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":280,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["declaraciones",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["decoradores",{"_index":585,"title":{},"body":{"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{}}}],["defecto",{"_index":95,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":58,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["del",{"_index":75,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["deletecomponent",{"_index":705,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/PeriodComponent.html":{}}}],["deletecomponent(c",{"_index":1466,"title":{},"body":{"components/PeriodComponent.html":{}}}],["deletecomponent(cid",{"_index":834,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["deleteperiod",{"_index":1272,"title":{},"body":{"components/ListPeriodsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["deleteperiod(p",{"_index":1274,"title":{},"body":{"components/ListPeriodsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["deletetoken",{"_index":1612,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["dependencias",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":392,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"index.html":{}}}],["desarrollado",{"_index":716,"title":{},"body":{"classes/ComponentMock.html":{}}}],["descripción",{"_index":74,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"index.html":{}}}],["descripción{{c.component_description",{"_index":1423,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["description",{"_index":1151,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["desea",{"_index":1096,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["desktop",{"_index":562,"title":{},"body":{"components/CompInputsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["desktop='desktop",{"_index":1181,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["details",{"_index":931,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"classes/Period.html":{}}}],["details'},{'name",{"_index":331,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["details.component",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":932,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["details.component.html",{"_index":933,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["details.component.ts",{"_index":930,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["details.component.ts:11",{"_index":934,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":935,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["details/cpu",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/CpuTypeDetailsComponent.html":{}}}],["detalles",{"_index":937,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["devices",{"_index":1156,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["devices.length",{"_index":1208,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["devices[0",{"_index":1209,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["devices[1",{"_index":1210,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["deviceseq",{"_index":1217,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["devuelve",{"_index":77,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["dialog",{"_index":899,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["dialog'},{'name",{"_index":328,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["dialog.component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["dialog.component.css",{"_index":900,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.html",{"_index":901,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts",{"_index":898,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":914,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":913,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":908,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":911,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:9",{"_index":907,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.disableclose",{"_index":919,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog/confirmation",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["dicha",{"_index":660,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["directiva",{"_index":315,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["directives",{"_index":349,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["diseñaron",{"_index":1565,"title":{},"body":{"classes/PeriodMock.html":{}}}],["display",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["disponible",{"_index":1709,"title":{},"body":{"modules.html":{}}}],["dispositivos",{"_index":556,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MyComponentComponent.html":{}}}],["dispositivosportátiles",{"_index":1439,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["dispositivosportátiles.&nbsp;de",{"_index":1421,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["div",{"_index":1435,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["div.col",{"_index":1005,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["div.row3",{"_index":687,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["divide",{"_index":630,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["diálogo",{"_index":910,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["dolar",{"_index":1197,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["dos",{"_index":784,"title":{},"body":{"classes/ComponentMock.html":{}}}],["duration",{"_index":290,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["dynamic",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":252,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/PeriodComponent.html":{}}}],["e)[0",{"_index":992,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["e.component_name",{"_index":858,"title":{},"body":{"classes/ComponentMock.html":{}}}],["e.component_period_id",{"_index":856,"title":{},"body":{"classes/ComponentMock.html":{}}}],["e.period_id",{"_index":1084,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["e.period_name",{"_index":249,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"classes/PeriodMock.html":{}}}],["e.target",{"_index":612,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["e2e/src/app.po.ts",{"_index":463,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":468,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":466,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":335,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["editado",{"_index":863,"title":{},"body":{"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"classes/PeriodMock.html":{}}}],["editar",{"_index":1018,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["editarlo",{"_index":1017,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["editcomp/:compid",{"_index":490,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editcomponent",{"_index":706,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["editcomponent(c",{"_index":837,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["editperiod",{"_index":1510,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["editperiod(p",{"_index":1576,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["editperiod/:periodid",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eii",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["el",{"_index":70,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{}}}],["element",{"_index":469,"title":{},"body":{"classes/AppPage.html":{},"components/CompInputsComponent.html":{}}}],["element(by.css('app",{"_index":472,"title":{},"body":{"classes/AppPage.html":{}}}],["element.files",{"_index":615,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["elemento",{"_index":313,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["elementref",{"_index":584,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["elevation",{"_index":1500,"title":{},"body":{"components/PeriodComponent.html":{}}}],["elimina",{"_index":571,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/PeriodComponent.html":{}}}],["eliminado",{"_index":1287,"title":{},"body":{"components/ListPeriodsComponent.html":{},"components/PeriodComponent.html":{}}}],["eliminar",{"_index":577,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/PeriodComponent.html":{}}}],["eliminarán",{"_index":1282,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["ello",{"_index":1556,"title":{},"body":{"classes/PeriodMock.html":{}}}],["email",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["email\\n1971",{"_index":1545,"title":{},"body":{"classes/PeriodMock.html":{}}}],["embotelladoras",{"_index":766,"title":{},"body":{"classes/ComponentMock.html":{}}}],["en",{"_index":59,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["endyear",{"_index":1153,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["energético",{"_index":1000,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["energético{{comp.cpu_power",{"_index":947,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["entradas",{"_index":531,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["entre",{"_index":573,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["enum",{"_index":1180,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["enumeraciones",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1673,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["environment",{"_index":595,"title":{},"body":{"components/CompInputsComponent.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["environment.baseimgurl",{"_index":588,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["environment.baseurl",{"_index":888,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["equals",{"_index":1147,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"classes/Period.html":{}}}],["equals(c",{"_index":1175,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["equals(p",{"_index":1455,"title":{},"body":{"classes/Period.html":{}}}],["era",{"_index":802,"title":{},"body":{"classes/ComponentMock.html":{}}}],["error",{"_index":265,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{}}}],["es",{"_index":97,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{}}}],["escogido",{"_index":91,"title":{},"body":{"components/AddCompComponent.html":{}}}],["escritorio",{"_index":557,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MyComponentComponent.html":{}}}],["escritorio.&nbsp",{"_index":1422,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["espacial",{"_index":727,"title":{},"body":{"classes/ComponentMock.html":{}}}],["esquemas",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["est",{"_index":1361,"title":{},"body":{"components/MenuComponent.html":{}}}],["este",{"_index":369,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["estos",{"_index":1524,"title":{},"body":{"classes/PeriodMock.html":{}}}],["euro",{"_index":1196,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["event",{"_index":546,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["event.target.result",{"_index":627,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["event:any",{"_index":620,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["evento",{"_index":1507,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["eventos",{"_index":1486,"title":{},"body":{"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["events",{"_index":1448,"title":{},"body":{"classes/Period.html":{}}}],["existe",{"_index":581,"title":{},"body":{"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{}}}],["existente",{"_index":1369,"title":{},"body":{"components/MenuComponent.html":{}}}],["existentes",{"_index":101,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["existiese",{"_index":1553,"title":{},"body":{"classes/PeriodMock.html":{}}}],["existía",{"_index":103,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{}}}],["exitsession",{"_index":1347,"title":{},"body":{"components/MenuComponent.html":{}}}],["export",{"_index":180,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extends",{"_index":1226,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["extensión",{"_index":632,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["fabricaba",{"_index":1518,"title":{},"body":{"classes/PeriodMock.html":{}}}],["fabricación",{"_index":1522,"title":{},"body":{"classes/PeriodMock.html":{}}}],["false",{"_index":143,"title":{},"body":{"components/AddCompComponent.html":{},"guards/AuthGuard.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["familia",{"_index":672,"title":{},"body":{"components/CompInputsComponent.html":{},"classes/PeriodMock.html":{}}}],["familia{{c.component_family",{"_index":1418,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["family",{"_index":1150,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["famoso",{"_index":583,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{}}}],["famosos",{"_index":1488,"title":{},"body":{"components/PeriodComponent.html":{}}}],["famous_system",{"_index":1144,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["famous_system_img",{"_index":1145,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["famoussys",{"_index":1478,"title":{},"body":{"components/PeriodComponent.html":{}}}],["famoussys.push({name",{"_index":1480,"title":{},"body":{"components/PeriodComponent.html":{}}}],["famoussystem",{"_index":1158,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["famoussystemimg",{"_index":1159,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["famoussystems",{"_index":1441,"title":{},"body":{"classes/Period.html":{}}}],["fff",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["fichero",{"_index":9,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["file",{"_index":151,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["filelist",{"_index":614,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filelist.length",{"_index":616,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filelist[0].name.split",{"_index":634,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filenameext",{"_index":633,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filenameext[0",{"_index":636,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filenameext[filenameext.length",{"_index":637,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filereader",{"_index":618,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["filesource",{"_index":152,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["fin",{"_index":277,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["flex",{"_index":1428,"title":{},"body":{"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["float:left",{"_index":1429,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["floppy",{"_index":1546,"title":{},"body":{"classes/PeriodMock.html":{}}}],["flying",{"_index":796,"title":{},"body":{"classes/ComponentMock.html":{}}}],["font",{"_index":696,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["form",{"_index":849,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/CpuTypeFormComponent.html":{}}}],["form'},{'name",{"_index":333,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["form.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.css",{"_index":958,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.html",{"_index":959,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts",{"_index":957,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:11",{"_index":968,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:13",{"_index":987,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:14",{"_index":989,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:15",{"_index":967,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:19",{"_index":984,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:26",{"_index":976,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:35",{"_index":979,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:43",{"_index":970,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:51",{"_index":973,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.component.ts:59",{"_index":982,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["form.value",{"_index":896,"title":{},"body":{"injectables/ComponentService.html":{}}}],["form/cpu",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"components/CpuTypeFormComponent.html":{}}}],["formaba",{"_index":1534,"title":{},"body":{"classes/PeriodMock.html":{}}}],["formcontrol",{"_index":148,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["formeditcompcomponent",{"_index":334,"title":{"components/FormEditCompComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["formeditperiodcomponent",{"_index":336,"title":{"components/FormEditPeriodComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["formgroup",{"_index":136,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{}}}],["formsmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":126,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["frecuencia",{"_index":943,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["fue",{"_index":723,"title":{},"body":{"classes/ComponentMock.html":{}}}],["fuera",{"_index":1569,"title":{},"body":{"classes/PeriodMock.html":{}}}],["full",{"_index":269,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppRoutingModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["funcional",{"_index":731,"title":{},"body":{"classes/ComponentMock.html":{}}}],["funciones.\\nsus",{"_index":1538,"title":{},"body":{"classes/PeriodMock.html":{}}}],["función",{"_index":90,"title":{},"body":{"components/AddCompComponent.html":{}}}],["galería",{"_index":1403,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["gallery",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/MyComponentComponent.html":{},"dependencies.html":{}}}],["generación.\\nse",{"_index":1564,"title":{},"body":{"classes/PeriodMock.html":{}}}],["general",{"_index":1696,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic='component",{"_index":1184,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["genericcomp",{"_index":171,"title":{"classes/GenericComp.html":{}},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{}}}],["genericcomp(c.component_name",{"_index":1075,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["genericcomp(this.component_name",{"_index":1224,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["genericcomp(this.model.component_name",{"_index":230,"title":{},"body":{"components/AddCompComponent.html":{}}}],["genérico",{"_index":89,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["getactualyear",{"_index":525,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["getall",{"_index":1511,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["getcomponent",{"_index":707,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["getcomponent(cid",{"_index":880,"title":{},"body":{"injectables/ComponentService.html":{}}}],["getcomponent(id",{"_index":839,"title":{},"body":{"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["getcomponentimgs",{"_index":708,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["getcomponentimgs(cid",{"_index":882,"title":{},"body":{"injectables/ComponentService.html":{}}}],["getcomponentimgs(id",{"_index":841,"title":{},"body":{"classes/ComponentMock.html":{}}}],["getcomponents",{"_index":1464,"title":{},"body":{"components/PeriodComponent.html":{}}}],["getcomponentsfromperiod",{"_index":709,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["getcomponentsfromperiod(id",{"_index":843,"title":{},"body":{"classes/ComponentMock.html":{}}}],["getcomponentsfromperiod(pid",{"_index":884,"title":{},"body":{"injectables/ComponentService.html":{}}}],["getcomps",{"_index":710,"title":{},"body":{"classes/ComponentMock.html":{}}}],["getimages",{"_index":1007,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["getimages(id",{"_index":1019,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["getperiod",{"_index":1105,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["getperiod(id",{"_index":1111,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["getperiod(pid",{"_index":1599,"title":{},"body":{"injectables/PeriodService.html":{}}}],["getperiodbyname",{"_index":1512,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["getperiodbyname(pname",{"_index":1580,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["getperiods",{"_index":43,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"classes/PeriodMock.html":{}}}],["gettitletext",{"_index":464,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":1613,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["goback",{"_index":1008,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["gottlieb",{"_index":795,"title":{},"body":{"classes/ComponentMock.html":{}}}],["gran",{"_index":803,"title":{},"body":{"classes/ComponentMock.html":{}}}],["gráfica",{"_index":1708,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":496,"title":{"guards/AuthGuard.html":{}},"body":{}}],["guard.guard",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.guard.ts",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.guard.ts:13",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.guard.ts:9",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guarda",{"_index":659,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["guardado",{"_index":288,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"classes/PeriodMock.html":{}}}],["guardan",{"_index":599,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["guardar",{"_index":264,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["guardia",{"_index":1699,"title":{},"body":{"index.html":{}}}],["guardias",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h2",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["h3",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["ha",{"_index":294,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["haber",{"_index":281,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["hablar",{"_index":1531,"title":{},"body":{"classes/PeriodMock.html":{}}}],["había",{"_index":648,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["han",{"_index":1026,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["hardware",{"_index":793,"title":{},"body":{"classes/ComponentMock.html":{}}}],["hay",{"_index":353,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1432,"title":{},"body":{"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["herz",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["herz=\"hz",{"_index":1189,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["hicieron",{"_index":1558,"title":{},"body":{"classes/PeriodMock.html":{}}}],["html",{"_index":314,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["htmlinputelement",{"_index":613,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["http",{"_index":876,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["http://156.35.163.193/php",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://156.35.163.193/php/upload",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":874,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["hz",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ibm",{"_index":821,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["id",{"_index":113,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["id.res",{"_index":293,"title":{},"body":{"components/AddCompComponent.html":{}}}],["idfromroute",{"_index":1046,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["iguales",{"_index":1357,"title":{},"body":{"components/MenuComponent.html":{}}}],["igualmente",{"_index":787,"title":{},"body":{"classes/ComponentMock.html":{}}}],["image",{"_index":853,"title":{},"body":{"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["imagen",{"_index":572,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["imagen1.jpeg",{"_index":852,"title":{},"body":{"classes/ComponentMock.html":{}}}],["imagen2.jpeg",{"_index":854,"title":{},"body":{"classes/ComponentMock.html":{}}}],["images",{"_index":28,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["imagesnames",{"_index":29,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["img",{"_index":646,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{}}}],["img.show",{"_index":1438,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["img.split('.')[0",{"_index":668,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["imgname",{"_index":661,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["imgnames",{"_index":1157,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["imgnames.foreach((i",{"_index":1212,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["imgs",{"_index":1411,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["imgs.foreach((i",{"_index":1080,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["imgs.push({path",{"_index":1413,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["imgurl",{"_index":521,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["implementa",{"_index":13,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["implements",{"_index":182,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["import",{"_index":161,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["importa",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imágenes",{"_index":135,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["incorporaba",{"_index":788,"title":{},"body":{"classes/ComponentMock.html":{}}}],["incorrectos",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{}}}],["ind",{"_index":667,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["index",{"_index":644,"title":{"index.html":{}},"body":{"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"classes/PeriodMock.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["informática",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["inici",{"_index":1521,"title":{},"body":{"classes/PeriodMock.html":{}}}],["inicial",{"_index":129,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["iniciales",{"_index":184,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["iniciar",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":276,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["initialobject",{"_index":1349,"title":{},"body":{"components/MenuComponent.html":{}}}],["inityear",{"_index":1152,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["inject",{"_index":916,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":915,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["injectable",{"_index":510,"title":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["input",{"_index":593,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["input.file",{"_index":692,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["input[file",{"_index":552,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["input[type=checkbox",{"_index":693,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["input[type=submit",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputs",{"_index":348,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs'},{'name",{"_index":325,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["inputs.component.css",{"_index":518,"title":{},"body":{"components/CompInputsComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs.component.html",{"_index":519,"title":{},"body":{"components/CompInputsComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs.component.ts",{"_index":517,"title":{},"body":{"components/CompInputsComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs.component.ts:11",{"_index":1503,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["inputs.component.ts:117",{"_index":547,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:12",{"_index":589,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:14",{"_index":537,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:149",{"_index":570,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:15",{"_index":534,"title":{},"body":{"components/CompInputsComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs.component.ts:17",{"_index":535,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:18",{"_index":536,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:21",{"_index":592,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:23",{"_index":587,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:25",{"_index":533,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:29",{"_index":560,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:32",{"_index":553,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:40",{"_index":554,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:48",{"_index":558,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:56",{"_index":539,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:65",{"_index":563,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs.component.ts:76",{"_index":579,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["inputs/comp",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/CompInputsComponent.html":{}}}],["inputs/period",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"components/PeriodInputsComponent.html":{}}}],["inputs[file",{"_index":192,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["inserta",{"_index":137,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{}}}],["insertado",{"_index":366,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["instal",{"_index":720,"title":{},"body":{"classes/ComponentMock.html":{}}}],["instalarse",{"_index":725,"title":{},"body":{"classes/ComponentMock.html":{}}}],["instrucciones",{"_index":772,"title":{},"body":{"classes/ComponentMock.html":{}}}],["intel",{"_index":715,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["intercambio",{"_index":1560,"title":{},"body":{"classes/PeriodMock.html":{}}}],["interface",{"_index":1179,"title":{"interfaces/MyComponent.html":{}},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["interfaces",{"_index":1382,"title":{},"body":{"interfaces/MyComponent.html":{}}}],["interfaz",{"_index":1700,"title":{},"body":{"index.html":{}}}],["interrupciones",{"_index":792,"title":{},"body":{"classes/ComponentMock.html":{}}}],["introducidos",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["introducir",{"_index":273,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["introduzca",{"_index":1504,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["inyectables",{"_index":870,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ionicons",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["isdesktop",{"_index":526,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MyComponentComponent.html":{}}}],["isedited",{"_index":1009,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["islogged",{"_index":1614,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["isportable",{"_index":527,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MyComponentComponent.html":{}}}],["isvalid",{"_index":44,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["isvalid(comp",{"_index":119,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["isvalid(period",{"_index":361,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["ivygallerymodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["jpeg",{"_index":639,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["jpg",{"_index":638,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["json.stringify(token",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["juego",{"_index":771,"title":{},"body":{"classes/ComponentMock.html":{}}}],["juntar",{"_index":1043,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["junto",{"_index":786,"title":{},"body":{"classes/ComponentMock.html":{}}}],["justify",{"_index":1424,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["kb",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["khz",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kilobyte",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kilobyte=\"kb",{"_index":1187,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["kiloherz",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kiloherz=\"khz",{"_index":1190,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["kilowatios",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kilowatios=\"kw",{"_index":1193,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["kw",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":114,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["label",{"_index":681,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["label.inputright",{"_index":1004,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["label:not(:first",{"_index":688,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["las",{"_index":93,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"classes/PeriodMock.html":{}}}],["lcd",{"_index":1548,"title":{},"body":{"classes/PeriodMock.html":{}}}],["lcd',2",{"_index":1571,"title":{},"body":{"classes/PeriodMock.html":{}}}],["le",{"_index":194,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["left",{"_index":683,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["letter",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["leyenda",{"_index":312,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["li",{"_index":1371,"title":{},"body":{"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["li::before",{"_index":1372,"title":{},"body":{"components/MenuComponent.html":{}}}],["lightbox",{"_index":1434,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["link",{"_index":1496,"title":{},"body":{"components/PeriodComponent.html":{}}}],["list",{"_index":338,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["lista",{"_index":107,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["listado",{"_index":1288,"title":{},"body":{"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{}}}],["listperiods",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["listperiodscomponent",{"_index":337,"title":{"components/ListPeriodsComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["literal",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{},"classes/Period.html":{},"miscellaneous/variables.html":{}}}],["lo",{"_index":679,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["loaded",{"_index":30,"title":{},"body":{"components/AddCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["localstorage.getitem(\"session",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem(\"session",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem(\"session",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["location",{"_index":1012,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["login",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":341,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["login(user",{"_index":1622,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["login.component.css",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":340,"title":{"components/LoginComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["logout",{"_index":1375,"title":{},"body":{"components/MenuComponent.html":{}}}],["logueado",{"_index":1354,"title":{},"body":{"components/MenuComponent.html":{}}}],["los",{"_index":99,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["luego",{"_index":197,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["línea",{"_index":1506,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["marca",{"_index":718,"title":{},"body":{"classes/ComponentMock.html":{}}}],["margin",{"_index":682,"title":{},"body":{"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["mat",{"_index":1499,"title":{},"body":{"components/PeriodComponent.html":{}}}],["mat_dialog_data",{"_index":917,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["matdialog",{"_index":1013,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["matdialogmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":906,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["matsnackbar",{"_index":53,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["matsnackbarmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":676,"title":{},"body":{"components/CompInputsComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["mb",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mcs",{"_index":1536,"title":{},"body":{"classes/PeriodMock.html":{}}}],["megabyte",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["megabyte=\"mb",{"_index":1188,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["megaherz",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["megaherz=\"mhz",{"_index":1191,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["megawatios",{"_index":1194,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["memoria",{"_index":938,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"classes/PeriodMock.html":{}}}],["memoryunits",{"_index":172,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["memoryunits.bit",{"_index":223,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{}}}],["memoryunits.byte",{"_index":747,"title":{},"body":{"classes/ComponentMock.html":{}}}],["memoryunits.kilobyte",{"_index":745,"title":{},"body":{"classes/ComponentMock.html":{}}}],["memoryunits.megabyte",{"_index":814,"title":{},"body":{"classes/ComponentMock.html":{}}}],["memunits",{"_index":961,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["menu",{"_index":1344,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":343,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["menu.component.css",{"_index":1345,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":1346,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["menucomponent",{"_index":342,"title":{"components/MenuComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["message",{"_index":902,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["meta",{"_index":15,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["mhz",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":674,"title":{},"body":{"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["miscellaneous",{"_index":1672,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{}}],["miscelánea",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismas.\\npor",{"_index":1555,"title":{},"body":{"classes/PeriodMock.html":{}}}],["mismo",{"_index":1285,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["model",{"_index":31,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["model.transistor_size_units",{"_index":1002,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["modelos.\\nestos",{"_index":1525,"title":{},"body":{"classes/PeriodMock.html":{}}}],["module",{"_index":389,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":1703,"title":{"modules.html":{}},"body":{}}],["moneda",{"_index":541,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["mostrar",{"_index":936,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["motivo",{"_index":806,"title":{},"body":{"classes/ComponentMock.html":{}}}],["muestra",{"_index":1027,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["museo",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["museoinfo2022",{"_index":1629,"title":{},"body":{"classes/UserMock.html":{}}}],["museum",{"_index":733,"title":{},"body":{"classes/ComponentMock.html":{}}}],["mw",{"_index":1195,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mycomponent",{"_index":120,"title":{"interfaces/MyComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["mycomponentcomponent",{"_index":344,"title":{"components/MyComponentComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["myform",{"_index":32,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["máquinas",{"_index":721,"title":{},"body":{"classes/ComponentMock.html":{}}}],["métodos",{"_index":39,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["módulos",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["móviles",{"_index":568,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["name",{"_index":147,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["nanómetros",{"_index":952,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["nave",{"_index":726,"title":{},"body":{"classes/ComponentMock.html":{}}}],["navega",{"_index":367,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["navegador",{"_index":1705,"title":{},"body":{"modules.html":{}}}],["navegar",{"_index":1362,"title":{},"body":{"components/MenuComponent.html":{},"modules.html":{}}}],["navigate",{"_index":1348,"title":{},"body":{"components/MenuComponent.html":{}}}],["navigate(route",{"_index":1358,"title":{},"body":{"components/MenuComponent.html":{}}}],["navigateto",{"_index":465,"title":{},"body":{"classes/AppPage.html":{}}}],["ndice",{"_index":25,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["necesarios",{"_index":132,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["negativos",{"_index":283,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["new",{"_index":146,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["ng",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbmodule",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":45,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["ngx",{"_index":168,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ni",{"_index":1528,"title":{},"body":{"classes/PeriodMock.html":{}}}],["nm",{"_index":1261,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["nombre",{"_index":63,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["nombres",{"_index":193,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["none",{"_index":695,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["normalize.css",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["nueva",{"_index":544,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["nuevas",{"_index":789,"title":{},"body":{"classes/ComponentMock.html":{}}}],["nuevo",{"_index":76,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["null",{"_index":303,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{}}}],["number",{"_index":122,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"injectables/PeriodService.html":{}}}],["number(routeparams.get('compid",{"_index":1047,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["number(routeparams.get('periodid",{"_index":1120,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["numéricos",{"_index":282,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["número",{"_index":955,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["o",{"_index":88,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["object",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(comptypes",{"_index":159,"title":{},"body":{"components/AddCompComponent.html":{}}}],["object.values(memoryunits",{"_index":986,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["object.values(powerunits",{"_index":985,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["object.values(priceunits",{"_index":590,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["object.values(speedunits",{"_index":988,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["objeto",{"_index":86,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["observable",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{}}}],["obtener",{"_index":631,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["obtiene",{"_index":105,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["obtienen",{"_index":1020,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["of([{image",{"_index":851,"title":{},"body":{"classes/ComponentMock.html":{}}}],["of(componentmock.comps.filter((e",{"_index":855,"title":{},"body":{"classes/ComponentMock.html":{}}}],["of(componentmock.comps[0",{"_index":850,"title":{},"body":{"classes/ComponentMock.html":{}}}],["of(periodmock.periods",{"_index":1586,"title":{},"body":{"classes/PeriodMock.html":{}}}],["of(periodmock.periods[0",{"_index":1585,"title":{},"body":{"classes/PeriodMock.html":{}}}],["of({email",{"_index":1630,"title":{},"body":{"classes/UserMock.html":{}}}],["of({error",{"_index":860,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["of({next",{"_index":862,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["onchange",{"_index":528,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["onchange(portable",{"_index":561,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["opacity",{"_index":1436,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["opcional",{"_index":65,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["open(confirmationdialogcomponent",{"_index":1093,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["ordenador",{"_index":759,"title":{},"body":{"classes/ComponentMock.html":{}}}],["original",{"_index":824,"title":{},"body":{"classes/ComponentMock.html":{}}}],["originalmente",{"_index":1517,"title":{},"body":{"classes/PeriodMock.html":{}}}],["otra",{"_index":641,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MenuComponent.html":{}}}],["overflow",{"_index":1430,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["overview",{"_index":1695,"title":{"index.html":{}},"body":{}}],["p",{"_index":33,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["p)[0",{"_index":250,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["p.name",{"_index":1130,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["p.period_details",{"_index":241,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/Period.html":{}}}],["p.period_events",{"_index":242,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/Period.html":{}}}],["p.period_id",{"_index":243,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["p.period_name",{"_index":311,"title":{},"body":{"components/AddCompComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{}}}],["p.period_name).length",{"_index":1588,"title":{},"body":{"classes/PeriodMock.html":{}}}],["p.period_name}?\\nse",{"_index":1281,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["p.period_trivia",{"_index":240,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/Period.html":{}}}],["package",{"_index":1649,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":923,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["palabra",{"_index":983,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["palabra{{comp.wordsize",{"_index":950,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["pantallas",{"_index":1547,"title":{},"body":{"classes/PeriodMock.html":{}}}],["para",{"_index":133,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"classes/PeriodMock.html":{}}}],["param",{"_index":232,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["parte",{"_index":1535,"title":{},"body":{"classes/PeriodMock.html":{}}}],["parámetros",{"_index":61,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["passmark",{"_index":999,"title":{},"body":{"components/CpuTypeFormComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["passmark{{comp.passmark",{"_index":954,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["password",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["path",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pc",{"_index":822,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["pe.period_name",{"_index":1103,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["period",{"_index":154,"title":{"classes/Period.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["period'},{'name",{"_index":321,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["period('8086",{"_index":1549,"title":{},"body":{"classes/PeriodMock.html":{}}}],["period('cpus",{"_index":1514,"title":{},"body":{"classes/PeriodMock.html":{}}}],["period(p.period_name",{"_index":239,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["period(period.period_name",{"_index":1123,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["period.component.css",{"_index":357,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period.component.html",{"_index":358,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period.component.ts",{"_index":356,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:15",{"_index":370,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["period.component.ts:16",{"_index":360,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["period.component.ts:18",{"_index":371,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:19",{"_index":1106,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:20",{"_index":364,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["period.component.ts:21",{"_index":1119,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:23",{"_index":1116,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:26",{"_index":365,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["period.component.ts:34",{"_index":1112,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:36",{"_index":362,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["period.component.ts:44",{"_index":1118,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:58",{"_index":1117,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:67",{"_index":1108,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:74",{"_index":1113,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:88",{"_index":1114,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.component.ts:95",{"_index":1115,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["period.period_details",{"_index":377,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period.period_events",{"_index":379,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period.period_id",{"_index":1591,"title":{},"body":{"classes/PeriodMock.html":{}}}],["period.period_name",{"_index":376,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{}}}],["period.period_trivia",{"_index":378,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["period/:periodid",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period/add",{"_index":355,"title":{},"body":{"components/AddPeriodComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["period/edit",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FormEditPeriodComponent.html":{}}}],["period/period.component",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["period_details",{"_index":1442,"title":{},"body":{"classes/Period.html":{}}}],["period_events",{"_index":1443,"title":{},"body":{"classes/Period.html":{}}}],["period_id",{"_index":1444,"title":{},"body":{"classes/Period.html":{}}}],["period_name",{"_index":1445,"title":{},"body":{"classes/Period.html":{}}}],["period_trivia",{"_index":1446,"title":{},"body":{"classes/Period.html":{}}}],["periodcomponent",{"_index":346,"title":{"components/PeriodComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["periodid",{"_index":1154,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["periodinputscomponent",{"_index":347,"title":{"components/PeriodInputsComponent.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"index.html":{}}}],["periodmock",{"_index":1508,"title":{"classes/PeriodMock.html":{}},"body":{"classes/PeriodMock.html":{}}}],["periodmock.periods.filter(e",{"_index":1587,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periodmock.periods.foreach((period",{"_index":1590,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periodmock.periods.push(p",{"_index":1589,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periodmock.periods.splice(index",{"_index":1592,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periodo",{"_index":71,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["periodos",{"_index":109,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["periodo{{p.period_name",{"_index":1417,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["periods",{"_index":34,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"classes/PeriodMock.html":{}}}],["periods'},{'name",{"_index":339,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["periods.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["periods.component.css",{"_index":1270,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.html",{"_index":1271,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts",{"_index":1269,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts:15",{"_index":1273,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts:17",{"_index":1278,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts:19",{"_index":1277,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts:26",{"_index":1276,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.component.ts:34",{"_index":1275,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["periods.foreach((p",{"_index":237,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["periods.ts",{"_index":1509,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:15",{"_index":1579,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:19",{"_index":1578,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:23",{"_index":1574,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:30",{"_index":1577,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:43",{"_index":1575,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:56",{"_index":1581,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:6",{"_index":1572,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:60",{"_index":1583,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods.ts:64",{"_index":1584,"title":{},"body":{"classes/PeriodMock.html":{}}}],["periods/list",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListPeriodsComponent.html":{}}}],["periodservice",{"_index":51,"title":{"injectables/PeriodService.html":{}},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"injectables/PeriodService.html":{}}}],["pero",{"_index":762,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["pertenece",{"_index":310,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["pertenecientes",{"_index":1469,"title":{},"body":{"components/PeriodComponent.html":{}}}],["php",{"_index":199,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["pid",{"_index":886,"title":{},"body":{"injectables/ComponentService.html":{},"injectables/PeriodService.html":{}}}],["pinball",{"_index":722,"title":{},"body":{"classes/ComponentMock.html":{}}}],["pioneer",{"_index":728,"title":{},"body":{"classes/ComponentMock.html":{}}}],["pname",{"_index":1582,"title":{},"body":{"classes/PeriodMock.html":{},"injectables/PeriodService.html":{}}}],["poca",{"_index":805,"title":{},"body":{"classes/ComponentMock.html":{}}}],["podido",{"_index":295,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["pointer",{"_index":1381,"title":{},"body":{"components/MenuComponent.html":{}}}],["por",{"_index":94,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["portable",{"_index":566,"title":{},"body":{"components/CompInputsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["portable='portable",{"_index":1182,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["portar",{"_index":1566,"title":{},"body":{"classes/PeriodMock.html":{}}}],["portátiles",{"_index":559,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MyComponentComponent.html":{}}}],["position",{"_index":1426,"title":{},"body":{"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["position:fixed",{"_index":1376,"title":{},"body":{"components/MenuComponent.html":{}}}],["positionclass",{"_index":266,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["potencia",{"_index":974,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["power",{"_index":1245,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["powerunits",{"_index":174,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["powerunits.watios",{"_index":225,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{}}}],["pre",{"_index":1515,"title":{},"body":{"classes/PeriodMock.html":{}}}],["precio",{"_index":677,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["precio{{c.component_price}}{{c.component_price_units",{"_index":1420,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["previamente",{"_index":640,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["price",{"_index":1155,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["priceunits",{"_index":175,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["priceunits.dolar",{"_index":229,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{}}}],["primera",{"_index":1563,"title":{},"body":{"classes/PeriodMock.html":{}}}],["primero",{"_index":118,"title":{},"body":{"components/AddCompComponent.html":{}}}],["private",{"_index":201,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"injectables/UserService.html":{}}}],["producirse",{"_index":810,"title":{},"body":{"classes/ComponentMock.html":{}}}],["production",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productor",{"_index":1554,"title":{},"body":{"classes/PeriodMock.html":{}}}],["program_memory",{"_index":1227,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["program_memory_units",{"_index":1228,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["programas",{"_index":1567,"title":{},"body":{"classes/PeriodMock.html":{}}}],["programmemory",{"_index":1240,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["programmemoryunits",{"_index":1241,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["promise",{"_index":467,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{}}}],["prop",{"_index":1415,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["properties",{"_index":1710,"title":{"properties.html":{}},"body":{}}],["propia",{"_index":1542,"title":{},"body":{"classes/PeriodMock.html":{}}}],["propiedades",{"_index":26,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["propio",{"_index":773,"title":{},"body":{"classes/ComponentMock.html":{}}}],["protractor",{"_index":470,"title":{},"body":{"classes/AppPage.html":{}}}],["providedin",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{}}}],["página",{"_index":368,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["qu",{"_index":1485,"title":{},"body":{"components/PeriodComponent.html":{}}}],["que",{"_index":187,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["quería",{"_index":1550,"title":{},"body":{"classes/PeriodMock.html":{}}}],["quiere",{"_index":234,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["radius",{"_index":927,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{}}}],["ram",{"_index":980,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["ram_memory",{"_index":1229,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["ram_memory_units",{"_index":1230,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["rammemory",{"_index":1242,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["rammemoryunits",{"_index":1243,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["ram{{comp.ram_memory",{"_index":941,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["reader",{"_index":617,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["reader.onload",{"_index":619,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["reader.readasdataurl(filelist[0",{"_index":629,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["reader.readasdataurl(filelist[i",{"_index":654,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["realizada",{"_index":565,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["realizados",{"_index":1095,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["realizan",{"_index":188,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["recibe",{"_index":112,"title":{},"body":{"components/AddCompComponent.html":{}}}],["recién",{"_index":574,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["redirectto",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reemplaza",{"_index":580,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["reemplazamos",{"_index":642,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["registros",{"_index":790,"title":{},"body":{"classes/ComponentMock.html":{}}}],["relative",{"_index":1427,"title":{},"body":{"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["reloj",{"_index":971,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["reloj{{comp.clockspeed",{"_index":944,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["removeimage",{"_index":529,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["removeimage(name",{"_index":569,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["rendimiento",{"_index":764,"title":{},"body":{"classes/ComponentMock.html":{}}}],["require",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":285,"title":{},"body":{"components/AddCompComponent.html":{}}}],["resetcomps",{"_index":711,"title":{},"body":{"classes/ComponentMock.html":{}}}],["resetea",{"_index":139,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["resetform",{"_index":46,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["resetperiods",{"_index":1513,"title":{},"body":{"classes/PeriodMock.html":{}}}],["resetuser",{"_index":1615,"title":{},"body":{"classes/UserMock.html":{}}}],["respectivos",{"_index":622,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["restablecer",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["resultados",{"_index":352,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":308,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":601,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["right",{"_index":686,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["robots",{"_index":767,"title":{},"body":{"classes/ComponentMock.html":{}}}],["rom",{"_index":977,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["rom{{comp.program_memory",{"_index":939,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["root",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/ComponentService.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["route",{"_index":54,"title":{},"body":{"components/AddCompComponent.html":{},"guards/AuthGuard.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["routeparams",{"_index":1044,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["router",{"_index":36,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"guards/AuthGuard.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["routermodule",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":477,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":476,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1003,"title":{},"body":{"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{}}}],["rutas",{"_index":1702,"title":{},"body":{"index.html":{},"routes.html":{}}}],["rxjs",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ComponentMock.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{},"dependencies.html":{}}}],["réplica",{"_index":730,"title":{},"body":{"classes/ComponentMock.html":{}}}],["s",{"_index":912,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["s.name",{"_index":1489,"title":{},"body":{"components/PeriodComponent.html":{}}}],["s.sysname",{"_index":1490,"title":{},"body":{"components/PeriodComponent.html":{}}}],["sabías",{"_index":1484,"title":{},"body":{"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["saca",{"_index":621,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["salida",{"_index":673,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["savename",{"_index":635,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["schemas",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":111,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{}}}],["sea",{"_index":254,"title":{},"body":{"components/AddCompComponent.html":{}}}],["selecciona",{"_index":116,"title":{},"body":{"components/AddCompComponent.html":{}}}],["seleccionada",{"_index":542,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["seleccionadas",{"_index":549,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["seleccionado",{"_index":72,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{}}}],["seleccione",{"_index":309,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["seleccioona",{"_index":1022,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["selección",{"_index":564,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["select",{"_index":685,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["sentido",{"_index":1530,"title":{},"body":{"classes/PeriodMock.html":{}}}],["service",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services/component.service",{"_index":177,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["services/period.service",{"_index":179,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["services/user.service",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["sesión",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["setdevices",{"_index":1148,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["setdevices(devices",{"_index":1177,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["settoken",{"_index":1616,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["settoken(token",{"_index":1626,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["showgallery",{"_index":1390,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["showgallery(index",{"_index":1400,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["si",{"_index":96,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{}}}],["sido",{"_index":649,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MenuComponent.html":{}}}],["simples",{"_index":769,"title":{},"body":{"classes/ComponentMock.html":{}}}],["sin",{"_index":1042,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["sistema",{"_index":582,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{}}}],["sistemas",{"_index":1487,"title":{},"body":{"components/PeriodComponent.html":{}}}],["size",{"_index":697,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["small",{"_index":698,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["snackbar",{"_index":52,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["sobre",{"_index":186,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["solid",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["solo",{"_index":1519,"title":{},"body":{"classes/PeriodMock.html":{}}}],["son",{"_index":1356,"title":{},"body":{"components/MenuComponent.html":{}}}],["soporta",{"_index":1706,"title":{},"body":{"modules.html":{}}}],["soporte",{"_index":791,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["spacing",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["span')).gettext",{"_index":474,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speedunits",{"_index":173,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/CpuTypeFormComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["speedunits.herz",{"_index":224,"title":{},"body":{"components/AddCompComponent.html":{}}}],["speedunits.kiloherz",{"_index":749,"title":{},"body":{"classes/ComponentMock.html":{}}}],["speedunits.megaherz",{"_index":815,"title":{},"body":{"classes/ComponentMock.html":{}}}],["src/.../comp.ts",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":10,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{}}}],["src/app/app",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/classes/comp.ts",{"_index":1131,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/classes/comp.ts:102",{"_index":1174,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:17",{"_index":1385,"title":{},"body":{"interfaces/MyComponent.html":{}}}],["src/app/classes/comp.ts:19",{"_index":1384,"title":{},"body":{"interfaces/MyComponent.html":{}}}],["src/app/classes/comp.ts:21",{"_index":1383,"title":{},"body":{"interfaces/MyComponent.html":{}}}],["src/app/classes/comp.ts:38",{"_index":1164,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:39",{"_index":1166,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:40",{"_index":1163,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:41",{"_index":1161,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:42",{"_index":1171,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:43",{"_index":1170,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:44",{"_index":1167,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:45",{"_index":1168,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:46",{"_index":1169,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:47",{"_index":1162,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:48",{"_index":1165,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:49",{"_index":1172,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:50",{"_index":1173,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:51",{"_index":1160,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:87",{"_index":1178,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/comp.ts:91",{"_index":1176,"title":{},"body":{"classes/GenericComp.html":{}}}],["src/app/classes/period.ts",{"_index":1440,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:26",{"_index":1456,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:3",{"_index":1452,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:4",{"_index":1453,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:5",{"_index":1454,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:6",{"_index":1450,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:7",{"_index":1451,"title":{},"body":{"classes/Period.html":{}}}],["src/app/classes/period.ts:8",{"_index":1449,"title":{},"body":{"classes/Period.html":{}}}],["src/app/comp",{"_index":516,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["src/app/confirmation",{"_index":897,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["src/app/cpu",{"_index":929,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["src/app/edit",{"_index":1006,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["src/app/list",{"_index":1268,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/menu/menu.component.ts",{"_index":1343,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:14",{"_index":1351,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:15",{"_index":1350,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:17",{"_index":1364,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:19",{"_index":1363,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:26",{"_index":1359,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:40",{"_index":1355,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:50",{"_index":1352,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/my",{"_index":1386,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["src/app/period",{"_index":1502,"title":{},"body":{"components/PeriodInputsComponent.html":{}}}],["src/app/period/period.component.ts",{"_index":1463,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:19",{"_index":1474,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:21",{"_index":1475,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:22",{"_index":1465,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:24",{"_index":1473,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:26",{"_index":1472,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:37",{"_index":1471,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:47",{"_index":1468,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/period/period.component.ts:63",{"_index":1467,"title":{},"body":{"components/PeriodComponent.html":{}}}],["src/app/services/component.service.ts",{"_index":871,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:12",{"_index":875,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:16",{"_index":877,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:20",{"_index":879,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:24",{"_index":878,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:28",{"_index":881,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:32",{"_index":885,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:36",{"_index":883,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/component.service.ts:40",{"_index":887,"title":{},"body":{"injectables/ComponentService.html":{}}}],["src/app/services/period.service.ts",{"_index":1593,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:11",{"_index":1594,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:16",{"_index":1595,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:20",{"_index":1597,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:24",{"_index":1596,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:28",{"_index":1600,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:32",{"_index":1601,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/period.service.ts:36",{"_index":1598,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/app/services/testing/mock",{"_index":700,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{}}}],["src/app/services/user.service.ts",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:11",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:24",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment",{"_index":596,"title":{},"body":{"components/CompInputsComponent.html":{},"injectables/ComponentService.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"injectables/PeriodService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{}}}],["static",{"_index":702,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AddCompComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"classes/GenericComp.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"classes/Period.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["style",{"_index":694,"title":{},"body":{"components/CompInputsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["su",{"_index":127,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["sube",{"_index":138,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["subida",{"_index":550,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["subidas",{"_index":190,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["subido",{"_index":611,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["subidos",{"_index":653,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["subir",{"_index":134,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["subirlas",{"_index":198,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["submit",{"_index":47,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["subscribe((confirmed",{"_index":1098,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["sucesor",{"_index":755,"title":{},"body":{"classes/ComponentMock.html":{}}}],["sucesores",{"_index":785,"title":{},"body":{"classes/ComponentMock.html":{},"classes/PeriodMock.html":{}}}],["super(name",{"_index":1248,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["super.equals(c",{"_index":1264,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["sus",{"_index":196,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["svg",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["switch(this.isvalid(this.model",{"_index":259,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["sysimgchange",{"_index":530,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["sysimgchange(e",{"_index":578,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["sysimginput",{"_index":522,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["sysname",{"_index":1457,"title":{},"body":{"classes/Period.html":{},"components/PeriodComponent.html":{}}}],["systems",{"_index":1491,"title":{},"body":{"components/PeriodComponent.html":{}}}],["t",{"_index":37,"title":{},"body":{"components/AddCompComponent.html":{},"components/PeriodComponent.html":{}}}],["t)[0",{"_index":253,"title":{},"body":{"components/AddCompComponent.html":{}}}],["tamaño",{"_index":949,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["también",{"_index":1283,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["tard",{"_index":808,"title":{},"body":{"classes/ComponentMock.html":{}}}],["tecnológico",{"_index":1561,"title":{},"body":{"classes/PeriodMock.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["tenía",{"_index":770,"title":{},"body":{"classes/ComponentMock.html":{}}}],["tenían",{"_index":1541,"title":{},"body":{"classes/PeriodMock.html":{}}}],["terminales",{"_index":765,"title":{},"body":{"classes/ComponentMock.html":{}}}],["text",{"_index":690,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["this._location.back",{"_index":1100,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.c",{"_index":205,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.c.clonecomp",{"_index":1083,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.c.component_devices.split(',').includes(compdevices.desktop",{"_index":1410,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.c.component_devices.split(',').includes(compdevices.portable",{"_index":1409,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.c.component_imgs.foreach((i",{"_index":1412,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.c.component_imgs.push(i.image",{"_index":1081,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.c.component_period_id)[0",{"_index":1085,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.c.equals(this.model",{"_index":1101,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.c.famous_system_img",{"_index":1076,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.changeperiod(this.p.period_name",{"_index":1086,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.clockspeed",{"_index":1253,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.clockspeed_units",{"_index":1254,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.cloneperiod(this.model",{"_index":1126,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.cloneperiod(this.p",{"_index":1124,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.compimginput.nativeelement.value",{"_index":656,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.compimgsindb.foreach((img",{"_index":643,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.compimgsindb.push(i",{"_index":1090,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.compimgsindb.push(i.image",{"_index":1082,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.compimgsindb.push(this.c.famous_system_img",{"_index":1077,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.compimgsindb.splice(index,1",{"_index":647,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.component_description",{"_index":1201,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_devices",{"_index":1207,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_devices.split",{"_index":1225,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_devices.split(',').foreach((e",{"_index":1221,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_devices.split(',').length",{"_index":1219,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_family",{"_index":1200,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_id",{"_index":1198,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_imgs",{"_index":1211,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_imgs.push(i",{"_index":1213,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_name",{"_index":1199,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_period_id",{"_index":1204,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_price",{"_index":1205,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_price_units",{"_index":1206,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_type",{"_index":1216,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_year_end",{"_index":1203,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.component_year_init",{"_index":1202,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.componentservice.addcomponent(this.model).subscribe((id",{"_index":284,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.componentservice.deletecomponent(c.component_id).subscribe",{"_index":1482,"title":{},"body":{"components/PeriodComponent.html":{}}}],["this.componentservice.editcomponent(this.model).subscribe",{"_index":1087,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.componentservice.getcomponent(id).subscribe((c",{"_index":1049,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.componentservice.getcomponentimgs(id).subscribe((imgs",{"_index":1079,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.componentservice.getcomponentsfromperiod(this.p.period_id).subscribe((comps",{"_index":1477,"title":{},"body":{"components/PeriodComponent.html":{}}}],["this.componentservice.uploadcomponentimgs(this.myform).subscribe",{"_index":286,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.comps",{"_index":869,"title":{},"body":{"classes/ComponentMock.html":{},"components/PeriodComponent.html":{}}}],["this.comps.foreach((c",{"_index":1479,"title":{},"body":{"components/PeriodComponent.html":{}}}],["this.cookies.delete(\"token",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.get(\"token",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.set(\"token",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cpowerunits.filter((e",{"_index":997,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.cpu_power",{"_index":1255,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.cpu_power_units",{"_index":1256,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.createmodel",{"_index":204,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.dialog",{"_index":1092,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{}}}],["this.dialog.close(false",{"_index":920,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["this.dialog.close(true",{"_index":921,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["this.famous_system",{"_index":1214,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.famous_system_img",{"_index":1215,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.gallery.load(prop",{"_index":1416,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.getcomponent(idfromroute",{"_index":1048,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.getcomponents",{"_index":1476,"title":{},"body":{"components/PeriodComponent.html":{}}}],["this.getimages(this.c.component_id",{"_index":1078,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.getperiod(idfromroute",{"_index":1121,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/PeriodComponent.html":{}}}],["this.getperiod(this.c.component_period_id",{"_index":1408,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.getperiods",{"_index":207,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{}}}],["this.http.delete(`${this.baseurl}/deletecomp.php?idcomp=${cid",{"_index":891,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.delete(`${this.baseurl}/deleteperiod.php?idperiod=${p.period_id",{"_index":1604,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.http.get(`${this.baseurl}/getallperiod.php",{"_index":1607,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.http.get(`${this.baseurl}/getcomp.php?idcomp=${cid",{"_index":892,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.get(`${this.baseurl}/getcompimgs.php?idcomp=${cid",{"_index":894,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.get(`${this.baseurl}/getcompsperiod.php?idperiod=${pid",{"_index":893,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.get(`${this.baseurl}/getperiod.php?idperiod=${pid",{"_index":1605,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.http.get(`${this.baseurl}/getperiodname.php?nameperiod=${pname",{"_index":1606,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.http.post(`${this.baseurl}/login.php",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.baseurl}/postcomp.php",{"_index":889,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.post(`${this.baseurl}/postperiod.php",{"_index":1602,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.http.post(`${this.baseurl}/uploadcompimgs.php",{"_index":895,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.put(`${this.baseurl}/updatecomp.php",{"_index":890,"title":{},"body":{"injectables/ComponentService.html":{}}}],["this.http.put(`${this.baseurl}/updateperiod.php",{"_index":1603,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.images",{"_index":255,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.images.indexof(name",{"_index":658,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.images.push(event.target.result",{"_index":628,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.images.splice(index",{"_index":664,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.images[i",{"_index":626,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imagesnames",{"_index":256,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.imagesnames.indexof(this.model.famous_system_img.split('.')[0",{"_index":624,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imagesnames.push(filenameext[0",{"_index":651,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imagesnames.splice(index",{"_index":665,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imagesnames[i",{"_index":650,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imagesnames[index",{"_index":662,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.imgurl",{"_index":1414,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["this.initialobject",{"_index":1366,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.initialobject.equals(this.model",{"_index":1367,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isedited",{"_index":1091,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["this.isvalid(this.model",{"_index":372,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["this.loaded",{"_index":246,"title":{},"body":{"components/AddCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.memunits.filter((e",{"_index":991,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.model",{"_index":209,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["this.model.clockspeed_units",{"_index":994,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.model.clonecomp",{"_index":206,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.model.component_description",{"_index":212,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_devices.split",{"_index":218,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_devices.split(',').includes(compdevices.desktop",{"_index":602,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.component_devices.split(',').includes(compdevices.portable",{"_index":603,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.component_family",{"_index":211,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_id",{"_index":1089,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.model.component_imgs",{"_index":219,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_imgs.foreach((img",{"_index":666,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.model.component_imgs.push(savename",{"_index":655,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.component_imgs.splice(ind,1",{"_index":669,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.component_imgs.splice(index,1",{"_index":1102,"title":{},"body":{"components/FormEditCompComponent.html":{}}}],["this.model.component_period_id",{"_index":215,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.model.component_price",{"_index":216,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_price_units",{"_index":217,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{}}}],["this.model.component_year_end",{"_index":214,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.component_year_init",{"_index":213,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.cpu_power_units",{"_index":996,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.model.famous_system",{"_index":220,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.model.famous_system_img",{"_index":221,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.model.password).subscribe((data",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.model.period_id",{"_index":1128,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.model.program_memory_units",{"_index":990,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.model.ram_memory_units",{"_index":993,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.model.setdevices",{"_index":609,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.setdevices([compdevices.desktop",{"_index":608,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.setdevices([compdevices.portable",{"_index":606,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.model.wordsize_units",{"_index":998,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.myform.patchvalue",{"_index":258,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.p",{"_index":244,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["this.p.equals(this.model",{"_index":1129,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.p.famoussystems",{"_index":1481,"title":{},"body":{"components/PeriodComponent.html":{}}}],["this.p.period_id",{"_index":257,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.passmark",{"_index":1262,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.period_details",{"_index":1461,"title":{},"body":{"classes/Period.html":{}}}],["this.period_events",{"_index":1462,"title":{},"body":{"classes/Period.html":{}}}],["this.period_id",{"_index":1458,"title":{},"body":{"classes/Period.html":{}}}],["this.period_name",{"_index":1459,"title":{},"body":{"classes/Period.html":{}}}],["this.period_trivia",{"_index":1460,"title":{},"body":{"classes/Period.html":{}}}],["this.periods",{"_index":1279,"title":{},"body":{"components/ListPeriodsComponent.html":{},"classes/PeriodMock.html":{}}}],["this.periods.filter((e",{"_index":248,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.periods.push(new",{"_index":238,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.periods[0",{"_index":245,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.periodservice.addperiod(this.model).subscribe",{"_index":373,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["this.periodservice.deleteperiod(p).subscribe",{"_index":1286,"title":{},"body":{"components/ListPeriodsComponent.html":{}}}],["this.periodservice.editperiod(this.model).subscribe",{"_index":1125,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.periodservice.getall().subscribe((periods",{"_index":236,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/ListPeriodsComponent.html":{}}}],["this.periodservice.getperiod(id).subscribe((period",{"_index":1122,"title":{},"body":{"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["this.priceunits.filter((e",{"_index":604,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.program_memory",{"_index":1249,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.program_memory_units",{"_index":1250,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.ram_memory",{"_index":1251,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.ram_memory_units",{"_index":1252,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.route.snapshot.parammap",{"_index":1045,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["this.router.navigate([\"/period",{"_index":1127,"title":{},"body":{"components/FormEditPeriodComponent.html":{}}}],["this.router.navigate(['/component",{"_index":292,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["this.router.navigatebyurl",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{},"components/MenuComponent.html":{}}}],["this.router.navigatebyurl('/addcomp",{"_index":375,"title":{},"body":{"components/AddPeriodComponent.html":{}}}],["this.router.navigatebyurl('/listperiods",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(route",{"_index":1365,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.snackbar.open('componente",{"_index":287,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/PeriodComponent.html":{}}}],["this.snackbar.open('periodo",{"_index":374,"title":{},"body":{"components/AddPeriodComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{}}}],["this.snackbar.open('usuario",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.speedunits.filter((e",{"_index":995,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["this.sysimginput.nativeelement.value",{"_index":652,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["this.t",{"_index":202,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.toastservice.error(\"debe",{"_index":262,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["this.toastservice.error(\"no",{"_index":279,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["this.transistor_size",{"_index":1259,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.transistor_size_units",{"_index":1260,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.transistors",{"_index":1263,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.type",{"_index":1074,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{}}}],["this.types.filter((e",{"_index":251,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.types[0",{"_index":203,"title":{},"body":{"components/AddCompComponent.html":{}}}],["this.userservice.deletetoken",{"_index":1368,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.userservice.islogged",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userservice.login(this.model.email",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.settoken(data.email",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.wordsize",{"_index":1257,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["this.wordsize_units",{"_index":1258,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["tiene",{"_index":1529,"title":{},"body":{"classes/PeriodMock.html":{}}}],["tienen",{"_index":1526,"title":{},"body":{"classes/PeriodMock.html":{}}}],["tipo",{"_index":64,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tipos",{"_index":183,"title":{},"body":{"components/AddCompComponent.html":{}}}],["title",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":267,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["toastr",{"_index":169,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"modules/AppModule.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":57,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["toastservice",{"_index":56,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["todos",{"_index":108,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{}}}],["token",{"_index":1610,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["top",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{},"components/PeriodComponent.html":{}}}],["top:20px",{"_index":1377,"title":{},"body":{"components/MenuComponent.html":{}}}],["transform",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["transistor_size",{"_index":1237,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["transistor_size_units",{"_index":1238,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["transistores",{"_index":1001,"title":{},"body":{"components/CpuTypeFormComponent.html":{}}}],["transistores{{comp.transistor_size",{"_index":953,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["transistores{{comp.transistors",{"_index":956,"title":{},"body":{"components/CpuTypeDetailsComponent.html":{}}}],["transistors",{"_index":1239,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["transistorsize",{"_index":1247,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["través",{"_index":191,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["trivia",{"_index":1447,"title":{},"body":{"classes/Period.html":{}}}],["true",{"_index":247,"title":{},"body":{"components/AddCompComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"classes/GenericComp.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1704,"title":{},"body":{"modules.html":{}}}],["type",{"_index":330,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"classes/Period.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":38,"title":{},"body":{"components/AddCompComponent.html":{}}}],["u",{"_index":543,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["u)[0",{"_index":605,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["ul",{"_index":1370,"title":{},"body":{"components/MenuComponent.html":{}}}],["un",{"_index":85,"title":{},"body":{"components/AddCompComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["una",{"_index":106,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["undefined",{"_index":98,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{}}}],["unidad",{"_index":540,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["unidades",{"_index":600,"title":{},"body":{"components/CompInputsComponent.html":{},"components/CpuTypeFormComponent.html":{}}}],["uno",{"_index":783,"title":{},"body":{"classes/ComponentMock.html":{},"components/PeriodComponent.html":{}}}],["uo257829@uniovi.es",{"_index":1628,"title":{},"body":{"classes/UserMock.html":{}}}],["uploadcomponentimgs",{"_index":712,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["uploadcomponentimgs(form",{"_index":847,"title":{},"body":{"classes/ComponentMock.html":{},"injectables/ComponentService.html":{}}}],["uppercase",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["url",{"_index":115,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{}}}],["urltree",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usado",{"_index":555,"title":{},"body":{"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/MyComponentComponent.html":{}}}],["usehash",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":1624,"title":{},"body":{"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["user.ts",{"_index":1609,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:14",{"_index":1627,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:19",{"_index":1620,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:23",{"_index":1619,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:28",{"_index":1621,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:32",{"_index":1625,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:5",{"_index":1618,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:6",{"_index":1617,"title":{},"body":{"classes/UserMock.html":{}}}],["user.ts:8",{"_index":1623,"title":{},"body":{"classes/UserMock.html":{}}}],["userlogged",{"_index":1611,"title":{},"body":{"classes/UserMock.html":{}}}],["usermock",{"_index":1608,"title":{"classes/UserMock.html":{}},"body":{"classes/UserMock.html":{}}}],["usermock.token",{"_index":1631,"title":{},"body":{"classes/UserMock.html":{}}}],["usermock.userlogged",{"_index":1632,"title":{},"body":{"classes/UserMock.html":{}}}],["userservice",{"_index":501,"title":{"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["utiliza",{"_index":680,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["utilizado",{"_index":678,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["va",{"_index":576,"title":{},"body":{"components/CompInputsComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/PeriodComponent.html":{}}}],["validators",{"_index":163,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["validators.minlength(3",{"_index":150,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["validators.required",{"_index":149,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["valor",{"_index":128,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"injectables/ComponentService.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{},"injectables/PeriodService.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valores",{"_index":100,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MenuComponent.html":{}}}],["var",{"_index":316,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/AppComponent.html":{},"components/CompInputsComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{}}}],["variables",{"_index":1713,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velocidad",{"_index":1532,"title":{},"body":{"classes/PeriodMock.html":{}}}],["version",{"_index":1711,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":594,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["viewchild('compimginput",{"_index":586,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["viewchild('sysimginput",{"_index":591,"title":{},"body":{"components/CompInputsComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/ConfirmationDialogComponent.html":{},"components/CpuTypeDetailsComponent.html":{},"components/CpuTypeFormComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"classes/GenericComp.html":{},"components/ListPeriodsComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MyComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{},"components/PeriodInputsComponent.html":{},"classes/PeriodMock.html":{},"classes/UserMock.html":{},"injectables/UserService.html":{}}}],["vuelve",{"_index":1024,"title":{},"body":{"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/MyComponentComponent.html":{}}}],["válidos",{"_index":274,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["w",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watios",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watios=\"w",{"_index":1192,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["width",{"_index":270,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/FormEditCompComponent.html":{},"components/FormEditPeriodComponent.html":{},"components/LoginComponent.html":{},"components/MyComponentComponent.html":{},"components/PeriodComponent.html":{}}}],["wordsize",{"_index":1235,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["wordsize_units",{"_index":1236,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["wordsizeunits",{"_index":1246,"title":{},"body":{"classes/GenericComp.html":{},"interfaces/MyComponent.html":{}}}],["x",{"_index":1431,"title":{},"body":{"components/MyComponentComponent.html":{}}}],["x86",{"_index":1562,"title":{},"body":{"classes/PeriodMock.html":{}}}],["x86','intel",{"_index":1516,"title":{},"body":{"classes/PeriodMock.html":{}}}],["xt",{"_index":823,"title":{},"body":{"classes/ComponentMock.html":{}}}],["y",{"_index":110,"title":{},"body":{"components/AddCompComponent.html":{},"components/AddPeriodComponent.html":{},"components/CompInputsComponent.html":{},"classes/ComponentMock.html":{},"components/FormEditCompComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/PeriodComponent.html":{},"classes/PeriodMock.html":{}}}],["ya",{"_index":102,"title":{},"body":{"components/AddCompComponent.html":{},"components/CompInputsComponent.html":{}}}],["year",{"_index":297,"title":{},"body":{"components/AddCompComponent.html":{},"components/FormEditCompComponent.html":{}}}],["z8",{"_index":1501,"title":{},"body":{"components/PeriodComponent.html":{}}}],["zone.js",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddCompComponent.html":{"url":"components/AddCompComponent.html","title":"component - AddCompComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AddCompComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/add-comp/add-comp.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-comp\n            \n\n            \n                styleUrls\n                ./add-comp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-comp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                c\n                            \n                            \n                                images\n                            \n                            \n                                imagesNames\n                            \n                            \n                                loaded\n                            \n                            \n                                model\n                            \n                            \n                                myForm\n                            \n                            \n                                p\n                            \n                            \n                                periods\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                t\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changePeriod\n                            \n                            \n                                changeType\n                            \n                            \n                                createModel\n                            \n                            \n                                getPeriods\n                            \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForm\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentService: ComponentService, periodService: PeriodService, snackBar: MatSnackBar, route: ActivatedRoute, toastService: ToastrService, router: Router)\n                    \n                \n                        \n                            \n                                Definido en src/app/add-comp/add-comp.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        componentService\n                                                  \n                                                        \n                                                                        ComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        changePeriod\n                        \n                    \n                \n            \n            \n                \nchangePeriod(p: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:76\n                \n            \n\n\n            \n                \n                    Cambia el periodo seleccionado en el combobox\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nombre del nuevo periodo seleccionado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(t: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:84\n                \n            \n\n\n            \n                \n                    Cambia el tipo de componente seleccionado en el combobox\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    t\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nuevo tipo seleccionado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createModel\n                        \n                    \n                \n            \n            \n                \ncreateModel()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:49\n                \n            \n\n\n            \n                \n                    Crea un objeto (Cpu o Genérico en función del tipo escogido) con las propiedades por defecto si model es undefined o con los valores existentes si model ya existía\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriods\n                        \n                    \n                \n            \n            \n                \ngetPeriods()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:64\n                \n            \n\n\n            \n                \n                    Obtiene una lista de todos los periodos existentes y, si se recibe un id en la url selecciona el correspondiente, si no, selecciona el primero de la lista\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(comp: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    comp\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:92\n                \n            \n\n\n            \n                \n                    Cambia todos los campos del formulario a su valor inicial\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-comp/add-comp.component.ts:103\n                \n            \n\n\n            \n                \n                    Asigna los valores necesarios para subir las imágenes a myForm: FormGroup\nInserta el nuevo componente, sube las imágenes y resetea el formulario\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagesNames\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        periods\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        t\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         String\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     String[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : Object.values(CompTypes)\n                    \n                \n                    \n                        \n                                Definido en src/app/add-comp/add-comp.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CompTypes, GenericComp, MyComponent, Cpu, MemoryUnits, SpeedUnits, PowerUnits, PriceUnits } from './../classes/comp';\nimport { ComponentService } from '../services/component.service';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\n\n@Component({\n  selector: 'app-add-comp',\n  templateUrl: './add-comp.component.html',\n  styleUrls: ['./add-comp.component.css']\n})\nexport class AddCompComponent implements OnInit {\n\n  loaded = false;\n \n  periods: Period[] = []; // lista de periodos existentes\n  p: Period; // periodo seleccionado\n\n  types: String[] = Object.values(CompTypes); // tipos de componentes\n  t: String; // tipo de componente seleccionado\n\n  c: MyComponent; // objeto con los valores iniciales \n  model: MyComponent; // objeto asignado en el formulario sobre el que se realizan los cambios\n\n  images = []; // imágenes subidas a través de los inputs[file]\n  imagesNames = []; // nombres de las imágenes subidas\n  myForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  }); // se le asignan las imágenes y sus nombres para luego subirlas a través del php\n\n  constructor(private componentService: ComponentService, private periodService: PeriodService, private snackBar: MatSnackBar, private route: ActivatedRoute, private toastService: ToastrService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.t = this.types[0];\n    this.createModel();\n    this.c = this.model.cloneComp();\n    this.getPeriods();\n  }\n\n  /**\n   * Crea un objeto (Cpu o Genérico en función del tipo escogido) con las propiedades por defecto si model es undefined o con los valores existentes si model ya existía\n   */\n  createModel() {\n    if (this.t == CompTypes.cpu)\n      this.model = (this.model !== undefined) ? \n      new Cpu(this.model.component_name, this.model.component_family, this.model.component_description, this.model.component_year_init, this.model.component_year_end, this.model.component_period_id, this.model.component_price, this.model.component_price_units, this.model.component_devices.split(','), this.model.component_imgs, this.model.famous_system, this.model.famous_system_img, 0, MemoryUnits.bit, 0, MemoryUnits.bit, 0, SpeedUnits.herz, 0, PowerUnits.watios, 0, MemoryUnits.bit, 0, 0, 0) \n      : new Cpu('', '', '', 1970, 1990, 0, 100, PriceUnits.dolar, [], [], '', '', 0, MemoryUnits.bit, 0, MemoryUnits.bit, 0, SpeedUnits.herz, 0, PowerUnits.watios, 0, MemoryUnits.bit, 0, 0, 0); \n    else \n      this.model = (this.model !== undefined) ?\n      new GenericComp(this.model.component_name, this.model.component_family, this.model.component_description, this.model.component_year_init, this.model.component_year_end, this.model.component_period_id, this.model.component_price, this.model.component_price_units, this.model.component_devices.split(','), this.model.component_imgs, this.model.famous_system, this.model.famous_system_img, CompTypes.generic)\n      : new GenericComp('', '', '', 1970, 1990, 0, 100, PriceUnits.dolar, [], [], '', '', CompTypes.generic);\n  }\n\n  /**\n   * Obtiene una lista de todos los periodos existentes y, si se recibe un id en la url selecciona el correspondiente, si no, selecciona el primero de la lista\n   * @param id : id del periodo al que se quiere añadir el componente\n   */\n  getPeriods() {\n    this.periodService.getAll().subscribe((periods: Period[]) => {\n      periods.forEach((p) => this.periods.push(new Period(p.period_name, p.period_trivia, p.period_details, p.period_events, p.period_id)));\n        this.p = this.periods[0];\n      this.loaded = true;\n    });\n  }\n\n  /**\n   * Cambia el periodo seleccionado en el combobox\n   * @param p : nombre del nuevo periodo seleccionado\n   */\n  changePeriod(p: string) {\n    this.p = this.periods.filter((e) => e.period_name == p)[0];\n  }\n\n  /**\n   * Cambia el tipo de componente seleccionado en el combobox\n   * @param t : nuevo tipo seleccionado\n   */\n  changeType(t: string) {\n    this.t = this.types.filter((e) => e === t)[0];\n    this.createModel(); // se crea de nuevo el objeto model para que sea del nuevo tipo seleccionado\n  }\n\n  /**\n   * Cambia todos los campos del formulario a su valor inicial\n   */\n  resetForm() {\n    this.images = [];\n    this.imagesNames = [];\n    this.model = undefined;\n    this.createModel();\n  }\n \n  /**\n   * Asigna los valores necesarios para subir las imágenes a myForm: FormGroup\n   * Inserta el nuevo componente, sube las imágenes y resetea el formulario\n   */\n  submit() {\n    this.model.component_period_id = this.p.period_id;\n      this.myForm.patchValue({\n        fileSource: this.images,\n        name: this.imagesNames\n      });\n    switch(this.isValid(this.model)) {\n      case -1: \n        this.toastService.error(\"Debe completar el formulario para guardar\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case -2: \n        this.toastService.error(\"Debe introducir valores válidos para año de inicio y de fin\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case -3: \n        this.toastService.error(\"No debe haber valores numéricos negativos\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case 1:\n        this.componentService.addComponent(this.model).subscribe((id: {res}) => {\n          this.componentService.uploadComponentImgs(this.myForm).subscribe(() => {\n            this.snackBar.open('Componente guardado', 'Cerrar', { duration: 1500 });\n            this.router.navigate(['/component', id.res]);\n          });\n        }, () => {this.toastService.error(\"No se ha podido añadir el componente\", \"Error\", {positionClass: \"toast-bottom-full-width\"} )});\n        break;\n    }\n      \n  }\n\n  isValid(comp: MyComponent): number {\n    const year = new Date().getFullYear();\n    if (comp.component_name == \"\" || comp.component_family == \"\" || comp.component_description == \"\" || comp.component_year_init == null || comp.component_year_end == null || comp.component_period_id == null || comp.component_price == null || comp.component_price_units == \"\")\n      return -1;\n    if (comp.component_year_init  year || comp.component_year_end  year)\n      return -2;\n    if (comp.component_price \n    \n\n    \n        \n    \n    \n        Añadir componente\n        \n            \n                Seleccione el periodo al que pertenece: \n                \n                    {{ p.period_name }}\n                \n                Tipo:\n                \n                    {{ t }}\n                \n            \n            \n            \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-comp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Añadir componente                                    Seleccione el periodo al que pertenece:                                     {{ p.period_name }}                                Tipo:                                    {{ t }}                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCompComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/AddPeriodComponent.html":{"url":"components/AddPeriodComponent.html","title":"component - AddPeriodComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AddPeriodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/add-period/add-period.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-period\n            \n\n            \n                styleUrls\n                ./add-period.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-period.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                p\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(periodService: PeriodService, snackBar: MatSnackBar, router: Router, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Definido en src/app/add-period/add-period.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(period: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-period/add-period.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-period/add-period.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/add-period/add-period.component.ts:26\n                \n            \n\n\n            \n                \n                    Inserta el periodo, obtiene el id con el que se ha insertado y navega a la página de añadir componente con este periodo seleccionado\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                \n                    \n                        Valor por defecto : new Period(\"\", \"\", \"\", \"\")\n                    \n                \n                    \n                        \n                                Definido en src/app/add-period/add-period.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                \n                    \n                        Valor por defecto : new Period(\"\", \"\", \"\", \"\")\n                    \n                \n                    \n                        \n                                Definido en src/app/add-period/add-period.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/add-period/add-period.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\n\n@Component({\n  selector: 'app-add-period',\n  templateUrl: './add-period.component.html',\n  styleUrls: ['./add-period.component.css']\n})\nexport class AddPeriodComponent implements OnInit {\n\n  p: Period = new Period(\"\", \"\", \"\", \"\"); // objeto con los valores iniciales\n  model: Period = new Period(\"\", \"\", \"\", \"\"); // objeto asignado en el formulario sobre el que se realizan los cambios\n\n  constructor(private periodService: PeriodService, private snackBar: MatSnackBar, public router: Router, private toastService: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Inserta el periodo, obtiene el id con el que se ha insertado y navega a la página de añadir componente con este periodo seleccionado\n   */\n  submit() {\n    if (!this.isValid(this.model))\n      this.toastService.error(\"Debe completar el formulario para guardar\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n    else \n      this.periodService.addPeriod(this.model).subscribe(() => {\n        this.snackBar.open('Periodo guardado', 'Cerrar', { duration: 1500 })\n        this.router.navigateByUrl('/addComp');\n      }, () => {this.toastService.error(\"No se ha podido añadir el periodo\", \"Error\", {positionClass: \"toast-bottom-full-width\"} )});\n  }\n\n  isValid(period: Period): boolean {\n    return period.period_name != \"\" && period.period_details != \"\" && period.period_trivia != \"\" && period.period_events != \"\";\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Añadir periodo\n        \n            \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-period.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Añadir periodo                                                                                        '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddPeriodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'museo-eii-admin'\n                    \n                \n                    \n                        \n                                Definido en src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'museo-eii-admin';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddCompComponent\n\nAddCompComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddCompComponent->AppModule\n\n\n\n\n\nAddPeriodComponent\n\nAddPeriodComponent\n\nAppModule -->\n\nAddPeriodComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompInputsComponent\n\nCompInputsComponent\n\nAppModule -->\n\nCompInputsComponent->AppModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nAppModule -->\n\nConfirmationDialogComponent->AppModule\n\n\n\n\n\nCpuTypeDetailsComponent\n\nCpuTypeDetailsComponent\n\nAppModule -->\n\nCpuTypeDetailsComponent->AppModule\n\n\n\n\n\nCpuTypeFormComponent\n\nCpuTypeFormComponent\n\nAppModule -->\n\nCpuTypeFormComponent->AppModule\n\n\n\n\n\nFormEditCompComponent\n\nFormEditCompComponent\n\nAppModule -->\n\nFormEditCompComponent->AppModule\n\n\n\n\n\nFormEditPeriodComponent\n\nFormEditPeriodComponent\n\nAppModule -->\n\nFormEditPeriodComponent->AppModule\n\n\n\n\n\nListPeriodsComponent\n\nListPeriodsComponent\n\nAppModule -->\n\nListPeriodsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMyComponentComponent\n\nMyComponentComponent\n\nAppModule -->\n\nMyComponentComponent->AppModule\n\n\n\n\n\nPeriodComponent\n\nPeriodComponent\n\nAppModule -->\n\nPeriodComponent->AppModule\n\n\n\n\n\nPeriodInputsComponent\n\nPeriodInputsComponent\n\nAppModule -->\n\nPeriodInputsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AddCompComponent\n                        \n                        \n                            AddPeriodComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CompInputsComponent\n                        \n                        \n                            ConfirmationDialogComponent\n                        \n                        \n                            CpuTypeDetailsComponent\n                        \n                        \n                            CpuTypeFormComponent\n                        \n                        \n                            FormEditCompComponent\n                        \n                        \n                            FormEditPeriodComponent\n                        \n                        \n                            ListPeriodsComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            MyComponentComponent\n                        \n                        \n                            PeriodComponent\n                        \n                        \n                            PeriodInputsComponent\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Arranque\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Esquemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AddPeriodComponent } from './add-period/add-period.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MenuComponent } from './menu/menu.component';\nimport { AddCompComponent } from './add-comp/add-comp.component';\nimport { FormEditPeriodComponent } from './edit-period/edit-period.component';\nimport { FormEditCompComponent } from './edit-comp/edit-comp.component';\nimport { CpuTypeFormComponent } from './cpu-type-form/cpu-type-form.component';\nimport { PeriodInputsComponent } from './period-inputs/period-inputs.component';\nimport { CompInputsComponent } from './comp-inputs/comp-inputs.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListPeriodsComponent } from './list-periods/list-periods.component';\nimport { PeriodComponent } from './period/period.component';\nimport { MyComponentComponent } from './my-component/my-component.component';\nimport { CpuTypeDetailsComponent } from './cpu-type-details/cpu-type-details.component';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { IvyGalleryModule } from 'angular-gallery';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AddPeriodComponent,\n    MenuComponent,\n    AddCompComponent,\n    FormEditPeriodComponent,\n    FormEditCompComponent,\n    CpuTypeFormComponent,\n    PeriodInputsComponent,\n    CompInputsComponent,\n    ListPeriodsComponent,\n    PeriodComponent,\n    MyComponentComponent,\n    CpuTypeDetailsComponent,\n    ConfirmationDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatDialogModule,\n    HttpClientModule,\n    IvyGalleryModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        getTitleText\n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Definido en e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Definido en e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     Promise<>\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCompComponent } from './add-comp/add-comp.component';\nimport { AddPeriodComponent } from './add-period/add-period.component';\nimport { AuthGuard } from './auth-guard.guard';\nimport { FormEditCompComponent } from './edit-comp/edit-comp.component';\nimport { FormEditPeriodComponent } from './edit-period/edit-period.component';\nimport { ListPeriodsComponent } from './list-periods/list-periods.component';\nimport { LoginComponent } from './login/login.component';\nimport { MyComponentComponent } from './my-component/my-component.component';\nimport { PeriodComponent } from './period/period.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'listPeriods', component: ListPeriodsComponent, canActivate: [AuthGuard] },\n  { path: 'period/:periodId', component: PeriodComponent, canActivate: [AuthGuard] },\n  { path: 'component/:compId', component: MyComponentComponent, canActivate: [AuthGuard] },\n  { path: 'addPeriod', component: AddPeriodComponent, canActivate: [AuthGuard] },\n  { path: 'addComp', component: AddCompComponent, canActivate: [AuthGuard] },\n  { path: 'editPeriod/:periodId', component: FormEditPeriodComponent, canActivate: [AuthGuard] }, \n  { path: 'editComp/:compId', component: FormEditCompComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/listPeriods', pathMatch: 'full', canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guardias\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            Fichero\n            \n            \n                src/app/auth-guard.guard.ts\n            \n\n\n\n\n\n\n                \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Definido en src/app/auth-guard.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Definido en src/app/auth-guard.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      if (!this.userService.isLogged()) {\n        this.router.navigateByUrl(\"\");\n        return false;\n      }\n      return true;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/CompInputsComponent.html":{"url":"components/CompInputsComponent.html","title":"component - CompInputsComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  CompInputsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/comp-inputs/comp-inputs.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-inputs\n            \n\n            \n                styleUrls\n                ./comp-inputs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comp-inputs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                compImgInput\n                            \n                            \n                                imgUrl\n                            \n                            \n                                priceUnits\n                            \n                            \n                                sysImgInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changePriceUnits\n                            \n                            \n                                compImgsChange\n                            \n                            \n                                getActualYear\n                            \n                            \n                                isDesktop\n                            \n                            \n                                isPortable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                removeImage\n                            \n                            \n                                sysImgChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                compImgsInDB\n                            \n                            \n                                images\n                            \n                            \n                                imagesNames\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/comp-inputs/comp-inputs.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        compImgsInDB\n                    \n                \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/comp-inputs/comp-inputs.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/comp-inputs/comp-inputs.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesNames\n                    \n                \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/comp-inputs/comp-inputs.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/comp-inputs/comp-inputs.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        changePriceUnits\n                        \n                    \n                \n            \n            \n                \nchangePriceUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:56\n                \n            \n\n\n            \n                \n                    Cambia la unidad de moneda seleccionada en el combobox\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de moneda seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compImgsChange\n                        \n                    \n                \n            \n            \n                \ncompImgsChange(e: Event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:117\n                \n            \n\n\n            \n                \n                    Añade las imágenes seleccionadas para el componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : subida de archivos en el input[file]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualYear\n                        \n                    \n                \n            \n            \n                \ngetActualYear()\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        si el componente es usado en dispositivos de escritorio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPortable\n                        \n                    \n                \n            \n            \n                \nisPortable()\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        si el componente es usado en dispositivos portátiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(portable: boolean, desktop: boolean)\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:65\n                \n            \n\n\n            \n                \n                    Cambia la selección realizada en el tipo de dispositivos\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    portable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : valor de selección del checkbox correspondiente a dispositivos portátiles\n\n                                    \n                                \n                                \n                                    desktop\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : valor de selección del checkbox correspondiente a dispositivos móviles\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeImage\n                        \n                    \n                \n            \n            \n                \nremoveImage(name: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:149\n                \n            \n\n\n            \n                \n                    Elimina una imagen de entre las recién añadidas al componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : imagen que se va a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sysImgChange\n                        \n                    \n                \n            \n            \n                \nsysImgChange(e: Event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/comp-inputs/comp-inputs.component.ts:76\n                \n            \n\n\n            \n                \n                    Añade (o reemplaza si ya existe) la imagen seleccionada correspondiente al sistema famoso\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : subida de archivos en el input[file]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        compImgInput\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ViewChild('compImgInput')\n                        \n                    \n                \n                    \n                        \n                                Definido en src/app/comp-inputs/comp-inputs.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseImgUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/comp-inputs/comp-inputs.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceUnits\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : Object.values(PriceUnits)\n                    \n                \n                    \n                        \n                                Definido en src/app/comp-inputs/comp-inputs.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sysImgInput\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         ElementRef\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @ViewChild('sysImgInput')\n                        \n                    \n                \n                    \n                        \n                                Definido en src/app/comp-inputs/comp-inputs.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CompDevices, MyComponent, PriceUnits } from './../classes/comp';\n\n@Component({\n  selector: 'app-comp-inputs',\n  templateUrl: './comp-inputs.component.html',\n  styleUrls: ['./comp-inputs.component.css']\n})\nexport class CompInputsComponent implements OnInit {\n\n  imgUrl = environment.baseImgUrl; // url de la carpeta en la que se guardan las imágenes\n\n  @Input() model: MyComponent; // objeto asignado en el formulario sobre el que se realizan los cambios\n  @Input() compImgsInDB: string[];\n\n  @Input() images; // imágenes subidas a través de los inputs[file]\n  @Input() imagesNames: string[]; // nombres de las imágenes subidas\n\n  @ViewChild('sysImgInput')\n  sysImgInput!: ElementRef; // input[file] del sistema famoso\n  @ViewChild('compImgInput')\n  compImgInput!: ElementRef; // input[file] de las imágenes del componente\n\n  priceUnits: string[] = Object.values(PriceUnits); // unidades de moneda\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getActualYear() {\n    return new Date().getFullYear();\n  }\n\n  /**\n   * \n   * @returns si el componente es usado en dispositivos de escritorio\n   */\n  isDesktop() {\n    return this.model.component_devices.split(',').includes(CompDevices.desktop);\n  }\n\n  /**\n   * \n   * @returns si el componente es usado en dispositivos portátiles\n   */\n  isPortable() {\n    return this.model.component_devices.split(',').includes(CompDevices.portable);\n  }\n\n  /**\n   * Cambia la unidad de moneda seleccionada en el combobox\n   * @param u : nueva unidad de moneda seleccionada\n   */\n  changePriceUnits(u: string) {\n    this.model.component_price_units = this.priceUnits.filter((e) => e === u)[0];\n  }\n\n  /**\n   * Cambia la selección realizada en el tipo de dispositivos\n   * @param portable : valor de selección del checkbox correspondiente a dispositivos portátiles\n   * @param desktop : valor de selección del checkbox correspondiente a dispositivos móviles\n   */\n  onChange(portable: boolean, desktop: boolean) {\n    if (portable && desktop) this.model.setDevices([CompDevices.portable, CompDevices.desktop]);\n    else if (portable) this.model.setDevices([CompDevices.portable]);\n    else if (desktop) this.model.setDevices([CompDevices.desktop]);\n    else this.model.setDevices([]);\n  }\n\n  /**\n   * Añade (o reemplaza si ya existe) la imagen seleccionada correspondiente al sistema famoso\n   * @param e : subida de archivos en el input[file]\n   */\n  sysImgChange(e: Event) {\n    // obtiene el archivo subido\n    let element = e.target  as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList && fileList.length == 1) {\n      var reader = new FileReader();\n      reader.onload = (event:any) => {\n        // saca el índice correspondiente a la imagen y su nombre en los respectivos arrays\n        let i = this.imagesNames.indexOf(this.model.famous_system_img.split('.')[0]);\n        // si ya existe en el array se reemplaza la imagen\n        if (i != -1) this.images[i] = event.target.result;\n        // si no existe se añade\n        else this.images.push(event.target.result);\n      }\n      reader.readAsDataURL(fileList[0]);\n      // se divide el nombre para obtener el nombre con el que se va a guardar y la extensión\n      let fileNameExt = fileList[0].name.split('.');\n      let saveName = fileNameExt[0] + '.' + ((fileNameExt[fileNameExt.length - 1] == 'jpg') ? 'jpeg' : fileNameExt[fileNameExt.length - 1]);\n      // si existía previamente otra imagen reemplazamos el nombre en el array\n      if (this.model.famous_system_img) {\n        this.compImgsInDB.forEach((img, index) => { // si existía en la base de datos\n          if (img === this.model.famous_system_img) {\n            this.compImgsInDB.splice(index,1);\n          }\n        });\n        let i = this.imagesNames.indexOf(this.model.famous_system_img.split('.')[0]); // si había sido subida\n        if (i != -1) this.imagesNames[i] = fileNameExt[0];\n        else this.imagesNames.push(fileNameExt[0]);\n      } // si no existe se añade \n      else this.imagesNames.push(fileNameExt[0]);\n      // se asigna el nombre y la extensión del archivo que se va a subir\n      this.model.famous_system_img = saveName;\n    }\n    // resetea el valor del input\n    this.sysImgInput.nativeElement.value = '';\n  }\n\n  /**\n   * Añade las imágenes seleccionadas para el componente\n   * @param e : subida de archivos en el input[file]\n   */\n  compImgsChange(e: Event) {\n    // obtiene los archivos subidos\n    let element = e.target  as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList && fileList.length > 0) {\n      for (let i = 0; i  {\n            this.images.push(event.target.result);\n          }\n          reader.readAsDataURL(fileList[i]);\n          // se añade el nombre de la imagen\n          this.imagesNames.push(fileNameExt[0]);\n          // asigna el nombre \n          this.model.component_imgs.push(saveName);\n        }\n      }\n    }\n    // resetea el valor del input\n    this.compImgInput.nativeElement.value = '';\n  }\n\n  /**\n   * Elimina una imagen de entre las recién añadidas al componente\n   * @param name : imagen que se va a eliminar\n   */\n  removeImage(name: string) {\n    // obtiene el índice de la imagen en los arrays correspondientes\n    let index = this.images.indexOf(name);\n    if (index != -1) {\n      // obtiene el nombre con el que se guarda dicha imagen\n      let imgName = this.imagesNames[index];\n      // elimina la imagen de ambos arrays\n      this.images.splice(index, 1);\n      this.imagesNames.splice(index, 1);\n      // elimina la imagen del componente\n      this.model.component_imgs.forEach((img, ind) => {\n        if (img.split('.')[0] === imgName)\n          this.model.component_imgs.splice(ind,1);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    Nombre:\n    \n        \n        Complete este campo\n    \n        \n\n    Descripción:\n    \n        \n        Complete este campo\n    \n\n\n    Familia:\n    \n        \n        Complete este campo\n    \n\n\n    Año de salida:\n    \n        \n        Min: 1900, max: {{getActualYear()}}\n        Complete este campo\n    \n    Año de fin:\n    \n        \n        Min: 1900, max: {{getActualYear()}}\n        Complete este campo\n    \n\n -->\n    Precio:\n    \n        \n        Complete este campo\n    \n    \n        {{u}}\n    \n\n\n    Utilizado en dispositivos:\n     Portátiles\n     De escritorio\n\n\n    Sistema famoso que lo utiliza:\n    \n    \n    Subir imagen\n\n\n    Imágenes del componente\n    \n        \n        Subir imágenes\n    \n\n\n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./comp-inputs.component.css\n                \n                input, label {\n    margin-left: 0px;\n}\n\nselect {\n    margin-right: 0px;\n}\n\ndiv.row3 label:not(:first-child) {\n    text-align: right;\n}\n\ninput.file {\n    margin-right: 0%;\n}\n\ninput[type=checkbox] {\n    align-content: left;\n}\n\n.img-list {\n    list-style: none;\n}\n\n.info {\n    font-size: small;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Nombre:                    Complete este campo                Descripción:                    Complete este campo        Familia:                    Complete este campo        Año de salida:                    Min: 1900, max: {{getActualYear()}}        Complete este campo        Año de fin:                    Min: 1900, max: {{getActualYear()}}        Complete este campo     -->    Precio:                    Complete este campo                {{u}}        Utilizado en dispositivos:     Portátiles     De escritorio    Sistema famoso que lo utiliza:            Subir imagen    Imágenes del componente                    Subir imágenes                            '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompInputsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/ComponentMock.html":{"url":"classes/ComponentMock.html","title":"class - ComponentMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  ComponentMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/testing/mock-cpus.ts\n        \n\n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                comps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                addComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                editComponent\n                            \n                            \n                                getComponent\n                            \n                            \n                                getComponentImgs\n                            \n                            \n                                getComponentsFromPeriod\n                            \n                            \n                                    Static\n                                getComps\n                            \n                            \n                                    Static\n                                resetComps\n                            \n                            \n                                uploadComponentImgs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        comps\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : [\n        new Cpu('Intel 4004', 'Intel', 'Desarrollado para calculadoras de la marca Busicom, se instaló en máquinas de Pinball y fue candidato a instalarse en la nave espacial Pioneer 10. Existe una réplica funcional de 41x58cm en el Intel Museum de California.',\n            1971, 1981, 1, 1800, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4004-1.jpeg', '4004-2.jpeg', '4004-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n            4, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz, 0.45, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 2300, 1\n        ),\n        new Cpu('Intel 8008', 'Intel', 'Sucesor de 8 bits del 4004. Creado para el ordenador DataPoint 2200, pero no usado por su bajo rendimiento. Usado en terminales, embotelladoras, robots y computadoras simples. Tenía un juego de instrucciones propio.',\n            1972, 1983, 1, 120, PriceUnits.dolar, [CompDevices.desktop], ['8008-1.jpeg', '8008-2.jpeg', '8008-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n            16, MemoryUnits.kilobyte, 0, null, 200, SpeedUnits.kiloherz, 1, PowerUnits.watios, 8, MemoryUnits.bit, 10000, 0.016, 3500, 2\n        ),\n        new Cpu('Intel 4040', 'Intel', 'Uno de los dos sucesores del 4004 junto con el 8008, igualmente de 4 bits, pero que incorporaba nuevas instrucciones, registros y soporte para interrupciones hardware.',\n            1974, 1981, 1, 200, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4040-1.jpeg', '4040-2.jpeg', '4040-3.jpeg'], \"Gottlieb Flying Carpet\", \"Gottlieb Flying Carpet.jpeg\",\n            8, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz,  0.6, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 3000, 3\n        ),\n        new Cpu('Intel 8086', 'Intel', 'Era de gran complejidad para su época, motivo por el cual tardó 2 años en producirse.',\n            1978, 1999, 2, 86, PriceUnits.dolar, [CompDevices.desktop], ['8086-1.jpeg', '8086-2.jpeg', '8086-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n            0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.7, PowerUnits.watios, 36, MemoryUnits.bit, 3000, 0.21, 29000, 4\n        ),\n        new Cpu('Intel 8088', 'Intel', 'CPU del IBM PC XT original de 1983.',\n            1979, 1998, 2, 124, PriceUnits.dolar, [CompDevices.desktop], ['8088-1.jpeg', '8088-2.jpeg', '8088-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n            0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.87, PowerUnits.watios, 8, MemoryUnits.bit, 3000, 0.12, 29000, 5\n        )\n    ]\n                    \n                \n                    \n                        \n                                Definido en src/app/services/testing/mock-cpus.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        addComponent\n                        \n                    \n                \n            \n            \n                \naddComponent(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(cId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    cId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editComponent\n                        \n                    \n                \n            \n            \n                \neditComponent(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentImgs\n                        \n                    \n                \n            \n            \n                \ngetComponentImgs(id)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentsFromPeriod\n                        \n                    \n                \n            \n            \n                \ngetComponentsFromPeriod(id)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getComps\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComps()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resetComps\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetComps()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadComponentImgs\n                        \n                    \n                \n            \n            \n                \nuploadComponentImgs(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-cpus.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from \"@angular/forms\";\nimport { of } from \"rxjs\";\nimport { CompDevices, Cpu, MemoryUnits, MyComponent, PowerUnits, PriceUnits, SpeedUnits } from \"../../classes/comp\";\n\nexport class ComponentMock {\n\n    public static comps: MyComponent[] = [\n        new Cpu('Intel 4004', 'Intel', 'Desarrollado para calculadoras de la marca Busicom, se instaló en máquinas de Pinball y fue candidato a instalarse en la nave espacial Pioneer 10. Existe una réplica funcional de 41x58cm en el Intel Museum de California.',\n            1971, 1981, 1, 1800, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4004-1.jpeg', '4004-2.jpeg', '4004-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n            4, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz, 0.45, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 2300, 1\n        ),\n        new Cpu('Intel 8008', 'Intel', 'Sucesor de 8 bits del 4004. Creado para el ordenador DataPoint 2200, pero no usado por su bajo rendimiento. Usado en terminales, embotelladoras, robots y computadoras simples. Tenía un juego de instrucciones propio.',\n            1972, 1983, 1, 120, PriceUnits.dolar, [CompDevices.desktop], ['8008-1.jpeg', '8008-2.jpeg', '8008-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n            16, MemoryUnits.kilobyte, 0, null, 200, SpeedUnits.kiloherz, 1, PowerUnits.watios, 8, MemoryUnits.bit, 10000, 0.016, 3500, 2\n        ),\n        new Cpu('Intel 4040', 'Intel', 'Uno de los dos sucesores del 4004 junto con el 8008, igualmente de 4 bits, pero que incorporaba nuevas instrucciones, registros y soporte para interrupciones hardware.',\n            1974, 1981, 1, 200, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4040-1.jpeg', '4040-2.jpeg', '4040-3.jpeg'], \"Gottlieb Flying Carpet\", \"Gottlieb Flying Carpet.jpeg\",\n            8, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz,  0.6, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 3000, 3\n        ),\n        new Cpu('Intel 8086', 'Intel', 'Era de gran complejidad para su época, motivo por el cual tardó 2 años en producirse.',\n            1978, 1999, 2, 86, PriceUnits.dolar, [CompDevices.desktop], ['8086-1.jpeg', '8086-2.jpeg', '8086-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n            0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.7, PowerUnits.watios, 36, MemoryUnits.bit, 3000, 0.21, 29000, 4\n        ),\n        new Cpu('Intel 8088', 'Intel', 'CPU del IBM PC XT original de 1983.',\n            1979, 1998, 2, 124, PriceUnits.dolar, [CompDevices.desktop], ['8088-1.jpeg', '8088-2.jpeg', '8088-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n            0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.87, PowerUnits.watios, 8, MemoryUnits.bit, 3000, 0.12, 29000, 5\n        )\n    ];\n\n    getComponent(id) {\n        return of(ComponentMock.comps[0]);\n    }\n\n    getComponentImgs(id) {\n        return of([{image: \"imagen1.jpeg\"}, {image: \"imagen2.jpeg\"}]);\n    }\n\n    getComponentsFromPeriod(id) {\n        return of(ComponentMock.comps.filter((e) => e.component_period_id == 1));\n    }\n\n    addComponent(c: MyComponent) {\n        if (ComponentMock.comps.filter((e) => e.component_name == c.component_name).length > 0)\n            return of({error: \"error\"});\n        ComponentMock.comps.push(c);\n        return of({next: \"guardado\"});\n    }\n\n    editComponent(c: MyComponent) {\n        let editado = false;\n        ComponentMock.comps.forEach((comp, index) => {\n            if (comp.component_id == c.component_id) {\n                ComponentMock.comps.splice(index, 1, c);\n                editado = true;\n            }\n        });\n        if (editado)\n            return of({next: \"guardado\"});\n        return of({error: \"Error\"});\n    }\n\n    deleteComponent(cId: number) {\n        let borrado = false;\n        ComponentMock.comps.forEach((comp, index) => {\n            if (comp.component_id == cId) {\n                ComponentMock.comps.splice(index, 1);\n                borrado = true;\n            }\n        });\n        if (borrado)\n            return of({next: \"borrado\"});\n        return of({error: \"Error\"});\n    }\n\n\n    uploadComponentImgs(form: FormGroup) {\n        return of({next: \"guardado\"});\n    }\n\n    static getComps() {\n        return this.comps;\n    }\n\n    static resetComps() {\n        this.comps = [\n            new Cpu('Intel 4004', 'Intel', 'Desarrollado para calculadoras de la marca Busicom, se instaló en máquinas de Pinball y fue candidato a instalarse en la nave espacial Pioneer 10. Existe una réplica funcional de 41x58cm en el Intel Museum de California.',\n                1971, 1981, 1, 1800, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4004-1.jpeg', '4004-2.jpeg', '4004-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n                4, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz, 0.45, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 2300, 1\n            ),\n            new Cpu('Intel 8008', 'Intel', 'Sucesor de 8 bits del 4004. Creado para el ordenador DataPoint 2200, pero no usado por su bajo rendimiento. Usado en terminales, embotelladoras, robots y computadoras simples. Tenía un juego de instrucciones propio.',\n                1972, 1983, 1, 120, PriceUnits.dolar, [CompDevices.desktop], ['8008-1.jpeg', '8008-2.jpeg', '8008-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n                16, MemoryUnits.kilobyte, 0, null, 200, SpeedUnits.kiloherz, 1, PowerUnits.watios, 8, MemoryUnits.bit, 10000, 0.016, 3500, 2\n            ),\n            new Cpu('Intel 4040', 'Intel', 'Uno de los dos sucesores del 4004 junto con el 8008, igualmente de 4 bits, pero que incorporaba nuevas instrucciones, registros y soporte para interrupciones hardware.',\n                1974, 1981, 1, 200, PriceUnits.dolar, [CompDevices.desktop, CompDevices.portable], ['4040-1.jpeg', '4040-2.jpeg', '4040-3.jpeg'], \"Gottlieb Flying Carpet\", \"Gottlieb Flying Carpet.jpeg\",\n                8, MemoryUnits.kilobyte, 640, MemoryUnits.byte, 740, SpeedUnits.kiloherz,  0.6, PowerUnits.watios, 4, MemoryUnits.bit, 10000, 0.03, 3000, 3\n            ),\n            new Cpu('Intel 8086', 'Intel', 'Era de gran complejidad para su época, motivo por el cual tardó 2 años en producirse.',\n                1978, 1999, 2, 86, PriceUnits.dolar, [CompDevices.desktop], ['8086-1.jpeg', '8086-2.jpeg', '8086-3.jpeg'], \"Busicom 141PF\", \"Busicom 141PF.jpeg\", \n                0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.7, PowerUnits.watios, 36, MemoryUnits.bit, 3000, 0.21, 29000, 4\n            ),\n            new Cpu('Intel 8088', 'Intel', 'CPU del IBM PC XT original de 1983.',\n                1979, 1998, 2, 124, PriceUnits.dolar, [CompDevices.desktop], ['8088-1.jpeg', '8088-2.jpeg', '8088-3.jpeg'], \"Datapoint 2200\", \"Datapoint 2200.jpeg\",\n                0, null, 1, MemoryUnits.megabyte, 10, SpeedUnits.megaherz, 1.87, PowerUnits.watios, 8, MemoryUnits.bit, 3000, 0.12, 29000, 5\n            )\n        ];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/ComponentService.html":{"url":"injectables/ComponentService.html","title":"injectable - ComponentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  ComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/component.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                addComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                editComponent\n                            \n                            \n                                getComponent\n                            \n                            \n                                getComponentImgs\n                            \n                            \n                                getComponentsFromPeriod\n                            \n                            \n                                uploadComponentImgs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/component.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        addComponent\n                        \n                    \n                \n            \n            \n                \naddComponent(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(cId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    cId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editComponent\n                        \n                    \n                \n            \n            \n                \neditComponent(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(cId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    cId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentImgs\n                        \n                    \n                \n            \n            \n                \ngetComponentImgs(cId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    cId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentsFromPeriod\n                        \n                    \n                \n            \n            \n                \ngetComponentsFromPeriod(pId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    pId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadComponentImgs\n                        \n                    \n                \n            \n            \n                \nuploadComponentImgs(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/component.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/services/component.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { MyComponent } from '../classes/comp';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentService {\n\n  baseUrl = environment.baseUrl;\n  \n  constructor(private http: HttpClient) { }\n\n  addComponent(c: MyComponent) {\n    return this.http.post(`${this.baseUrl}/postComp.php`, c);\n  }\n\n  editComponent(c: MyComponent) {\n    return this.http.put(`${this.baseUrl}/updateComp.php`, c);\n  }\n\n  deleteComponent(cId: number) {\n    return this.http.delete(`${this.baseUrl}/deleteComp.php?idComp=${cId}`);\n  }\n\n  getComponent(cId: number) {\n    return this.http.get(`${this.baseUrl}/getComp.php?idComp=${cId}`);\n  }\n\n  getComponentsFromPeriod(pId: number) {\n    return this.http.get(`${this.baseUrl}/getCompsPeriod.php?idPeriod=${pId}`);\n  }\n\n  getComponentImgs(cId: number) {\n    return this.http.get(`${this.baseUrl}/getCompImgs.php?idComp=${cId}`);\n  }\n\n  uploadComponentImgs(form: FormGroup) {\n    return this.http.post(`${this.baseUrl}/uploadCompImgs.php`, form.value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/ConfirmationDialogComponent.html":{"url":"components/ConfirmationDialogComponent.html","title":"component - ConfirmationDialogComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  ConfirmationDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/confirmation-dialog/confirmation-dialog.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-dialog\n            \n\n            \n                styleUrls\n                ./confirmation-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                continue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, message: string)\n                    \n                \n                        \n                            \n                                Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:22\n                \n            \n\n\n            \n                \n                    Botón NO del diálogo\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continue\n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:29\n                \n            \n\n\n            \n                \n                    Botón SÍ del diálogo\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Decoradores : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Definido en src/app/confirmation-dialog/confirmation-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n\n  constructor(public dialog: MatDialogRef, @Inject(MAT_DIALOG_DATA) public message: string) {\n    dialog.disableClose = true;\n   }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Botón NO del diálogo\n   */\n  closeDialog() {\n    this.dialog.close(false);\n  }\n\n  /**\n   * Botón SÍ del diálogo\n   */\n  continue() {\n    this.dialog.close(true);\n  }\n\n}\n\n    \n\n    \n        {{message}}\n\n    No\n    Sí\n\n    \n\n    \n                \n                    ./confirmation-dialog.component.css\n                \n                button {\n    padding: 1% 3%;\n    min-width: 70px;\n    margin: 5px;\n    border-radius: 10%;\n    border-width: 0ch;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{message}}    No    Sí'\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/CpuTypeDetailsComponent.html":{"url":"components/CpuTypeDetailsComponent.html","title":"component - CpuTypeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  CpuTypeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/cpu-type-details/cpu-type-details.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cpu-type-details\n            \n\n            \n                styleUrls\n                ./cpu-type-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cpu-type-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                comp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/cpu-type-details/cpu-type-details.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        comp\n                    \n                \n                \n                    \n                        Tipo :         Cpu\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/cpu-type-details/cpu-type-details.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-details/cpu-type-details.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Cpu } from './../classes/comp';\n\n@Component({\n  selector: 'app-cpu-type-details',\n  templateUrl: './cpu-type-details.component.html',\n  styleUrls: ['./cpu-type-details.component.css']\n})\nexport class CpuTypeDetailsComponent implements OnInit {\n\n  @Input() comp: Cpu; // objeto del que mostrar los detalles\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Memoria ROM{{comp.program_memory}} {{comp.program_memory_units}}\n        Memoria RAM{{comp.ram_memory}} {{comp.ram_memory_units}}\n        Frecuencia de reloj{{comp.clockspeed}} {{comp.clockspeed_units}}\n        Consumo energético{{comp.cpu_power}} {{comp.cpu_power_units}}\n    \n    \n        Tamaño de palabra{{comp.wordsize}} {{comp.wordsize_units}}\n        Nanómetros de los transistores{{comp.transistor_size}}\n        Passmark{{comp.passmark}}\n        Número de transistores{{comp.transistors}}\n    \n\n\n    \n\n    \n                \n                    ./cpu-type-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Memoria ROM{{comp.program_memory}} {{comp.program_memory_units}}        Memoria RAM{{comp.ram_memory}} {{comp.ram_memory_units}}        Frecuencia de reloj{{comp.clockspeed}} {{comp.clockspeed_units}}        Consumo energético{{comp.cpu_power}} {{comp.cpu_power_units}}                Tamaño de palabra{{comp.wordsize}} {{comp.wordsize_units}}        Nanómetros de los transistores{{comp.transistor_size}}        Passmark{{comp.passmark}}        Número de transistores{{comp.transistors}}    '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CpuTypeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/CpuTypeFormComponent.html":{"url":"components/CpuTypeFormComponent.html","title":"component - CpuTypeFormComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  CpuTypeFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/cpu-type-form/cpu-type-form.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cpu-type-form\n            \n\n            \n                styleUrls\n                ./cpu-type-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cpu-type-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                cPowerUnits\n                            \n                            \n                                memUnits\n                            \n                            \n                                speedUnits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changeClockSpeedUnits\n                            \n                            \n                                changePowerUnits\n                            \n                            \n                                changeProgramMemoryUnits\n                            \n                            \n                                changeRamMemoryUnits\n                            \n                            \n                                changeWordSizeUnits\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/cpu-type-form/cpu-type-form.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Tipo :         Cpu\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        changeClockSpeedUnits\n                        \n                    \n                \n            \n            \n                \nchangeClockSpeedUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:43\n                \n            \n\n\n            \n                \n                    Cambia las unidades de frecuencia de reloj seleccionadas\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de frecuencia seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePowerUnits\n                        \n                    \n                \n            \n            \n                \nchangePowerUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:51\n                \n            \n\n\n            \n                \n                    Cambia las unidades de potencia seleccionadas\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de potencia seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeProgramMemoryUnits\n                        \n                    \n                \n            \n            \n                \nchangeProgramMemoryUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:26\n                \n            \n\n\n            \n                \n                    Cambia las unidades de memoria ROM seleccionadas\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de memoria seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRamMemoryUnits\n                        \n                    \n                \n            \n            \n                \nchangeRamMemoryUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:35\n                \n            \n\n\n            \n                \n                    Cambia las unidades de memoria RAM seleccionadas\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de memoria seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeWordSizeUnits\n                        \n                    \n                \n            \n            \n                \nchangeWordSizeUnits(u: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:59\n                \n            \n\n\n            \n                \n                    Cambia las unidades de tamaño de la palabra seleccionadas\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nueva unidad de memoria seleccionada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/cpu-type-form/cpu-type-form.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        cPowerUnits\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : Object.values(PowerUnits)\n                    \n                \n                    \n                        \n                                Definido en src/app/cpu-type-form/cpu-type-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memUnits\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : Object.values(MemoryUnits)\n                    \n                \n                    \n                        \n                                Definido en src/app/cpu-type-form/cpu-type-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedUnits\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : Object.values(SpeedUnits)\n                    \n                \n                    \n                        \n                                Definido en src/app/cpu-type-form/cpu-type-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MemoryUnits, SpeedUnits, PowerUnits, Cpu } from './../classes/comp';\n\n@Component({\n  selector: 'app-cpu-type-form',\n  templateUrl: './cpu-type-form.component.html',\n  styleUrls: ['./cpu-type-form.component.css']\n})\nexport class CpuTypeFormComponent implements OnInit {\n\n  @Input() model: Cpu; // objeto asignado en el formulario sobre el que se realizan los cambios\n\n  memUnits: string[] = Object.values(MemoryUnits); // unidades de memoria\n  speedUnits: string[] = Object.values(SpeedUnits); // unidades de frecuencia\n  cPowerUnits: string[] = Object.values(PowerUnits); // unidades de potencia\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Cambia las unidades de memoria ROM seleccionadas\n   * @param u : nueva unidad de memoria seleccionada\n   */\n  changeProgramMemoryUnits(u: string) {\n    this.model.program_memory_units = this.memUnits.filter((e) => u === e)[0];\n    \n  }\n\n  /**\n   * Cambia las unidades de memoria RAM seleccionadas\n   * @param u : nueva unidad de memoria seleccionada\n   */\n  changeRamMemoryUnits(u: string) {\n    this.model.ram_memory_units = this.memUnits.filter((e) => u === e)[0];\n  }\n\n  /**\n   * Cambia las unidades de frecuencia de reloj seleccionadas\n   * @param u : nueva unidad de frecuencia seleccionada\n   */\n  changeClockSpeedUnits(u: string) {\n    this.model.clockspeed_units = this.speedUnits.filter((e) => u === e)[0];\n  }\n\n  /**\n   * Cambia las unidades de potencia seleccionadas\n   * @param u : nueva unidad de potencia seleccionada\n   */\n  changePowerUnits(u: string) {\n    this.model.cpu_power_units = this.cPowerUnits.filter((e) => u === e)[0];\n  }\n\n  /**\n   * Cambia las unidades de tamaño de la palabra seleccionadas\n   * @param u : nueva unidad de memoria seleccionada\n   */\n  changeWordSizeUnits(u: string) {\n    this.model.wordsize_units = this.memUnits.filter((e) => u === e)[0];\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Memoria ROM:\n            \n                \n                Complete este campo\n            \n            \n                {{u}}\n            \n        \n        \n            Frecuencia de reloj:\n            \n                \n                Complete este campo\n            \n            \n                {{u}}\n            \n        \n        \n            Tamaño de palabra:\n            \n                \n                Complete este campo\n            \n            \n                {{u}}\n            \n        \n        \n            Passmark:\n            \n                \n                Complete este campo\n            \n        \n    \n\n    \n        \n            Memoria RAM:\n            \n                \n                Complete este campo\n            \n            \n                {{u}}\n            \n        \n        \n            Consumo energético:\n            \n                \n                Complete este campo\n            \n            \n                {{u}}\n            \n        \n        \n            Nanómetros de los transistores:\n            \n                \n                Complete este campo\n            \n            {{model.transistor_size_units}}\n        \n        \n            Número de transistores:\n            \n                \n                Complete este campo\n            \n        \n    \n\n    \n\n    \n                \n                    ./cpu-type-form.component.css\n                \n                .form-row label.inputright {\n    text-align: right;\n}\n\ndiv.col{\n    padding-left: 0;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Memoria ROM:                                            Complete este campo                                        {{u}}                                        Frecuencia de reloj:                                            Complete este campo                                        {{u}}                                        Tamaño de palabra:                                            Complete este campo                                        {{u}}                                        Passmark:                                            Complete este campo                                                Memoria RAM:                                            Complete este campo                                        {{u}}                                        Consumo energético:                                            Complete este campo                                        {{u}}                                        Nanómetros de los transistores:                                            Complete este campo                        {{model.transistor_size_units}}                            Número de transistores:                                            Complete este campo                        '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CpuTypeFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/FormEditCompComponent.html":{"url":"components/FormEditCompComponent.html","title":"component - FormEditCompComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  FormEditCompComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/edit-comp/edit-comp.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-comp\n            \n\n            \n                styleUrls\n                ./edit-comp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-comp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                c\n                            \n                            \n                                compImgsInDB\n                            \n                            \n                                images\n                            \n                            \n                                imagesNames\n                            \n                            \n                                imgUrl\n                            \n                            \n                                model\n                            \n                            \n                                myForm\n                            \n                            \n                                p\n                            \n                            \n                                periods\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changePeriod\n                            \n                            \n                                getComponent\n                            \n                            \n                                getImages\n                            \n                            \n                                getPeriods\n                            \n                            \n                                goBack\n                            \n                            \n                                isEdited\n                            \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeImage\n                            \n                            \n                                resetForm\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, componentService: ComponentService, periodService: PeriodService, snackBar: MatSnackBar, _location: Location, dialog: MatDialog, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Definido en src/app/edit-comp/edit-comp.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentService\n                                                  \n                                                        \n                                                                        ComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        changePeriod\n                        \n                    \n                \n            \n            \n                \nchangePeriod(p: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:101\n                \n            \n\n\n            \n                \n                    Cambia el periodo seleccionado en el combobox\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nombre del nuevo periodo seleccionado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:55\n                \n            \n\n\n            \n                \n                    Obtiene el componente para editarlo\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del componente a editar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImages\n                        \n                    \n                \n            \n            \n                \ngetImages(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:76\n                \n            \n\n\n            \n                \n                    Obtiene las imágenes del componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del componente del que se obtienen las imágenes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriods\n                        \n                    \n                \n            \n            \n                \ngetPeriods()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:89\n                \n            \n\n\n            \n                \n                    Obtiene la lista de todos los periodos existentes y seleccioona el correspondiente al componente\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:172\n                \n            \n\n\n            \n                \n                    Vuelve a la página anterior. Si no se han guardado los cambios se muestra un diálogo para continuar o no\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEdited\n                        \n                    \n                \n            \n            \n                \nisEdited()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        si se ha editado el formulario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(comp: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    comp\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeImage\n                        \n                    \n                \n            \n            \n                \nremoveImage(name: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:197\n                \n            \n\n\n            \n                \n                    Elimina una imagen de entre las existentes del componente o del sistema famoso\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : nombre de la imagen que se va a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:160\n                \n            \n\n\n            \n                \n                    Cambia todos los campos del formulario a su valor inicial\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-comp/edit-comp.component.ts:111\n                \n            \n\n\n            \n                \n                    Asigna los valores necesarios para subir las imágenes a myForm: FormGroup\nActualiza el componente, sube las imágenes y resetea el formulario\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compImgsInDB\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagesNames\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     []\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseImgUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        periods\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         String\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-comp/edit-comp.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { Period } from './../classes/period';\nimport { CompTypes, GenericComp, MyComponent, Cpu } from './../classes/comp';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ComponentService } from '../services/component.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PeriodService } from '../services/period.service';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-edit-comp',\n  templateUrl: './edit-comp.component.html',\n  styleUrls: ['./edit-comp.component.css']\n})\nexport class FormEditCompComponent implements OnInit {\n\n  imgUrl = environment.baseImgUrl; // url de la carpeta en la que se guardan las imágenes\n\n  periods: Period[] = []; // lista de periodos existentes\n  p: Period; // periodo seleccionado\n\n  c: MyComponent; // objeto con los valores sin editar\n  model: MyComponent; // objeto asignado en el formulario sobre el que se realizan los cambios\n  compImgsInDB: string[] = []; // array para juntar las imágenes del componente \n\n  type: String; // tipo del componente (Cpu o genérico)\n\n  images = []; // imágenes subidas a través de los inputs[file]\n  imagesNames = []; // nombres de las imágenes subidas\n  myForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  }); // se le asignan las imágenes y sus nombres para luego subirlas a través del php\n\n  constructor(public router: Router, private route: ActivatedRoute, private componentService: ComponentService, private periodService: PeriodService, private snackBar: MatSnackBar, private _location: Location, private dialog: MatDialog, private toastService: ToastrService) { }\n\n  ngOnInit(): void {\n    // saca el id del componente que se va a editar\n    const routeParams = this.route.snapshot.paramMap;\n\t  const idFromRoute = Number(routeParams.get('compId'));\n    this.getComponent(idFromRoute);\n  }\n\n  /**\n   * Obtiene el componente para editarlo\n   * @param id : id del componente a editar\n   */\n  getComponent(id: number) {\n    this.componentService.getComponent(id).subscribe((c: Cpu) => {\n      if (c.component_type == CompTypes.cpu) {\n        this.c = new Cpu(c.component_name, c.component_family, c.component_description, c.component_year_init, c.component_year_end, c.component_period_id, c.component_price, c.component_price_units, c.component_devices.split(','), [], c.famous_system, c.famous_system_img,\n        c.program_memory, c.program_memory_units, c.ram_memory, c.ram_memory_units,c.clockspeed, c.clockspeed_units, c.cpu_power, c.cpu_power_units, c.wordsize, c.wordsize_units, c.transistor_size, c.passmark, c.transistors, id);\n        this.type = CompTypes.cpu;\n      } else {\n        this.c = new GenericComp(c.component_name, c.component_family, c.component_description, c.component_year_init, c.component_year_end, c.component_period_id, c.component_price, c.component_price_units, c.component_devices.split(','), [], c.famous_system, c.famous_system_img, c.component_type, id);\n        this.type = CompTypes.generic;\n      } \n      if (this.c.famous_system_img) this.compImgsInDB.push(this.c.famous_system_img);\n      this.getImages(this.c.component_id);\n      this.getPeriods()\n    } )\n    \n  }\n\n  /**\n   * Obtiene las imágenes del componente \n   * @param id : id del componente del que se obtienen las imágenes\n   */\n  getImages(id: number) {\n    this.componentService.getComponentImgs(id).subscribe((imgs: {image}[]) => {\n        imgs.forEach((i) => {\n          this.c.component_imgs.push(i.image);\n          this.compImgsInDB.push(i.image);\n        });\n        this.model = this.c.cloneComp();\n      });\n  }\n\n  /**\n   * Obtiene la lista de todos los periodos existentes y seleccioona el correspondiente al componente\n   */\n  getPeriods() {\n    this.periodService.getAll().subscribe((periods: Period[]) =>{\n      periods.forEach((p) => this.periods.push(new Period(p.period_name, p.period_trivia, p.period_details, p.period_events, p.period_id)));\n      this.p = this.periods.filter((e) => e.period_id === this.c.component_period_id)[0];\n      this.changePeriod(this.p.period_name)\n    });\n  }\n\n  /**\n   * Cambia el periodo seleccionado en el combobox\n   * @param p : nombre del nuevo periodo seleccionado\n   */\n  changePeriod(p: string) {\n    this.p = this.periods.filter((e) => e.period_name === p)[0];\n    this.model.component_period_id = this.p.period_id;\n    \n  }\n\n  /**\n   * Asigna los valores necesarios para subir las imágenes a myForm: FormGroup\n   * Actualiza el componente, sube las imágenes y resetea el formulario\n   */\n  submit() {\n    this.myForm.patchValue({\n      fileSource: this.images,\n      name: this.imagesNames\n    });\n    switch(this.isValid(this.model)) {\n      case -1: \n        this.toastService.error(\"Debe completar el formulario para guardar\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case -2: \n        this.toastService.error(\"Debe introducir valores válidos para año de inicio y de fin\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case -3: \n        this.toastService.error(\"No debe haber valores numéricos negativos\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n        break;\n      case 1:\n        this.componentService.editComponent(this.model).subscribe(() => {\n          this.componentService.uploadComponentImgs(this.myForm).subscribe(() => {\n            this.snackBar.open('Componente actualizado', 'Cerrar', { duration: 1500 });\n            this.router.navigate(['/component', this.model.component_id]);\n          });\n          this.c = this.model.cloneComp();\n        }, () => {this.toastService.error(\"No se ha podido editar el componente\", \"Error\", {positionClass: \"toast-bottom-full-width\"} )});\n        break;\n    }\n  }\n\n  isValid(comp: MyComponent): number {\n    const year = new Date().getFullYear();\n    if (comp.component_name == \"\" || comp.component_family == \"\" || comp.component_description == \"\" || comp.component_year_init == null || comp.component_year_end == null || comp.component_period_id == null || comp.component_price == null || comp.component_price_units == \"\")\n      return -1;\n    if (comp.component_year_init  year || comp.component_year_end  year)\n      return -2;\n    if (comp.component_price  this.compImgsInDB.push(i));\n  }\n\n  /**\n   * Vuelve a la página anterior. Si no se han guardado los cambios se muestra un diálogo para continuar o no\n   */\n  goBack() {\n    if (this.isEdited())\n      this.dialog\n      .open(ConfirmationDialogComponent, {data: \"No se han guardado los cambios realizados en el formulario, ¿desea continuar?\"})\n      .afterClosed()\n      .subscribe((confirmed: boolean) => {if (confirmed) this._location.back();});\n    else\n    this._location.back();\n  }\n\n  /**\n   * \n   * @returns si se ha editado el formulario\n   */\n  isEdited() {\n    if (this.c === undefined && this.model === undefined)\n      return false;\n      \n    return !this.c.equals(this.model);\n  }\n\n  /**\n   * Elimina una imagen de entre las existentes del componente o del sistema famoso\n   * @param name : nombre de la imagen que se va a eliminar\n   */\n  removeImage(name: string) {\n    if (this.model.famous_system_img === name) this.model.famous_system_img = \"\";\n    this.model.component_imgs.forEach((img, index) => {\n      if (img === name) {\n        this.model.component_imgs.splice(index,1);\n      }\n    });\n    this.compImgsInDB.forEach((img, index) => {\n      if (img === name) {\n        this.compImgsInDB.splice(index,1);\n      }\n    });\n  }\n  \n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            Editar componente\n        \n        \n            \n                Seleccione el periodo al que pertenece: \n                \n                    {{ pe.period_name }}\n                \n            \n            \n            \n                \n                    \n                    \n                \n            \n            \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-comp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Editar componente                                            Seleccione el periodo al que pertenece:                                     {{ pe.period_name }}                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormEditCompComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/FormEditPeriodComponent.html":{"url":"components/FormEditPeriodComponent.html","title":"component - FormEditPeriodComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  FormEditPeriodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/edit-period/edit-period.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-period\n            \n\n            \n                styleUrls\n                ./edit-period.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-period.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                p\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                clonePeriod\n                            \n                            \n                                getPeriod\n                            \n                            \n                                goBack\n                            \n                            \n                                isEdited\n                            \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForm\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, periodService: PeriodService, snackBar: MatSnackBar, _location: Location, dialog: MatDialog, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Definido en src/app/edit-period/edit-period.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        clonePeriod\n                        \n                    \n                \n            \n            \n                \nclonePeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : periodo que se quiere clonar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Period\n\n                    \n                    \n                        periodo clonado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:34\n                \n            \n\n\n            \n                \n                    Obtiene el periodo para editarlo\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del periodo a editar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:74\n                \n            \n\n\n            \n                \n                    Vuelve a la página anterior. Si no se han guardado los cambios se muestra un diálogo para continuar o no\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEdited\n                        \n                    \n                \n            \n            \n                \nisEdited()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        si se ha editado el formulario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(period: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    period\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:58\n                \n            \n\n\n            \n                \n                    Cambia todos los campos del formulario a su valor inicial\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/edit-period/edit-period.component.ts:44\n                \n            \n\n\n            \n                \n                    Actualiza el periodo\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-period/edit-period.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-period/edit-period.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/edit-period/edit-period.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-period',\n  templateUrl: './edit-period.component.html',\n  styleUrls: ['./edit-period.component.css']\n})\nexport class FormEditPeriodComponent implements OnInit {\n\n  p: Period; // objeto con los valores sin editar\n  model: Period; // objeto asignado en el formulario sobre el que se realizan los cambios\n\n  constructor(public router: Router, private route: ActivatedRoute, private periodService: PeriodService, private snackBar: MatSnackBar, private _location: Location, private dialog: MatDialog, private toastService: ToastrService) { }\n\n  ngOnInit(): void {\n    // saca el id del periodo que se va a editar\n    const routeParams = this.route.snapshot.paramMap;\n\t  const idFromRoute = Number(routeParams.get('periodId'));\n    this.getPeriod(idFromRoute);\n  }\n\n  /**\n   * Obtiene el periodo para editarlo\n   * @param id : id del periodo a editar\n   */\n  getPeriod(id: number) {\n    this.periodService.getPeriod(id).subscribe((period: Period) => {\n      this.p = new Period(period.period_name, period.period_trivia, period.period_details, period.period_events, id);\n      this.model = this.clonePeriod(this.p);\n    });\n  }\n\n  /**\n   * Actualiza el periodo\n   */\n  submit() {\n    if (!this.isValid(this.model))\n      this.toastService.error(\"Debe completar el formulario para guardar\", \"Error\",  {positionClass: \"toast-bottom-full-width\"} );\n    else \n      this.periodService.editPeriod(this.model).subscribe(() => {\n        this.snackBar.open('Periodo actualizado', 'Cerrar', { duration: 1500 });\n        this.p = this.clonePeriod(this.model);\n        this.router.navigate([\"/period\", this.model.period_id]);\n      }, () => {this.toastService.error(\"No se ha podido editar el periodo\", \"Error\", {positionClass: \"toast-bottom-full-width\"} )});\n  }\n\n  /**\n   * Cambia todos los campos del formulario a su valor inicial\n   */\n  resetForm() {\n    this.model = this.clonePeriod(this.p);\n  }\n\n  /**\n   * \n   * @param p : periodo que se quiere clonar\n   * @returns periodo clonado\n   */\n  clonePeriod(p: Period): Period {\n    return new Period(p.period_name, p.period_trivia, p.period_details, p.period_events, p.period_id);\n  }\n\n  /**\n   * Vuelve a la página anterior. Si no se han guardado los cambios se muestra un diálogo para continuar o no\n   */\n  goBack() {\n    if (this.isEdited())\n      this.dialog\n      .open(ConfirmationDialogComponent, {data: \"No se han guardado los cambios realizados en el formulario, ¿desea continuar?\"})\n      .afterClosed()\n      .subscribe((confirmed: boolean) => {if (confirmed) this._location.back();});\n    else\n    this._location.back();\n  }\n\n  /**\n   * \n   * @returns si se ha editado el formulario\n   */\n  isEdited() {\n    if (this.p === undefined && this.model === undefined)\n      return false;\n      \n    return !this.p.equals(this.model);\n  }\n\n  isValid(period: Period): boolean {\n    return period.period_name != \"\" && period.period_details != \"\" && period.period_trivia != \"\" && period.period_events != \"\";\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            Editar periodo\n        \n        \n            \n                Seleccione el periodo que desea editar: \n                \n                    {{ p.name }}\n                \n             -->\n            \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-period.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Editar periodo                                            Seleccione el periodo que desea editar:                                     {{ p.name }}                             -->                                                                                '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormEditPeriodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/GenericComp.html":{"url":"classes/GenericComp.html","title":"class - GenericComp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  GenericComp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/classes/comp.ts\n        \n\n\n\n\n            \n                Implementa\n            \n            \n                            MyComponent\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                component_description\n                            \n                            \n                                component_devices\n                            \n                            \n                                component_family\n                            \n                            \n                                component_id\n                            \n                            \n                                component_imgs\n                            \n                            \n                                component_name\n                            \n                            \n                                component_period_id\n                            \n                            \n                                component_price\n                            \n                            \n                                component_price_units\n                            \n                            \n                                component_type\n                            \n                            \n                                component_year_end\n                            \n                            \n                                component_year_init\n                            \n                            \n                                famous_system\n                            \n                            \n                                famous_system_img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                cloneComp\n                            \n                            \n                                equals\n                            \n                            \n                                setDevices\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, family: string, description: string, initYear: number, endYear: number, periodId: number, price: number, priceUnits: string, devices: string[], imgNames: string[], famousSystem: string, famousSystemImg: string, type: CompTypes, id?: number)\n                    \n                \n                        \n                            \n                                Definido en src/app/classes/comp.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        family\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initYear\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endYear\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        price\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        priceUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devices\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imgNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        famousSystem\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        famousSystemImg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CompTypes\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        component_description\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_devices\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_family\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     number | undefined\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_imgs\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string[]\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_period_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_price\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_price_units\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         CompTypes\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_year_end\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component_year_init\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        famous_system\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        famous_system_img\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/comp.ts:50\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        cloneComp\n                        \n                    \n                \n            \n            \n                \ncloneComp()\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         MyComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDevices\n                        \n                    \n                \n            \n            \n                \nsetDevices(devices: CompDevices[])\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    devices\n                                    \n                                                CompDevices[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface MyComponent {\n    component_id: number | undefined,\n    component_name: string,\n    component_family: string,\n    component_description: string,\n    component_year_init: number,\n    component_year_end: number,\n    component_period_id: number,\n    component_price: number,\n    component_price_units: string,\n    component_devices: string,\n    component_imgs: string[],\n    famous_system: string,\n    famous_system_img: string,\n    component_type: CompTypes\n\n    setDevices(devices: CompDevices[]): void;\n\n    equals(c: MyComponent): boolean;\n\n    cloneComp(): MyComponent;\n}\n\nexport enum CompDevices {desktop='DESKTOP', portable='PORTABLE'}\n\nexport enum CompTypes {cpu='CPU', generic='COMPONENT'}\n\nexport enum MemoryUnits { bit=\"b\", byte=\"B\", kilobyte=\"KB\", megabyte=\"MB\"}\n\nexport enum SpeedUnits {herz=\"Hz\", kiloherz=\"KHz\", megaherz=\"MHz\"}\n\nexport enum PowerUnits {watios=\"W\", kilowatios=\"KW\", megawatios = \"MW\"}\n\nexport enum PriceUnits {euro=\"€\", dolar=\"$\"}\n\nexport class GenericComp implements MyComponent {\n\n    component_id: number | undefined;\n    component_name: string;\n    component_family: string;\n    component_description: string;\n    component_year_init: number;\n    component_year_end: number;\n    component_period_id: number;\n    component_price: number;\n    component_price_units: string;\n    component_devices: string;\n    component_imgs: string[];\n    famous_system: string;\n    famous_system_img: string;\n    component_type: CompTypes;\n\n    constructor(\n        name: string,\n        family: string,\n        description: string,\n        initYear: number,\n        endYear: number,\n        periodId: number,\n        price: number,\n        priceUnits: string,\n        devices: string[],\n        imgNames: string[],\n        famousSystem: string,\n        famousSystemImg: string,\n        type: CompTypes,\n\n        id?: number,\n    ) {\n        this.component_id = id;\n        this.component_name = name;\n        this.component_family = family;\n        this.component_description = description;\n        this.component_year_init = initYear;\n        this.component_year_end = endYear;\n        this.component_period_id = periodId;\n        this.component_price = price;\n        this.component_price_units = priceUnits;\n        this.component_devices = \"\" + ((devices && devices.length > 0) ? (devices[0] + ((devices.length == 2) ? \",\" + devices[1] : \"\")) : \"\");\n        this.component_imgs = [];\n        imgNames.forEach((i) => this.component_imgs.push(i));\n        this.famous_system = famousSystem;\n        this.famous_system_img = famousSystemImg;\n        this.component_type = type;\n    }\n\n    setDevices(devices: CompDevices[]) {\n        this.component_devices = \"\" + ((devices && devices.length > 0) ? (devices[0] + ((devices.length == 2) ? \",\" + devices[1] : \"\")) : \"\");\n    }\n\n    equals(c: MyComponent): boolean {\n        let devicesEq: boolean;\n        if (!(this.component_devices) && !(c.component_devices)) devicesEq = true; \n        else if (!(this.component_devices) || !(c.component_devices)) devicesEq = false; \n        else devicesEq = this.component_devices.split(',').length === c.component_devices.split(',').length;\n        if (devicesEq && this.component_devices && c.component_devices) this.component_devices.split(',').forEach((e) => devicesEq = c.component_devices.split(',').includes(e));\n        else if (this.component_devices && c.component_devices) return false;\n        return this.component_name === c.component_name && this.component_family === c.component_family && this.component_description === c.component_description && this.component_year_init === c.component_year_init && this.component_year_end === c.component_year_end \n            && this.component_period_id === c.component_period_id && this.component_price === c.component_price && this.component_price_units === c.component_price_units && devicesEq;\n    }\n\n    cloneComp(): MyComponent {\n        return new GenericComp(this.component_name, this.component_family, this.component_description, this.component_year_init, this.component_year_end, this.component_period_id, this.component_price, this.component_price_units, \n            this.component_devices.split(','), this.component_imgs, this.famous_system, this.famous_system_img, CompTypes.generic, this.component_id);\n    }\n\n}\n\nexport class Cpu extends GenericComp implements MyComponent{\n\n    program_memory: number;\n    program_memory_units: string;\n    ram_memory: number;\n    ram_memory_units: string;\n    clockspeed: number;\n    clockspeed_units: string;\n    cpu_power: number;\n    cpu_power_units: string;\n    wordsize: number;\n    wordsize_units: string;\n    transistor_size: number;\n    transistor_size_units: string;\n    passmark: number;\n    transistors: number;\n\n    constructor(\n        name: string,\n        family: string,\n        description: string,\n        initYear: number,\n        endYear: number,\n        periodId: number,\n        price: number,\n        priceUnits: string,\n        devices: string[],\n        imgNames: string[],\n        famousSystem: string,\n        famousSystemImg: string,\n\n        programMemory: number,\n        programMemoryUnits: string,\n        ramMemory: number,\n        ramMemoryUnits: string,\n        clockSpeed: number,\n        clockSpeedUnits: string,\n        power: number,\n        powerUnits: string,\n        wordSize: number,\n        wordSizeUnits: string,\n        transistorSize: number,\n        passmark: number,\n        transistors: number,\n        \n        id?: number,\n    ){\n        super(name, family, description, initYear, endYear, periodId, price, priceUnits, devices, imgNames, famousSystem, famousSystemImg, CompTypes.cpu, id);\n        \n        this.program_memory = programMemory;\n        this.program_memory_units = programMemoryUnits;\n        this.ram_memory = ramMemory;\n        this.ram_memory_units = ramMemoryUnits;\n        this.clockspeed = clockSpeed;\n        this.clockspeed_units = clockSpeedUnits;\n        this.cpu_power = power;\n        this.cpu_power_units = powerUnits;\n        this.wordsize = wordSize;\n        this.wordsize_units = wordSizeUnits;\n        this.transistor_size = transistorSize;\n        this.transistor_size_units = \"nm\";\n        this.passmark = passmark;\n        this.transistors = transistors;\n    }\n\n    equals(c: Cpu): boolean {\n        return super.equals(c) && this.program_memory === c.program_memory && this.program_memory_units === c.program_memory_units && this.ram_memory === c.ram_memory && this.ram_memory_units === c.ram_memory_units\n            && this.clockspeed === c.clockspeed && this.clockspeed_units === c.clockspeed_units && this.cpu_power === c.cpu_power && this.cpu_power_units === c.cpu_power_units && this.wordsize === c.wordsize && this.wordsize_units === c.wordsize_units\n            && this.transistor_size === c.transistor_size && this.passmark === c.passmark && this.transistors === c.transistors;\n    }\n\n    cloneComp(): Cpu {\n        return new Cpu(this.component_name, this.component_family, this.component_description, this.component_year_init, this.component_year_end, this.component_period_id, this.component_price, this.component_price_units, this.component_devices.split(','), this.component_imgs, this.famous_system, this.famous_system_img, this.program_memory, this.program_memory_units, \n        this.ram_memory, this.ram_memory_units, this.clockspeed, this.clockspeed_units, this.cpu_power, this.cpu_power_units, this.wordsize, this.wordsize_units, this.transistor_size, this.passmark, this.transistors, this.component_id);\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/ListPeriodsComponent.html":{"url":"components/ListPeriodsComponent.html","title":"component - ListPeriodsComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  ListPeriodsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/list-periods/list-periods.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-periods\n            \n\n            \n                styleUrls\n                ./list-periods.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-periods.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                deletePeriod\n                            \n                            \n                                getPeriods\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(periodService: PeriodService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Definido en src/app/list-periods/list-periods.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        deletePeriod\n                        \n                    \n                \n            \n            \n                \ndeletePeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/list-periods/list-periods.component.ts:34\n                \n            \n\n\n            \n                \n                    Elimina un periodo de la lista\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : periodo que se va a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriods\n                        \n                    \n                \n            \n            \n                \ngetPeriods()\n                \n            \n\n\n            \n                \n                    Definido en src/app/list-periods/list-periods.component.ts:26\n                \n            \n\n\n            \n                \n                    Obtiene la lista de periodos\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/list-periods/list-periods.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     MatDialog\n\n                    \n                \n                    \n                        \n                                Definido en src/app/list-periods/list-periods.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        periods\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/list-periods/list-periods.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\n\n@Component({\n  selector: 'app-list-periods',\n  templateUrl: './list-periods.component.html',\n  styleUrls: ['./list-periods.component.css']\n})\nexport class ListPeriodsComponent implements OnInit {\n\n  periods: Period[] = [];\n\n  constructor(private periodService: PeriodService, public dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.getPeriods();\n  }\n\n  /**\n   * Obtiene la lista de periodos\n   */\n  getPeriods() {\n    this.periodService.getAll().subscribe((periods: Period[]) => this.periods = periods);\n  }\n\n  /**\n   * Elimina un periodo de la lista\n   * @param p : periodo que se va a eliminar\n   */\n  deletePeriod(p: Period) {\n    this.dialog\n      .open(ConfirmationDialogComponent, {data:`¿Desea eliminar el periodo ${p.period_name}?\\nSe eliminarán también los componentes asociados al mismo.`})\n      .afterClosed()\n      .subscribe((confirmed: boolean) => {\n        if (confirmed)\n          this.periodService.deletePeriod(p).subscribe(() => {\n            this.getPeriods();\n            this.snackBar.open('Periodo eliminado', 'Cerrar', { duration: 1500 });\n          });\n      });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        Listado de periodos\n        \n            \n                Nombre\n                {{period.period_name}}\n            \n            \n                Editar\n                \n            \n            \n                Eliminar\n                \n            \n\n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./list-periods.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Listado de periodos                                    Nombre                {{period.period_name}}                                        Editar                                                        Eliminar                                                                '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListPeriodsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Definido en src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Definido en src/app/login/login.component.ts:23\n                \n            \n\n\n            \n                \n                    Comprueba el usuario y la contraseña introducidos. Si es correcto navega a la lista de periodos.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/login/login.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n                \n                    \n                        Valor por defecto : {email: \"\", password: \"\"}\n                    \n                \n                    \n                        \n                                Definido en src/app/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: {email: string, password: string} = {email: \"\", password: \"\"};\n\n  constructor(public router: Router, private userService: UserService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Comprueba el usuario y la contraseña introducidos. Si es correcto navega a la lista de periodos.\n   */\n  login() {\n    this.userService.login(this.model.email, this.model.password).subscribe((data: any) => {\n      this.userService.setToken(data.email);\n      this.router.navigateByUrl('/listPeriods');\n    }, () => {\n      this.snackBar.open('Usuario o contraseña incorrectos', 'Cerrar', { duration: 1500 });\n      this.model = {email: \"\", password: \"\"};\n\n    }\n      \n    );\n    \n  }\n\n}\n\n    \n\n    \n        \n    Museo de la Informática - Administrador\n    Iniciar sesión\n    \n        \n            \n            Complete este campo\n        \n        \n            \n            Complete este campo\n        \n        Cambiar contraseña -->\n        \n\n        \n        \n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .container {\n  margin: 5% auto;\n  align-content: center;\n  text-align: center;\n}\n\n.row {\n  margin-top: 1%;\n}\n\nh2, h3 {\n  margin: 2% auto;\n}\n\n.login {\n  min-width: 300px;\n  max-width: 60%;\n  margin: 0px auto;\n}\n\n.login input {\n  display: block;\n  margin: 2rem 0;\n  width: 100%;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  border: 1px solid black;\n}\n\ninput[type=submit] {\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  padding: 2%;\n  margin-top: 5%;\n  background-color: #39583d;\n  color: #fff;\n  border-radius: 0.5em;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Museo de la Informática - Administrador    Iniciar sesión                                    Complete este campo                                        Complete este campo                Cambiar contraseña -->                            '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/menu/menu.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                ./menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                exitSession\n                            \n                            \n                                isEdited\n                            \n                            \n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                initialObject\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dialog: MatDialog, userService: UserService)\n                    \n                \n                        \n                            \n                                Definido en src/app/menu/menu.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        initialObject\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/menu/menu.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/menu/menu.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        exitSession\n                        \n                    \n                \n            \n            \n                \nexitSession()\n                \n            \n\n\n            \n                \n                    Definido en src/app/menu/menu.component.ts:50\n                \n            \n\n\n            \n                \n                    Cierra la sesión del usuario logueado\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEdited\n                        \n                    \n                \n            \n            \n                \nisEdited()\n                \n            \n\n\n            \n                \n                    Definido en src/app/menu/menu.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        si initialObject y model son iguales o model ha sido editado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(route: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/menu/menu.component.ts:26\n                \n            \n\n\n            \n                \n                    Navega a otra url de la aplicación. Si un formulario está editado muestra un diálogo para continuar o no\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : url a la que se quiere navegar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/menu/menu.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     MatDialog\n\n                    \n                \n                    \n                        \n                                Definido en src/app/menu/menu.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Router\n\n                    \n                \n                    \n                        \n                                Definido en src/app/menu/menu.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Router } from '@angular/router';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Input() initialObject; // objeto con los valores iniciales\n  @Input() model; // objeto sobre el que se realizan los cambios en el formulario\n\n  constructor(public router: Router, public dialog: MatDialog, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Navega a otra url de la aplicación. Si un formulario está editado muestra un diálogo para continuar o no\n   * @param route : url a la que se quiere navegar\n   */\n  navigate(route: string) {\n    if (this.isEdited())\n      this.dialog\n      .open(ConfirmationDialogComponent, {data: \"No se han guardado los cambios realizados en el formulario, ¿desea continuar?\"})\n      .afterClosed()\n      .subscribe((confirmed: boolean) => {if (confirmed) this.router.navigateByUrl(route);});\n    else\n      this.router.navigateByUrl(route);\n  }\n\n  /**\n   * \n   * @returns si initialObject y model son iguales o model ha sido editado \n   */\n  isEdited() {\n    if (this.initialObject === undefined && this.model === undefined)\n      return false;\n      \n    return !this.initialObject.equals(this.model);\n  }\n\n  /**\n   * Cierra la sesión del usuario logueado\n   */\n  exitSession() {\n    this.userService.deleteToken();\n    this.router.navigateByUrl(\"\");\n  }\n\n}\n\n    \n\n    \n        \n    \n        Listado de periodos\n        Añadir periodo\n        Añadir componente a periodo existente\n    \n    Cerrar sesión \n\n    \n\n    \n                \n                    ./menu.component.css\n                \n                ul li {\n  list-style: none;\n  padding: 2%;\n  text-align: left;\n}\n  \nul li::before {\n  content: \"\\003e \\00a0\";\n}\n\n.logout {\n  position:fixed;\n  top:20px;\n  right: 20px;\n}\n\na:hover {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Listado de periodos        Añadir periodo        Añadir componente a periodo existente        Cerrar sesión '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/MyComponent.html":{"url":"interfaces/MyComponent.html","title":"interface - MyComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/classes/comp.ts\n        \n\n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component_description\n                                        \n                                \n                                \n                                        \n                                            component_devices\n                                        \n                                \n                                \n                                        \n                                            component_family\n                                        \n                                \n                                \n                                        \n                                            component_id\n                                        \n                                \n                                \n                                        \n                                            component_imgs\n                                        \n                                \n                                \n                                        \n                                            component_name\n                                        \n                                \n                                \n                                        \n                                            component_period_id\n                                        \n                                \n                                \n                                        \n                                            component_price\n                                        \n                                \n                                \n                                        \n                                            component_price_units\n                                        \n                                \n                                \n                                        \n                                            component_type\n                                        \n                                \n                                \n                                        \n                                            component_year_end\n                                        \n                                \n                                \n                                        \n                                            component_year_init\n                                        \n                                \n                                \n                                        \n                                            famous_system\n                                        \n                                \n                                \n                                        \n                                            famous_system_img\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Métodos\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        cloneComp\n                                    \n                                \n                                \n                                    \n                                        equals\n                                    \n                                \n                                \n                                    \n                                        setDevices\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        cloneComp\n                        \n                    \n                \n            \n            \n                \ncloneComp()\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         MyComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDevices\n                        \n                    \n                \n            \n            \n                \nsetDevices(devices: CompDevices[])\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/comp.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    devices\n                                    \n                                                CompDevices[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        component_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_devices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_devices:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_family\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_family:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_id:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_imgs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_imgs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_period_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_period_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_price_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_price_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_type:         CompTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         CompTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_year_end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_year_end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component_year_init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_year_init:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        famous_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        famous_system:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        famous_system_img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        famous_system_img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MyComponent {\n    component_id: number | undefined,\n    component_name: string,\n    component_family: string,\n    component_description: string,\n    component_year_init: number,\n    component_year_end: number,\n    component_period_id: number,\n    component_price: number,\n    component_price_units: string,\n    component_devices: string,\n    component_imgs: string[],\n    famous_system: string,\n    famous_system_img: string,\n    component_type: CompTypes\n\n    setDevices(devices: CompDevices[]): void;\n\n    equals(c: MyComponent): boolean;\n\n    cloneComp(): MyComponent;\n}\n\nexport enum CompDevices {desktop='DESKTOP', portable='PORTABLE'}\n\nexport enum CompTypes {cpu='CPU', generic='COMPONENT'}\n\nexport enum MemoryUnits { bit=\"b\", byte=\"B\", kilobyte=\"KB\", megabyte=\"MB\"}\n\nexport enum SpeedUnits {herz=\"Hz\", kiloherz=\"KHz\", megaherz=\"MHz\"}\n\nexport enum PowerUnits {watios=\"W\", kilowatios=\"KW\", megawatios = \"MW\"}\n\nexport enum PriceUnits {euro=\"€\", dolar=\"$\"}\n\nexport class GenericComp implements MyComponent {\n\n    component_id: number | undefined;\n    component_name: string;\n    component_family: string;\n    component_description: string;\n    component_year_init: number;\n    component_year_end: number;\n    component_period_id: number;\n    component_price: number;\n    component_price_units: string;\n    component_devices: string;\n    component_imgs: string[];\n    famous_system: string;\n    famous_system_img: string;\n    component_type: CompTypes;\n\n    constructor(\n        name: string,\n        family: string,\n        description: string,\n        initYear: number,\n        endYear: number,\n        periodId: number,\n        price: number,\n        priceUnits: string,\n        devices: string[],\n        imgNames: string[],\n        famousSystem: string,\n        famousSystemImg: string,\n        type: CompTypes,\n\n        id?: number,\n    ) {\n        this.component_id = id;\n        this.component_name = name;\n        this.component_family = family;\n        this.component_description = description;\n        this.component_year_init = initYear;\n        this.component_year_end = endYear;\n        this.component_period_id = periodId;\n        this.component_price = price;\n        this.component_price_units = priceUnits;\n        this.component_devices = \"\" + ((devices && devices.length > 0) ? (devices[0] + ((devices.length == 2) ? \",\" + devices[1] : \"\")) : \"\");\n        this.component_imgs = [];\n        imgNames.forEach((i) => this.component_imgs.push(i));\n        this.famous_system = famousSystem;\n        this.famous_system_img = famousSystemImg;\n        this.component_type = type;\n    }\n\n    setDevices(devices: CompDevices[]) {\n        this.component_devices = \"\" + ((devices && devices.length > 0) ? (devices[0] + ((devices.length == 2) ? \",\" + devices[1] : \"\")) : \"\");\n    }\n\n    equals(c: MyComponent): boolean {\n        let devicesEq: boolean;\n        if (!(this.component_devices) && !(c.component_devices)) devicesEq = true; \n        else if (!(this.component_devices) || !(c.component_devices)) devicesEq = false; \n        else devicesEq = this.component_devices.split(',').length === c.component_devices.split(',').length;\n        if (devicesEq && this.component_devices && c.component_devices) this.component_devices.split(',').forEach((e) => devicesEq = c.component_devices.split(',').includes(e));\n        else if (this.component_devices && c.component_devices) return false;\n        return this.component_name === c.component_name && this.component_family === c.component_family && this.component_description === c.component_description && this.component_year_init === c.component_year_init && this.component_year_end === c.component_year_end \n            && this.component_period_id === c.component_period_id && this.component_price === c.component_price && this.component_price_units === c.component_price_units && devicesEq;\n    }\n\n    cloneComp(): MyComponent {\n        return new GenericComp(this.component_name, this.component_family, this.component_description, this.component_year_init, this.component_year_end, this.component_period_id, this.component_price, this.component_price_units, \n            this.component_devices.split(','), this.component_imgs, this.famous_system, this.famous_system_img, CompTypes.generic, this.component_id);\n    }\n\n}\n\nexport class Cpu extends GenericComp implements MyComponent{\n\n    program_memory: number;\n    program_memory_units: string;\n    ram_memory: number;\n    ram_memory_units: string;\n    clockspeed: number;\n    clockspeed_units: string;\n    cpu_power: number;\n    cpu_power_units: string;\n    wordsize: number;\n    wordsize_units: string;\n    transistor_size: number;\n    transistor_size_units: string;\n    passmark: number;\n    transistors: number;\n\n    constructor(\n        name: string,\n        family: string,\n        description: string,\n        initYear: number,\n        endYear: number,\n        periodId: number,\n        price: number,\n        priceUnits: string,\n        devices: string[],\n        imgNames: string[],\n        famousSystem: string,\n        famousSystemImg: string,\n\n        programMemory: number,\n        programMemoryUnits: string,\n        ramMemory: number,\n        ramMemoryUnits: string,\n        clockSpeed: number,\n        clockSpeedUnits: string,\n        power: number,\n        powerUnits: string,\n        wordSize: number,\n        wordSizeUnits: string,\n        transistorSize: number,\n        passmark: number,\n        transistors: number,\n        \n        id?: number,\n    ){\n        super(name, family, description, initYear, endYear, periodId, price, priceUnits, devices, imgNames, famousSystem, famousSystemImg, CompTypes.cpu, id);\n        \n        this.program_memory = programMemory;\n        this.program_memory_units = programMemoryUnits;\n        this.ram_memory = ramMemory;\n        this.ram_memory_units = ramMemoryUnits;\n        this.clockspeed = clockSpeed;\n        this.clockspeed_units = clockSpeedUnits;\n        this.cpu_power = power;\n        this.cpu_power_units = powerUnits;\n        this.wordsize = wordSize;\n        this.wordsize_units = wordSizeUnits;\n        this.transistor_size = transistorSize;\n        this.transistor_size_units = \"nm\";\n        this.passmark = passmark;\n        this.transistors = transistors;\n    }\n\n    equals(c: Cpu): boolean {\n        return super.equals(c) && this.program_memory === c.program_memory && this.program_memory_units === c.program_memory_units && this.ram_memory === c.ram_memory && this.ram_memory_units === c.ram_memory_units\n            && this.clockspeed === c.clockspeed && this.clockspeed_units === c.clockspeed_units && this.cpu_power === c.cpu_power && this.cpu_power_units === c.cpu_power_units && this.wordsize === c.wordsize && this.wordsize_units === c.wordsize_units\n            && this.transistor_size === c.transistor_size && this.passmark === c.passmark && this.transistors === c.transistors;\n    }\n\n    cloneComp(): Cpu {\n        return new Cpu(this.component_name, this.component_family, this.component_description, this.component_year_init, this.component_year_end, this.component_period_id, this.component_price, this.component_price_units, this.component_devices.split(','), this.component_imgs, this.famous_system, this.famous_system_img, this.program_memory, this.program_memory_units, \n        this.ram_memory, this.ram_memory_units, this.clockspeed, this.clockspeed_units, this.cpu_power, this.cpu_power_units, this.wordsize, this.wordsize_units, this.transistor_size, this.passmark, this.transistors, this.component_id);\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MyComponentComponent.html":{"url":"components/MyComponentComponent.html","title":"component - MyComponentComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  MyComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/my-component/my-component.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-component\n            \n\n            \n                styleUrls\n                ./my-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                c\n                            \n                            \n                                imgUrl\n                            \n                            \n                                loaded\n                            \n                            \n                                p\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getImages\n                            \n                            \n                                getPeriod\n                            \n                            \n                                goBack\n                            \n                            \n                                isDesktop\n                            \n                            \n                                isPortable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, componentService: ComponentService, periodService: PeriodService, _location: Location, gallery: Gallery)\n                    \n                \n                        \n                            \n                                Definido en src/app/my-component/my-component.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentService\n                                                  \n                                                        \n                                                                        ComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gallery\n                                                  \n                                                        \n                                                                    Gallery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:40\n                \n            \n\n\n            \n                \n                    Obtiene el componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del componente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImages\n                        \n                    \n                \n            \n            \n                \ngetImages(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:59\n                \n            \n\n\n            \n                \n                    Obtiene las imágenes del componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del componente del que se obtienen las imágenes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:72\n                \n            \n\n\n            \n                \n                    Obtiene el periodo\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del periodo al que pertenece el componente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:95\n                \n            \n\n\n            \n                \n                    Vuelve a la página anterior\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        si el componente es usado en dispositivos de escritorio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPortable\n                        \n                    \n                \n            \n            \n                \nisPortable()\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        si el componente es usado en dispositivos portátiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGallery\n                        \n                    \n                \n            \n            \n                \nshowGallery(index: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/my-component/my-component.component.ts:103\n                \n            \n\n\n            \n                \n                    Abre una galería con las imágenes del componente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : índice de la imagen que se abre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent\n\n                    \n                \n                    \n                        \n                                Definido en src/app/my-component/my-component.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseImgUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/my-component/my-component.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en src/app/my-component/my-component.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/my-component/my-component.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         CompTypes\n\n                    \n                \n                    \n                        \n                                Definido en src/app/my-component/my-component.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Gallery } from 'angular-gallery';\nimport { Location } from '@angular/common';\nimport { CompDevices, CompTypes, GenericComp, MyComponent, Cpu } from './../classes/comp';\nimport { ComponentService } from '../services/component.service';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponentComponent implements OnInit {\n\n  loaded = false;\n\n  imgUrl = environment.baseImgUrl; // url de la carpeta en la que se guardan las imágenes\n\n  c: MyComponent; // componente\n  p: Period; // periodo al que pertenece el componente\n\n  type: CompTypes; // tipo del componente\n\n  constructor(private route: ActivatedRoute, private componentService: ComponentService, private periodService: PeriodService, private _location: Location, private gallery: Gallery) { }\n\n  ngOnInit(): void {\n    // saca el id del componente\n    const routeParams = this.route.snapshot.paramMap;\n\t  const idFromRoute = Number(routeParams.get('compId'));\n    this.getComponent(idFromRoute);\n  }\n  \n  /**\n   * Obtiene el componente \n   * @param id : id del componente \n   */\n  getComponent(id: number) {\n\t  this.componentService.getComponent(id).subscribe((c: Cpu) => {\n      if (c.component_type == CompTypes.cpu) {\n        this.c = new Cpu(c.component_name, c.component_family, c.component_description, c.component_year_init, c.component_year_end, c.component_period_id, c.component_price, c.component_price_units, c.component_devices.split(','), [], c.famous_system, c.famous_system_img,\n        c.program_memory, c.program_memory_units, c.ram_memory, c.ram_memory_units,c.clockspeed, c.clockspeed_units, c.cpu_power, c.cpu_power_units, c.wordsize, c.wordsize_units, c.transistor_size, c.passmark, c.transistors, id);\n        this.type = CompTypes.cpu;\n      } else {\n        this.c = new GenericComp(c.component_name, c.component_family, c.component_description, c.component_year_init, c.component_year_end, c.component_period_id, c.component_price, c.component_price_units, c.component_devices.split(','), [], c.famous_system, c.famous_system_img, c.component_type, id);\n        this.type = CompTypes.generic;\n      }\n      this.getImages(this.c.component_id);\n      this.getPeriod(this.c.component_period_id);\n    }); \n  }\n\n  /**\n   * Obtiene las imágenes del componente \n   * @param id : id del componente del que se obtienen las imágenes\n   */\n  getImages(id: number) {\n    this.componentService.getComponentImgs(id).subscribe((imgs: {image}[]) => {\n      imgs.forEach((i) => {\n        this.c.component_imgs.push(i.image);\n      })\n      this.loaded = true;\n    });\n  }\n\n  /**\n   * Obtiene el periodo\n   * @param id : id del periodo al que pertenece el componente\n   */\n  getPeriod(id: number) {\n    this.periodService.getPeriod(id).subscribe((period: Period) => this.p = period);\n  }\n\n  /**\n   * \n   * @returns si el componente es usado en dispositivos portátiles\n   */\n  isPortable() {\n    return this.c.component_devices.split(',').includes(CompDevices.portable);\n  }\n\n  /**\n   * \n   * @returns si el componente es usado en dispositivos de escritorio\n   */\n  isDesktop() {\n    return this.c.component_devices.split(',').includes(CompDevices.desktop);\n  }\n\n  /**\n   * Vuelve a la página anterior\n   */\n  goBack() {\n    this._location.back();\n  }\n\n  /**\n   * Abre una galería con las imágenes del componente\n   * @param index : índice de la imagen que se abre \n   */\n  showGallery(index: number) {\n    let imgs = [];\n    this.c.component_imgs.forEach((i) => {imgs.push({path: this.imgUrl + i});})\n    let prop = {\n        images: imgs,\n        index \n    };\n    this.gallery.load(prop);\n}\n\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            {{ c.component_name }}\n            Editar\n        \n        \n            \n                Periodo{{p.period_name}}\n                Familia{{c.component_family}}\n                Años{{c.component_year_init}} - {{c.component_year_end}}\n            \n            \n                Precio{{c.component_price}}{{c.component_price_units}}\n                DispositivosPortátiles.&nbsp;De escritorio.&nbsp;\n            \n            \n                \n                    \n                  \n            \n        \n        Descripción{{c.component_description}}\n        \n        \n    \n\n    \n\n    \n                \n                    ./my-component.component.css\n                \n                p {\n    text-align: justify;\n}\n\n.gallery {\n  max-width: 600px;\n  position: relative;\n  margin: auto;\n  display: flex;\n  float:left;\n  overflow-x: auto;\n  padding-bottom: 20px;\n}\n\n.gallery img {\n  height: 100px;\n  width: auto;\n  margin-right: 5px;\n}\n\n.row {\n  margin-left: 0;\n}\n\n.lightbox-div {\n  opacity: 0.3;\n}\n\n.lightbox-div img.show {\n  opacity: 1;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ c.component_name }}            Editar                                            Periodo{{p.period_name}}                Familia{{c.component_family}}                Años{{c.component_year_init}} - {{c.component_year_end}}                                        Precio{{c.component_price}}{{c.component_price_units}}                DispositivosPortátiles. De escritorio.                                                                                                           Descripción{{c.component_description}}                    '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/Period.html":{"url":"classes/Period.html","title":"class - Period","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  Period\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/classes/period.ts\n        \n\n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                famousSystems\n                            \n                            \n                                period_details\n                            \n                            \n                                period_events\n                            \n                            \n                                period_id\n                            \n                            \n                                period_name\n                            \n                            \n                                period_trivia\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, trivia: string, details: string, events: string, id?: number)\n                    \n                \n                        \n                            \n                                Definido en src/app/classes/period.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trivia\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Si\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        famousSystems\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type[]\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        period_details\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        period_events\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        period_id\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        period_name\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        period_trivia\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/classes/period.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/classes/period.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Period {\n\n    period_id: number;\n    period_name: string;\n    period_trivia: string;\n    period_details: string;\n    period_events: string;\n    famousSystems: {name: string, img: string, sysName: string}[];\n\n    constructor(\n        name: string,\n        trivia: string,\n        details: string,\n        events: string,\n        \n        id?: number,\n    ){\n        this.period_id = id;\n        this.period_name = name;\n        this.period_trivia = trivia;\n        this.period_details = details;\n        this.period_events = events;\n        \n    }\n\n    equals(p: Period): boolean {\n        return this.period_name === p.period_name && this.period_trivia === p.period_trivia && this.period_details === p.period_details && this.period_events === p.period_events;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/PeriodComponent.html":{"url":"components/PeriodComponent.html","title":"component - PeriodComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  PeriodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/period/period.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-period\n            \n\n            \n                styleUrls\n                ./period.component.css\n            \n\n\n\n            \n                templateUrl\n                ./period.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                comps\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                imgUrl\n                            \n                            \n                                p\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComponent\n                            \n                            \n                                getComponents\n                            \n                            \n                                getPeriod\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, periodService: PeriodService, dialog: MatDialog, snackBar: MatSnackBar, componentService: ComponentService)\n                    \n                \n                        \n                            \n                                Definido en src/app/period/period.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentService\n                                                  \n                                                        \n                                                                        ComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(c: MyComponent)\n                \n            \n\n\n            \n                \n                    Definido en src/app/period/period.component.ts:63\n                \n            \n\n\n            \n                \n                    Elimina un periodo de la lista\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MyComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : componente que se va a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponents\n                        \n                    \n                \n            \n            \n                \ngetComponents()\n                \n            \n\n\n            \n                \n                    Definido en src/app/period/period.component.ts:47\n                \n            \n\n\n            \n                \n                    Obtiene la lista de componentes pertenecientes al periodo y el sistema famoso correspondiente a cada uno\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod(id: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/period/period.component.ts:37\n                \n            \n\n\n            \n                \n                    Obtiene el periodo y sus componentes\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : id del periodo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/period/period.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        comps\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MyComponent[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/period/period.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     MatDialog\n\n                    \n                \n                    \n                        \n                                Definido en src/app/period/period.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseImgUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/period/period.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        p\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                    \n                        \n                                Definido en src/app/period/period.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { MyComponent } from './../classes/comp';\nimport { ComponentService } from '../services/component.service';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { Period } from './../classes/period';\nimport { PeriodService } from '../services/period.service';\n\n@Component({\n  selector: 'app-period',\n  templateUrl: './period.component.html',\n  styleUrls: ['./period.component.css']\n})\nexport class PeriodComponent implements OnInit {\n\n  imgUrl = environment.baseImgUrl;\n\n  p: Period; // periodo\n  comps: MyComponent[] = []; // componentes pertenecientes al periodo\n\n  constructor(private route: ActivatedRoute, private periodService: PeriodService, public dialog: MatDialog, private snackBar: MatSnackBar, private componentService: ComponentService) { }\n\n  ngOnInit(): void {\n    // saca el id del periodo\n    const routeParams = this.route.snapshot.paramMap;\n\t  const idFromRoute = Number(routeParams.get('periodId'));\n    this.getPeriod(idFromRoute);\n  }\n\n  /**\n   * Obtiene el periodo y sus componentes\n   * @param id : id del periodo \n   */\n  getPeriod(id: number) {\n    this.periodService.getPeriod(id).subscribe((period: Period) => {\n      this.p = new Period(period.period_name, period.period_trivia, period.period_details, period.period_events, id);\n      this.getComponents();\n    });\n  }\n\n  /**\n   * Obtiene la lista de componentes pertenecientes al periodo y el sistema famoso correspondiente a cada uno\n   */\n  getComponents() {\n    this.componentService.getComponentsFromPeriod(this.p.period_id).subscribe((comps: MyComponent[]) => {\n      this.comps = comps;\n      let famousSys = [];\n      this.comps.forEach((c: MyComponent) => {\n        if (c.famous_system_img !== \"\" && c.famous_system !== \"\") \n          famousSys.push({name: c.component_name, img: c.famous_system_img, sysName: c.famous_system})\n      });\n      this.p.famousSystems = famousSys;\n    });\n  }\n\n  /**\n   * Elimina un periodo de la lista\n   * @param c : componente que se va a eliminar\n   */\n  deleteComponent(c: MyComponent) {\n    this.dialog\n      .open(ConfirmationDialogComponent, {data:`¿Desea eliminar el componente ${c.component_name}?`})\n      .afterClosed()\n      .subscribe((confirmed: boolean) => {\n        if (confirmed)\n          this.componentService.deleteComponent(c.component_id).subscribe(() => {\n            this.getComponents();\n            this.snackBar.open('Componente eliminado', 'Cerrar', { duration: 1500 });\n          });\n      });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n            {{ p.period_name }}\n            Editar\n        \n        Detalles\n        \n            {{d}}\n        \n        Sabías qué...\n        \n            {{t}}\n        \n        Eventos\n        \n            {{e}}\n        \n        Sistemas famosos\n        \n            \n              {{s.name}}\n              \n              {{s.sysName}}\n            \n        \n        Componentes\n        \n            \n                Nombre\n                {{comp.component_name}}\n            \n            \n                Editar\n                \n            \n            \n                Eliminar\n                \n            \n\n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./period.component.css\n                \n                li {\n    list-style: none;\n}\n\n.systems {\n  margin-top: 1.5%;\n  margin-bottom: 1.5%;\n    max-width: 800px;\n    position: relative;\n    display: flex;\n  }\n\n  .img-systems {\n    max-width: 130px;\n    position: relative;\n    min-height: 210px;\n  }\n\n  .name-link {\n    position: absolute;\n    bottom: 0;\n  }\n\n  .systems img {\n    width: 120px;\n    height: auto;\n  }\n\n  .mat-elevation-z8 {\n    margin-top: 1.5%;\n  }\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ p.period_name }}            Editar                Detalles                    {{d}}                Sabías qué...                    {{t}}                Eventos                    {{e}}                Sistemas famosos                                  {{s.name}}                            {{s.sysName}}                            Componentes                                    Nombre                {{comp.component_name}}                                        Editar                                                        Eliminar                                                                '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PeriodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/PeriodInputsComponent.html":{"url":"components/PeriodInputsComponent.html","title":"component - PeriodInputsComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  PeriodInputsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/period-inputs/period-inputs.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-period-inputs\n            \n\n            \n                styleUrls\n                ./period-inputs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./period-inputs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/period-inputs/period-inputs.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Tipo :         Period\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/period-inputs/period-inputs.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/period-inputs/period-inputs.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Period } from './../classes/period';\n\n@Component({\n  selector: 'app-period-inputs',\n  templateUrl: './period-inputs.component.html',\n  styleUrls: ['./period-inputs.component.css']\n})\nexport class PeriodInputsComponent implements OnInit {\n\n  @Input() model: Period; // objeto asignado al formulario sobre el que se realizan los cambios\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Nombre:\n    \n        \n        Complete este campo\n    \n        \n\n\n    Detalles:\n    \n        \n        Complete este campo\n    \n\n\n    Sabías que... Introduzca cada característica en una línea\n    \n        \n        Complete este campo\n    \n\n\n    Eventos: Introduzca cada evento en una línea\n    \n        \n        Complete este campo\n                    \n\n    \n\n    \n                \n                    ./period-inputs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Nombre:                    Complete este campo                Detalles:                    Complete este campo        Sabías que... Introduzca cada característica en una línea                    Complete este campo        Eventos: Introduzca cada evento en una línea                    Complete este campo                    '\n    var COMPONENTS = [{'name': 'AddCompComponent', 'selector': 'app-add-comp'},{'name': 'AddPeriodComponent', 'selector': 'app-add-period'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompInputsComponent', 'selector': 'app-comp-inputs'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'CpuTypeDetailsComponent', 'selector': 'app-cpu-type-details'},{'name': 'CpuTypeFormComponent', 'selector': 'app-cpu-type-form'},{'name': 'FormEditCompComponent', 'selector': 'app-edit-comp'},{'name': 'FormEditPeriodComponent', 'selector': 'app-edit-period'},{'name': 'ListPeriodsComponent', 'selector': 'app-list-periods'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyComponentComponent', 'selector': 'app-my-component'},{'name': 'PeriodComponent', 'selector': 'app-period'},{'name': 'PeriodInputsComponent', 'selector': 'app-period-inputs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PeriodInputsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/PeriodMock.html":{"url":"classes/PeriodMock.html","title":"class - PeriodMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  PeriodMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/testing/mock-periods.ts\n        \n\n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                periods\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                addPeriod\n                            \n                            \n                                deletePeriod\n                            \n                            \n                                editPeriod\n                            \n                            \n                                getAll\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPeriodByName\n                            \n                            \n                                    Static\n                                getPeriods\n                            \n                            \n                                    Static\n                                resetPeriods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        periods\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Period[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : [\n            new Period('CPUs pre-x86','Intel originalmente fabricaba solo chips de memoria y se inició en la fabricación de CPUs con estos modelos.\\nEstos chips no tienen memoria caché ni tiene sentido hablar de velocidad de bus.',\n            'El 4004 formaba parte de la familia de chips MCS, que complementaban sus funciones.\\nSus sucesores 4040, 8080 y 8085 tenían su propia familia de chips de soporte.',\n            '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD', 1),\n            new Period('8086 y 8088', 'En 1981 IBM quería crear su PC con CPUs Intel, pero a condición de que existiese un 2º productor de las mismas.\\nPor ello, Intel y AMD hicieron un acuerdo de intercambio tecnológico de 10 años.',\n                'CPUs x86, de 16 bits y primera generación.\\nSe diseñaron para que portar programas de su antecesor (Intel 8080) fuera automático.',\n                '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD',2)\n        ]\n                    \n                \n                    \n                        \n                                Definido en src/app/services/testing/mock-periods.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        addPeriod\n                        \n                    \n                \n            \n            \n                \naddPeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePeriod\n                        \n                    \n                \n            \n            \n                \ndeletePeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editPeriod\n                        \n                    \n                \n            \n            \n                \neditPeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod(id)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriodByName\n                        \n                    \n                \n            \n            \n                \ngetPeriodByName(pName: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    pName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getPeriods\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPeriods()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resetPeriods\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPeriods()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-periods.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { of } from \"rxjs\";\nimport { Period } from \"../../classes/period\";\n\nexport class PeriodMock {\n\n    public static periods: Period[] = [\n            new Period('CPUs pre-x86','Intel originalmente fabricaba solo chips de memoria y se inició en la fabricación de CPUs con estos modelos.\\nEstos chips no tienen memoria caché ni tiene sentido hablar de velocidad de bus.',\n            'El 4004 formaba parte de la familia de chips MCS, que complementaban sus funciones.\\nSus sucesores 4040, 8080 y 8085 tenían su propia familia de chips de soporte.',\n            '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD', 1),\n            new Period('8086 y 8088', 'En 1981 IBM quería crear su PC con CPUs Intel, pero a condición de que existiese un 2º productor de las mismas.\\nPor ello, Intel y AMD hicieron un acuerdo de intercambio tecnológico de 10 años.',\n                'CPUs x86, de 16 bits y primera generación.\\nSe diseñaron para que portar programas de su antecesor (Intel 8080) fuera automático.',\n                '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD',2)\n        ];\n\n    getPeriod(id) {\n        return of(PeriodMock.periods[0]);\n    }\n\n    getAll() {\n        return of(PeriodMock.periods);\n    }\n\n    addPeriod(p: Period) {\n        if (PeriodMock.periods.filter(e => e.period_name == p.period_name).length > 0)\n            return of({error: \"error\"});\n        PeriodMock.periods.push(p);\n        return of({next: \"guardado\"});\n    }\n\n    editPeriod(p: Period) {\n        let editado = false;\n        PeriodMock.periods.forEach((period, index) => {\n            if (period.period_id == p.period_id) {\n                PeriodMock.periods.splice(index, 1, p);\n                editado = true;\n            }\n        });\n        if (editado)\n            return of({next: \"guardado\"});\n        return of({error: \"Error\"});\n    }\n\n    deletePeriod(p: Period) {\n        let borrado = false;\n        PeriodMock.periods.forEach((period, index) => {\n            if (period.period_id == p.period_id) {\n                PeriodMock.periods.splice(index, 1);\n                borrado = true;\n            }\n        });\n        if (borrado)\n            return of({next: \"borrado\"});\n        return of({error: \"Error\"});\n    }\n\n    getPeriodByName(pName: string) {\n        return of(PeriodMock.periods[0]);\n    }\n\n    static getPeriods() {\n        return this.periods;\n    }\n\n    static resetPeriods() {\n        this.periods = [\n            new Period('CPUs pre-x86','Intel originalmente fabricaba solo chips de memoria y se inició en la fabricación de CPUs con estos modelos.\\nEstos chips no tienen memoria caché ni tiene sentido hablar de velocidad de bus.',\n            'El 4004 formaba parte de la familia de chips MCS, que complementaban sus funciones.\\nSus sucesores 4040, 8080 y 8085 tenían su propia familia de chips de soporte.',\n            '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD', 1),\n            new Period('8086 y 8088', 'En 1981 IBM quería crear su PC con CPUs Intel, pero a condición de que existiese un 2º productor de las mismas.\\nPor ello, Intel y AMD hicieron un acuerdo de intercambio tecnológico de 10 años.',\n                'CPUs x86, de 16 bits y primera generación.\\nSe diseñaron para que portar programas de su antecesor (Intel 8080) fuera automático.',\n                '1970: Apollo 13\\n1971: email\\n1971: Floppy, pantallas LCD',2)\n        ];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/PeriodService.html":{"url":"injectables/PeriodService.html","title":"injectable - PeriodService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  PeriodService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/period.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                addPeriod\n                            \n                            \n                                deletePeriod\n                            \n                            \n                                editPeriod\n                            \n                            \n                                getAll\n                            \n                            \n                                getPeriod\n                            \n                            \n                                getPeriodByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/period.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        addPeriod\n                        \n                    \n                \n            \n            \n                \naddPeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePeriod\n                        \n                    \n                \n            \n            \n                \ndeletePeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editPeriod\n                        \n                    \n                \n            \n            \n                \neditPeriod(p: Period)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriod\n                        \n                    \n                \n            \n            \n                \ngetPeriod(pId: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    pId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPeriodByName\n                        \n                    \n                \n            \n            \n                \ngetPeriodByName(pName: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/period.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    pName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/services/period.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Period } from '../classes/period';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodService {\n\n  baseUrl = environment.baseUrl;\n\n\n  constructor(private http: HttpClient) { }\n\n  addPeriod(p: Period) {\n    return this.http.post(`${this.baseUrl}/postPeriod.php`, p);\n  }\n\n  editPeriod(p: Period) {\n    return this.http.put(`${this.baseUrl}/updatePeriod.php`, p);\n  }\n\n  deletePeriod(p: Period) {\n    return this.http.delete(`${this.baseUrl}/deletePeriod.php?idPeriod=${p.period_id}`);\n  }\n\n  getPeriod(pId: number) {\n    return this.http.get(`${this.baseUrl}/getPeriod.php?idPeriod=${pId}`);\n  }\n\n  getPeriodByName(pName: string) {\n    return this.http.get(`${this.baseUrl}/getPeriodName.php?namePeriod=${pName}`);\n  }\n\n  getAll() {\n    return this.http.get(`${this.baseUrl}/getAllPeriod.php`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/UserMock.html":{"url":"classes/UserMock.html","title":"class - UserMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  UserMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/testing/mock-user.ts\n        \n\n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                token\n                            \n                            \n                                    Static\n                                userLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                deleteToken\n                            \n                            \n                                    Static\n                                getToken\n                            \n                            \n                                isLogged\n                            \n                            \n                                login\n                            \n                            \n                                    Static\n                                resetUser\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         String\n\n                    \n                \n                \n                    \n                        Valor por defecto : \"\"\n                    \n                \n                    \n                        \n                                Definido en src/app/services/testing/mock-user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        userLogged\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en src/app/services/testing/mock-user.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteToken\n                        \n                    \n                \n            \n            \n                \ndeleteToken()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogged\n                        \n                    \n                \n            \n            \n                \nisLogged()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: string, password: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resetUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetUser()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/testing/mock-user.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { of } from \"rxjs\";\n\nexport class UserMock {\n\n    static userLogged = false;\n    static token: String = \"\";\n    \n    login(user: string, password: string) {\n        if (user == \"uo257829@uniovi.es\" && password == \"museoinfo2022\")\n            return of({email: user});\n        return of ({error: \"Error\"});\n    }\n\n    setToken(token: string) {\n        UserMock.token = token;\n        UserMock.userLogged = true;\n    }\n\n    public static getToken() {\n        return UserMock.token;\n    }\n\n    deleteToken() {\n        UserMock.token = \"\";\n        UserMock.userLogged = false;\n    }\n\n    isLogged(): boolean {\n        return UserMock.userLogged;\n    }\n\n    public static resetUser() {\n        UserMock.token = \"\";\n        UserMock.userLogged = false;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                deleteToken\n                            \n                            \n                                getToken\n                            \n                            \n                                isLogged\n                            \n                            \n                                login\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookies: CookieService)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookies\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteToken\n                        \n                    \n                \n            \n            \n                \ndeleteToken()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogged\n                        \n                    \n                \n            \n            \n                \nisLogged()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: string, password: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.baseUrl\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.baseUrl;\n\n  constructor(private http: HttpClient, private cookies: CookieService) { }\n\n  login(user: string, password: string) {\n    return this.http.post(`${this.baseUrl}/login.php`, {user, password});\n  }\n\n  setToken(token: string) {\n    this.cookies.set(\"token\", token);\n    localStorage.setItem(\"session\", JSON.stringify(token));\n  }\n\n  getToken() {\n    return this.cookies.get(\"token\");\n  }\n\n  deleteToken() {\n    this.cookies.delete(\"token\");\n    localStorage.removeItem(\"session\");\n  }\n\n  isLogged(): boolean {\n    return localStorage.getItem(\"session\") ? true : false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/localize : ~10.2.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.4\n        \n            angular-gallery : ^1.0.2\n        \n            bootstrap : ^4.5.0\n        \n            ionicons : ^6.0.0\n        \n            ngx-cookie-service : ^12.0.3\n        \n            ngx-toastr : ^10.2.0\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Enumeraciones\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            CompDevices   (src/.../comp.ts)\n                        \n                        \n                            CompTypes   (src/.../comp.ts)\n                        \n                        \n                            MemoryUnits   (src/.../comp.ts)\n                        \n                        \n                            PowerUnits   (src/.../comp.ts)\n                        \n                        \n                            PriceUnits   (src/.../comp.ts)\n                        \n                        \n                            SpeedUnits   (src/.../comp.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/comp.ts\n    \n        \n            \n                \n                    \n                        \n                        CompDevices\n                    \n                \n                        \n                            \n                                 desktop\n                            \n                        \n                        \n                            \n                                Valor : DESKTOP\n                            \n                        \n                        \n                            \n                                 portable\n                            \n                        \n                        \n                            \n                                Valor : PORTABLE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CompTypes\n                    \n                \n                        \n                            \n                                 cpu\n                            \n                        \n                        \n                            \n                                Valor : CPU\n                            \n                        \n                        \n                            \n                                 generic\n                            \n                        \n                        \n                            \n                                Valor : COMPONENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MemoryUnits\n                    \n                \n                        \n                            \n                                 bit\n                            \n                        \n                        \n                            \n                                Valor : b\n                            \n                        \n                        \n                            \n                                 byte\n                            \n                        \n                        \n                            \n                                Valor : B\n                            \n                        \n                        \n                            \n                                 kilobyte\n                            \n                        \n                        \n                            \n                                Valor : KB\n                            \n                        \n                        \n                            \n                                 megabyte\n                            \n                        \n                        \n                            \n                                Valor : MB\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PowerUnits\n                    \n                \n                        \n                            \n                                 watios\n                            \n                        \n                        \n                            \n                                Valor : W\n                            \n                        \n                        \n                            \n                                 kilowatios\n                            \n                        \n                        \n                            \n                                Valor : KW\n                            \n                        \n                        \n                            \n                                 megawatios\n                            \n                        \n                        \n                            \n                                Valor : MW\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PriceUnits\n                    \n                \n                        \n                            \n                                 euro\n                            \n                        \n                        \n                            \n                                Valor : €\n                            \n                        \n                        \n                            \n                                 dolar\n                            \n                        \n                        \n                            \n                                Valor : $\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpeedUnits\n                    \n                \n                        \n                            \n                                 herz\n                            \n                        \n                        \n                            \n                                Valor : Hz\n                            \n                        \n                        \n                            \n                                 kiloherz\n                            \n                        \n                        \n                            \n                                Valor : KHz\n                            \n                        \n                        \n                            \n                                 megaherz\n                            \n                        \n                        \n                            \n                                Valor : MHz\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAddCompComponent\n\nAddCompComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddCompComponent->AppModule\n\n\n\n\n\nAddPeriodComponent\n\nAddPeriodComponent\n\nAppModule -->\n\nAddPeriodComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompInputsComponent\n\nCompInputsComponent\n\nAppModule -->\n\nCompInputsComponent->AppModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nAppModule -->\n\nConfirmationDialogComponent->AppModule\n\n\n\n\n\nCpuTypeDetailsComponent\n\nCpuTypeDetailsComponent\n\nAppModule -->\n\nCpuTypeDetailsComponent->AppModule\n\n\n\n\n\nCpuTypeFormComponent\n\nCpuTypeFormComponent\n\nAppModule -->\n\nCpuTypeFormComponent->AppModule\n\n\n\n\n\nFormEditCompComponent\n\nFormEditCompComponent\n\nAppModule -->\n\nFormEditCompComponent->AppModule\n\n\n\n\n\nFormEditPeriodComponent\n\nFormEditPeriodComponent\n\nAppModule -->\n\nFormEditPeriodComponent->AppModule\n\n\n\n\n\nListPeriodsComponent\n\nListPeriodsComponent\n\nAppModule -->\n\nListPeriodsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMyComponentComponent\n\nMyComponentComponent\n\nAppModule -->\n\nMyComponentComponent->AppModule\n\n\n\n\n\nPeriodComponent\n\nPeriodComponent\n\nAppModule -->\n\nPeriodComponent->AppModule\n\n\n\n\n\nPeriodInputsComponent\n\nPeriodInputsComponent\n\nAppModule -->\n\nPeriodInputsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Módulos\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Componentes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Clases\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guardia\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interfaz\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Rutas\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Propiedades\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Rutas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Variables\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         object\n\n                    \n                \n                \n                    \n                        Valor por defecto : {\n  production: true,\n  baseUrl: 'http://156.35.163.193/php',\n  baseImgUrl: 'http://156.35.163.193/php/upload/',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         object\n\n                    \n                \n                \n                    \n                        Valor por defecto : {\n  production: false,\n  baseUrl: 'http://156.35.163.193/php',\n  baseImgUrl: 'http://156.35.163.193/php/upload/',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
